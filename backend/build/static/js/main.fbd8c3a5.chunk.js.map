{"version":3,"sources":["redux/slices/userDataSlice.js","redux/slices/searchDataSlice.js","redux/store.js","components/AlertNotification.js","components/ScreenTitle.js","data/categoryQueryFunctions.js","data/postQueryFunctions.js","data/userQueryFunctions.js","definitions/reactQueryConstants/queryConstants.js","styles/adminHomeStyles.js","utils/dataFormat.js","screens/admin/dashboard/AdminHomeScreen.js","assets/homeBg.svg","components/UserModal.js","assets/login.svg","screens/general/LoginScreen.js","assets/register.svg","screens/general/RegisterScreen.js","components/ExpandedPostSummaryLoader.js","components/ExpandedPostSummaryLoaderDeck.js","components/PostSummaryCardLoader.js","components/PostSummaryCardLoaderDeck.js","components/CategoryLoaderDeck.js","utils/dateUtils.js","components/ExpandedPostSummaryCard.js","components/HomeAllPostsDeck.js","components/PostSummaryCard.js","components/HomeLatestPostsDeck.js","components/HomeCategoriesDeck.js","screens/general/HomeScreen.js","theme/theme.js","layout/AdminLayout.js","definitions/gridColDef/userGrids.js","screens/admin/users/SignupScreen.js","components/AdminModal.js","screens/admin/users/EditUserScreen.js","components/AdminDeleteConfirmation.js","screens/admin/users/AdminUserDeleteScreen.js","screens/admin/users/AdminUsers.js","definitions/gridColDef/categoryGrids.js","styles/adminCategoryStyles.js","screens/admin/categories/CreateCategoryScreen.js","screens/admin/categories/EditCategoryScreen.js","screens/admin/categories/DeleteCategoryScreen.js","screens/admin/categories/AdminCategories.js","definitions/gridColDef/postGrids.js","screens/admin/posts/DeletePostScreen.js","styles/adminPostStyles.js","screens/admin/posts/AdminPosts.js","definitions/editorModules.js","screens/admin/posts/CreatePostScreen.js","screens/admin/posts/EditPostScreen.js","components/AdminProfileDataRow.js","styles/adminProfileStyles.js","screens/admin/profile/EditProfileScreen.js","screens/admin/profile/AdminProfile.js","screens/user/Dashboard/UserDashboard.js","layout/UserLayout.js","screens/user/posts/DeleteUserPostScreen.js","screens/user/posts/UserPosts.js","styles/userProfileStyles.js","screens/user/profile/EditUserProfileScreen.js","screens/user/profile/UserProfile.js","screens/user/posts/UserCreatePostScreen.js","screens/user/posts/EditUserPostScreen.js","assets/appIcon.svg","components/SearchLink.js","components/Navbar.js","components/NavLink.js","components/Footer.js","components/ItemMenu.js","components/ItemMenuElement.js","layout/GeneralLayout.js","components/PostComment.js","components/PostCommentDeck.js","components/PostTag.js","components/PostTagDeck.js","data/commentQueryFunctions.js","screens/general/CreateCommentScreen.js","screens/general/DeleteCommentScreen.js","screens/general/EditCommentScreen.js","components/IndividualPostLoader.js","components/PostCommentLoader.js","screens/general/IndividualPostScreen.js","components/AuthorSummaryCard.js","components/AuthorSummaryCardDeck.js","components/AuthorSummaryCardLoader.js","components/AuthorSummaryCardLoaderDeck.js","screens/general/AuthorListScreen.js","assets/notFound.svg","screens/general/PostsByCategoryScreen.js","screens/general/PostByTagScreen.js","screens/general/AuthorProfileScreen.js","assets/404.svg","screens/general/NotFound.js","components/UserSummaryCard.js","components/UserSummaryCardDeck.js","screens/general/AboutUsScreen.js","screens/general/CategoryListScreen.js","screens/general/SearchResultScreen.js","App.js","reportWebVitals.js","index.js"],"names":["userData","localStorage","getItem","JSON","parse","initialState","user","userDataSlice","createSlice","name","reducers","storeUserData","state","action","payload","clearUserData","actions","searchDataSlice","searchQuery","storeSearchQuery","store","configureStore","reducer","userDataReducer","searchData","searchDataReducer","devTools","useStyles","makeStyles","theme","root","marginTop","spacing","maxWidth","marginLeft","marginRight","animation","zIndex","tooltip","top","left","windowAlert","position","marginBottom","AlertNotification","showState","alertText","closeHandler","alertSeverity","classes","Collapse","in","className","Alert","severity","IconButton","aria-label","color","size","onClick","fontSize","fontWeight","typography","fontWeightMedium","ScreenTitle","text","Typography","variant","component","getAllCategories","a","getState","config","headers","Authorization","token","axios","get","data","Error","message","getCategoryById","catId","createCategory","categoryData","post","updateCategoryById","updatedCategoryData","categoryId","values","put","deleteMultipleCategoriesById","id","delete","getCuratedCategoryList","getAllPosts","getPaginatedPosts","page","limit","getLatestPosts","getAllPostsByAuthorId","authorId","getPostById","postId","getPostByCategoryName","categoryName","params","category","getPostByTagName","tagName","tag","createPost","postData","formData","FormData","append","title","description","summary","tags","image","updatePostById","updatedPostData","deleteMultiplePostsById","getCuratedPostList","getCuratedPostListByAuthor","searchPosts","length","searchPostResults","signInUser","email","password","error","status","response","request","getAllUsers","getLatestUsers","createUser","bio","facebookId","linkedinId","twitterId","isAdmin","getUserById","userId","updateUser","updatedUserData","updateUserById","console","log","deleteMultipleUsersById","getCuratedUserList","USER_DATA","SINGLE_USER_DATA","CATEGORY_DATA","POST_DATA","SINGLE_POST_DATA","COMMENT_DATA","SINGLE_AUTHOR_DATA","adminHomeStyles","card","minWidth","height","cardItem","chart","chartContainer","cardContent","paddingBottom","formatDate","map","d","createdAt","Date","toLocaleDateString","updatedAt","formatData","type","uniqueDates","dateFormattedData","Set","getUniqueDates","date","count","filter","getAuthorNameInitials","author","split","np","index","sanitizeSocialURL","url","urlHandles","includes","replace","calculateReadingTime","str","Math","ceil","trim","countWords","convertToText","html","h2p","AdminHomeScreen","history","useHistory","useSelector","useTheme","useState","showErrorNotification","setShowErrorNotification","curatedUserData","setCuratedUserData","curatedPostData","setCuratedPostData","useQuery","isUserDataLoading","isLoading","isUserDataError","isError","isUserDataFetching","isFetching","isCategoryDataLoading","isCategoryDataError","isCategoryDataFetching","isPostDataLoading","isPostDataError","isPostDataFetching","useEffect","push","Grid","container","alignItems","justifyContent","item","xs","Card","CardContent","gutterBottom","align","justify","CircularProgress","sm","ResponsiveContainer","width","BarChart","margin","right","bottom","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","palette","primary","main","modal","display","modalContent","minHeight","breakpoints","down","modalContentExpanded","closeIcon","padding","UserModal","children","open","onClose","expanded","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","Paper","elevation","Box","button","formContent","paddingRight","paddingTop","alertContainer","validationSchema","yup","required","LoginScreen","handleModalClose","openRegistrationModal","showInvalidCredentialsAlert","setShowInvalidCredentialsAlert","dispatch","useDispatch","mutation","useMutation","onSuccess","onError","formik","useFormik","initialValues","onSubmit","mutate","src","LoginImg","alt","handleSubmit","TextField","fullWidth","label","value","onBlur","handleBlur","onChange","handleChange","touched","Boolean","errors","helperText","Link","href","setTimeout","Button","input","inputGroup","inputLabel","errorLabel","lineHeight","letterSpacing","min","confirmPassword","when","is","val","then","oneOf","otherwise","RegisterScreen","openLoginModal","showErrorAlert","setShowErrorAlert","errorMessage","setErrorMessage","queryClient","useQueryClient","invalidateQueries","RegisterImg","accept","multiple","event","setFieldValue","target","files","htmlFor","startIcon","multiline","minRows","lg","authorInfoContainer","authorInfoContainerMobile","avatar","metaContainer","meta","imageLoader","imageLoaderMobile","ExpandedPostSummaryLoader","Skeleton","ExpandedPostSummaryLoaderDeck","memo","Array","from","keys","_","PostSummaryCardLoader","PostSummaryCardLoaderDeck","CategoryLoaderDeck","i","getPostFormattedDate","month","day","year","flexDirection","authorName","textDecoration","postTitle","postDescription","textAlign","postMeta","grey","tagsChip","backgroundColor","cursor","postImage","objectFit","ExpandedPostSummaryCard","authorImageURL","postSummary","postCreationDate","postReadingTime","postTags","postImageURL","Avatar","to","Chip","toLowerCase","HomeAllPostsDeck","posts","_id","imageURL","authorImageFileName","imageFileName","subtitle1","PostSummaryCard","publishDate","HomeLatestPostsDeck","categoryChip","HomeCategoriesDeck","categories","header","headerTitle","h4","h3","headerContent","headerContentContainer","homeBg","subHeader","fontWeightLight","headerCallContainer","latestArticlesHeaderText","latestArticlesContainer","latestArticleHeader","allPostsContainer","categorySectionTitle","pxToRem","categoriesContainer","paginationContainer","HomeScreen","setOpenLoginModal","setOpenRegistrationModal","currentPage","setCurrentPage","allPostsContainerRef","useRef","refetchOnWindowFocus","refetchInterval","latestPostData","latestPostDataLoading","latestPostDataFetching","latestPostDataError","queryKey","keepPreviousData","allPostData","allPostDataLoading","allPostDataFetching","allPostDataError","allCategoryData","allCategoryDataLoading","allCategoryDataFectching","allCategoryDataError","handleLoginModalOpen","useCallback","handleLoginModalClose","handleRegistrationModalOpen","handleRegistrationModalClose","handlePageChange","window","scrollTo","current","offsetTop","Divider","ref","docs","Pagination","totalPages","createTheme","background","default","light","orange","dark","contrastText","secondary","disabled","drawer","flexShrink","drawerPaper","list","bottomList","content","flexGrow","drawerHeader","activeLink","AdminLayout","location","useLocation","Drawer","paper","anchor","List","ListItem","NavLink","activeClassName","ListItemIcon","People","pathname","ListItemText","Category","divider","Container","columns","field","hide","headerName","flex","SignupScreen","showSuccessAlertHandler","modalHeader","heading","AdminModal","modalOpenState","modalCloseHandler","modalTitle","modalIcon","EditUserScreen","AdminDeleteConfirmation","deleteAction","cancelAction","singleItem","AdminUserDeleteScreen","buttonGroup","dataGridContainer","AdminUsers","props","rows","showCreateModal","setShowCreateModal","showEditModal","setShowEditModal","showDeleteModal","setShowDeleteModal","showCreateSuccessAlert","setShowCreateSuccessAlert","showEditSuccessAlert","setShowEditSuccessAlert","showDeleteSuccessAlert","setShowDeleteSuccessAlert","selectedRows","setSelectedRows","editDisabled","setEditDisabled","deleteDisabled","setDeleteDisabled","handleModalOpen","modalType","ButtonGroup","Edit","Delete","loading","checkboxSelection","pageSize","onSelectionModelChange","e","selectionModel","components","Toolbar","GridToolbar","adminCategoryHomeStyles","adminCategoryCreateStyles","adminCategoryEditStyles","CreateCategoryScreen","EditCategoryScreen","DeleteCategoryScreen","AdminCategories","cat","Title","DeletePostScreen","adminPostHomeStyles","adminPostCreateStyles","formControl","editor","border","borderRadius","shape","paddingLeft","fontFamily","submitBtn","returnLink","adminPostEditStyles","AdminPosts","Author","Tags","join","hljs","configure","languages","modules","syntax","highlight","highlightAuto","toolbar","script","indent","max","CreatePostScreen","RouterLink","FormControl","InputLabel","Select","labelId","MenuItem","placeholder","editorData","EditPostScreen","editPostId","useParams","AdminProfileDataRow","adminProfileStyles","EditProfileScreen","dispatcher","AdminProfile","showProfileEditModal","setShowProfileEditModal","showAlert","setShowAlert","updateUserState","UserDashboard","UserLayout","DeleteUserPostScreen","UserPosts","userProfileStyles","EditUserProfileScreen","UserProfile","UserCreatePostScreen","EditUserPostScreen","font","alpha","SearchLink","mobileContainer","headerText","headerLink","headerImage","search","up","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","searchResult","searchMobile","flexBasis","Navbar","closeDrawerHandler","setSearchQuery","showSearchResultWindow","setShowSearchResultWindow","isHoveringOnSearchResult","setIsHoveringOnSearchResult","debouncedInput","debounce","hideSearchResultWindowHandler","AppBar","AppIcon","onMouseEnter","onMouseLeave","InputBase","inputProps","onFocus","onKeyDown","key","navLink","handler","icon","isLink","borderTop","footerTextContainer","footerTextHeader","footerTextBody","footerNavigationContainer","footerLogoImage","footerLogoText","Footer","Logo","getFullYear","ItemMenu","isIconButton","menuButtonContent","anchorEl","setAnchorEl","handleClick","currentTarget","aria-controls","aria-haspopup","disableRipple","Menu","keepMounted","ItemMenuElement","actionHandler","link","navbar","navbarMobile","navLinkContainerMobile","GeneralLayout","openDrawer","setOpenDrawer","handleLogout","direction","authorText","commentTextContainer","alignSelf","actionButtonContainer","visibility","PostComment","commentText","editHandler","deleteHandler","showCommentActions","edge","maxHeight","overflowY","PostCommentDeck","comments","comment","PostTag","tagsContainer","chip","PostTagDeck","getCommentsByPostId","getCommentByPostIdCommentId","commentId","updateCommentByPostIdCommentId","createCommentByPostId","deleteCommentById","hideAlert","CreateCommentScreen","DeleteCommentScreen","EditCommentScreen","socialLinks","IndividualPostLoader","PostCommentLoader","postImg","postContent","commentsHeader","loader","IndividualPostScreen","showDeleteCommentModal","setShowDeleteCommentModal","showEditCommentModal","setShowEditCommentModal","modificationCommentId","setModificationCommentId","isPostCommentLoading","postCommentData","isPostCommentFetching","enabled","isAuthorDataLoading","authorData","preventDefault","readOnly","handleDeleteComment","handleEditComment","imageContainer","authorImage","authorMeta","socialLink","AuthorSummaryCard","AuthorSummaryCardDeck","authorsData","AuthorSummaryCardLoader","AuthorSummaryCardLoaderDeck","emptyListMessage","AuthorListScreen","categoryTitle","textTransform","postsContainer","notFoundImage","PostsByCategoryScreen","postCategory","PostsByTagScreen","leftContainer","rightContainer","borderLeft","overflowX","fontWeightBold","authorNameLoader","socialLinkLoaderContainer","socialLinkLoader","AuthorProfileScreen","isAuthorDataError","authorPostData","isAuthorPostDataLoading","isAuthorPostDataError","heroText","NotFound","NotFoundImg","UserSummaryCard","userProfileImageURL","UserSummaryCardDeck","users","bold","logo","bgPrimary","getContrastText","bgDark","sectionText","section","AboutUsScreen","BlogenLogo","CategoryListScreen","SearchResultScreen","App","client","QueryClient","QueryClientProvider","ThemeProvider","CssBaseline","path","exact","initialIsOpen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbd8c3a5.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userData = localStorage.getItem(\"user\")\r\n  ? JSON.parse(localStorage.getItem(\"user\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  user: userData,\r\n};\r\n\r\nexport const userDataSlice = createSlice({\r\n  name: \"userData\",\r\n  initialState,\r\n  reducers: {\r\n    storeUserData: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    clearUserData: (state, action) => {\r\n      state.user = {};\r\n    },\r\n  },\r\n});\r\n\r\nexport const { storeUserData, clearUserData } = userDataSlice.actions;\r\nexport default userDataSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  searchQuery: \"\",\r\n};\r\n\r\nexport const searchDataSlice = createSlice({\r\n  name: \"searchData\",\r\n  initialState,\r\n  reducers: {\r\n    storeSearchQuery: (state, action) => {\r\n      state.searchQuery = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { storeSearchQuery } = searchDataSlice.actions;\r\nexport default searchDataSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userDataReducer from \"./slices/userDataSlice\";\r\nimport searchDataReducer from \"./slices/searchDataSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    userData: userDataReducer,\r\n    searchData: searchDataReducer,\r\n  },\r\n  devTools: true,\r\n});\r\n","import { Collapse, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n    maxWidth: \"40vw\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  animation: {\r\n    zIndex: theme.zIndex.tooltip,\r\n    top: 0,\r\n    left: \"50%\",\r\n  },\r\n  windowAlert: {\r\n    position: \"absolute\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst AlertNotification = ({\r\n  showState,\r\n  alertText,\r\n  closeHandler,\r\n  alertSeverity,\r\n  windowAlert,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Collapse\r\n      in={showState}\r\n      className={\r\n        windowAlert\r\n          ? `${classes.animation} ${classes.windowAlert}`\r\n          : classes.animation\r\n      }\r\n    >\r\n      <Alert\r\n        className={classes.root}\r\n        severity={alertSeverity}\r\n        action={\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            color=\"inherit\"\r\n            size=\"small\"\r\n            onClick={closeHandler}\r\n          >\r\n            <CloseIcon fontSize=\"inherit\" />\r\n          </IconButton>\r\n        }\r\n      >\r\n        {alertText}\r\n      </Alert>\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nexport default AlertNotification;\r\n","import { makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n  },\r\n}));\r\n\r\nconst ScreenTitle = ({ text, className }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Typography\r\n      variant=\"h5\"\r\n      component=\"h1\"\r\n      className={`${className} ${classes.root}`}\r\n      color=\"textPrimary\"\r\n    >\r\n      {text}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default ScreenTitle;\r\n","import axios from \"axios\";\r\nimport { store } from \"../redux/store\";\r\n\r\nexport const getAllCategories = async () => {\r\n  try {\r\n    const { userData } = store.getState();\r\n    const { user } = userData;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(\"/api/categories\", config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fecthing data. Error Message: ${err.message}`);\r\n  }\r\n};\r\nexport const getCategoryById = async (catId) => {\r\n  try {\r\n    const { userData } = store.getState();\r\n    const { user } = userData;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/categories/${catId}`, config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const createCategory = async (categoryData) => {\r\n  try {\r\n    const { userData } = store.getState();\r\n    const { user } = userData;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.post(\"/api/categories\", categoryData, config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fecthing data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const updateCategoryById = async (updatedCategoryData) => {\r\n  try {\r\n    const { categoryId, values } = updatedCategoryData;\r\n    const { userData } = store.getState();\r\n    const { user } = userData;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/categories/${categoryId}`,\r\n      values,\r\n      config\r\n    );\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fecthing data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const deleteMultipleCategoriesById = async (categoryId) => {\r\n  try {\r\n    const { userData } = store.getState();\r\n    const { token } = userData.user;\r\n    const config = {\r\n      data: { id: categoryId },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.delete(\"/api/categories\", config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const getCuratedCategoryList = async () => {\r\n  try {\r\n    const { userData } = store.getState();\r\n    const { user } = userData;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(\"/api/categories/curated\", config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fecthing data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { store } from \"../redux/store\";\r\n\r\nexport const getAllPosts = async () => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.get(\"/api/posts\", config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const getPaginatedPosts = async ({ page, limit }) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.get(\r\n      `/api/posts/paginated?page=${page}&limit=${limit}`,\r\n      config\r\n    );\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const getLatestPosts = async () => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.get(\"/api/posts/latest\", config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const getAllPostsByAuthorId = async (authorId) => {\r\n  try {\r\n    const { userData } = store.getState();\r\n    const { user } = userData;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/posts/author/${authorId}`, config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const getPostById = async (postId) => {\r\n  try {\r\n    const { userData } = store.getState();\r\n    const { user } = userData;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/posts/${postId}`, config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const getPostByCategoryName = async ({ categoryName }) => {\r\n  try {\r\n    const reqBody = {\r\n      category: categoryName,\r\n    };\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      params: reqBody,\r\n    };\r\n    const { data } = await axios.get(`/api/posts/find`, config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const getPostByTagName = async ({ tagName }) => {\r\n  try {\r\n    const reqBody = {\r\n      tag: tagName,\r\n    };\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      params: reqBody,\r\n    };\r\n    const { data } = await axios.get(`/api/posts/find`, config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const createPost = async (postData) => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append(\"title\", postData.title);\r\n    formData.append(\"description\", postData.description);\r\n    formData.append(\"summary\", postData.summary);\r\n    formData.append(\"category\", postData.category);\r\n    formData.append(\"tags\", postData.tags);\r\n    formData.append(\"image\", postData.image);\r\n    const { userData } = store.getState();\r\n    const { user } = userData;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.post(\"/api/posts\", formData, config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const updatePostById = async (updatedPostData) => {\r\n  try {\r\n    const { postId, values: postData } = updatedPostData;\r\n    const { userData } = store.getState();\r\n    const { user } = userData;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const formData = new FormData();\r\n    formData.append(\"title\", postData.title);\r\n    formData.append(\"description\", postData.description);\r\n    formData.append(\"summary\", postData.summary);\r\n    formData.append(\"category\", postData.category);\r\n    formData.append(\"tags\", postData.tags);\r\n    formData.append(\"image\", postData.image);\r\n    const { data } = await axios.put(`/api/posts/${postId}`, formData, config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const deleteMultiplePostsById = async (postId) => {\r\n  try {\r\n    const { userData } = store.getState();\r\n    const { token } = userData.user;\r\n    const config = {\r\n      data: { id: postId },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.delete(\"/api/posts\", config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const getCuratedPostList = async () => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.get(\"/api/posts/curated\", config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const getCuratedPostListByAuthor = async () => {\r\n  try {\r\n    const { userData } = store.getState();\r\n    const { token } = userData.user;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(\"/api/posts/curated/author\", config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const searchPosts = async (searchQuery) => {\r\n  try {\r\n    if (searchQuery.length > 1) {\r\n      const { data } = await axios.get(\r\n        `/api/posts/search?query=${searchQuery}`\r\n      );\r\n      return data;\r\n    } else {\r\n      return [];\r\n    }\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const searchPostResults = async (searchQuery) => {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `/api/posts/searchresult?query=${searchQuery}`\r\n    );\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { store } from \"../redux/store\";\r\n\r\nexport const signInUser = async ({ email, password }) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n    return data;\r\n  } catch (err) {\r\n    const error = new Error(\r\n      `Error while fetching data. Error Message: ${err.message}`\r\n    );\r\n    error.status = err.response.request.status;\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAllUsers = async () => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.get(\"/api/users/\", config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const getLatestUsers = async () => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.get(\"/api/users/latest\", config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\nexport const createUser = async (userData) => {\r\n  try {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", userData.name);\r\n    formData.append(\"email\", userData.email);\r\n    formData.append(\"password\", userData.password);\r\n    formData.append(\"image\", userData.image);\r\n    formData.append(\"bio\", userData.bio);\r\n    formData.append(\"facebookId\", userData.facebookId);\r\n    formData.append(\"linkedinId\", userData.linkedinId);\r\n    formData.append(\"twitterId\", userData.twitterId);\r\n    formData.append(\"isAdmin\", userData.isAdmin);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\"/api/users\", formData, config);\r\n    return data;\r\n  } catch (err) {\r\n    const error = new Error(\r\n      `Error while fetching data. Error Message: ${err.message}`\r\n    );\r\n    error.status = err.response.request.status;\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getUserById = async (userId) => {\r\n  if (!userId) return {};\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/users/${userId}`, config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n// update currently logged in user data\r\nexport const updateUser = async (updatedUserData) => {\r\n  try {\r\n    const { userData } = store.getState();\r\n    const { token } = userData.user;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const formData = new FormData();\r\n    formData.append(\"name\", updatedUserData.name);\r\n    formData.append(\"email\", updatedUserData.email);\r\n    formData.append(\"password\", updatedUserData.password);\r\n    formData.append(\"image\", updatedUserData.image);\r\n    formData.append(\"bio\", updatedUserData.bio);\r\n    formData.append(\"facebookId\", updatedUserData.facebookId);\r\n    formData.append(\"linkedinId\", updatedUserData.linkedinId);\r\n    formData.append(\"twitterId\", updatedUserData.twitterId);\r\n    formData.append(\"isAdmin\", updatedUserData.isAdmin);\r\n    const { data } = await axios.put(`/api/users/profile`, formData, config);\r\n    return data;\r\n  } catch (err) {\r\n    const error = new Error(\r\n      `Error while fetching data. Error Message: ${err.message}`\r\n    );\r\n    error.status = err.response.request.status;\r\n    throw error;\r\n  }\r\n};\r\n\r\n// update a user by id. for admin users.\r\nexport const updateUserById = async (updatedUserData) => {\r\n  try {\r\n    console.log(updatedUserData);\r\n    const { userId, values } = updatedUserData;\r\n    const { userData } = store.getState();\r\n    const { token } = userData.user;\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const formData = new FormData();\r\n    formData.append(\"name\", values.name);\r\n    formData.append(\"email\", values.email);\r\n    formData.append(\"password\", values.password);\r\n    formData.append(\"image\", values.image);\r\n    formData.append(\"bio\", values.bio);\r\n    formData.append(\"facebookId\", values.facebookId);\r\n    formData.append(\"linkedinId\", values.linkedinId);\r\n    formData.append(\"twitterId\", values.twitterId);\r\n    formData.append(\"isAdmin\", values.isAdmin);\r\n    const { data } = await axios.put(\r\n      `/api/users/profile/${userId}`,\r\n      formData,\r\n      config\r\n    );\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const deleteMultipleUsersById = async (userId) => {\r\n  try {\r\n    const { userData } = store.getState();\r\n    const { token } = userData.user;\r\n    const config = {\r\n      data: { id: userId },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.delete(\"/api/users\", config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const getCuratedUserList = async () => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.get(\"/api/users/curated\", config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n","// user\r\nexport const USER_DATA = \"users\";\r\nexport const DETAILED_USER_DATA = \"usersDetails\";\r\nexport const SINGLE_USER_DATA = \"user\";\r\nexport const USER_PROFILE_DATA = \"userProfile\";\r\n\r\n// category\r\nexport const CATEGORY_DATA = \"categories\";\r\nexport const SINGLE_CATEGORY_DATA = \"category\";\r\n\r\n// posts\r\nexport const POST_DATA = \"posts\";\r\nexport const SINGLE_POST_DATA = \"post\";\r\nexport const LATEST_POST_DATA = \"latestPosts\";\r\nexport const PAGINATED_POST_DATA = \"paginatedPosts\";\r\nexport const SEARCH_POST_DATA = \"searchedPosts\";\r\nexport const SEARCH_POST_DATA_RESULTS = \"searchPostResults\";\r\n\r\n// comments\r\nexport const COMMENT_DATA = \"comments\";\r\nexport const SINGLE_COMMENT_DATA = \"comment\";\r\n\r\n// author\r\nexport const AUTHOR_DATA = \"authors\";\r\nexport const SINGLE_AUTHOR_DATA = \"author\";\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst adminHomeStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  card: {\r\n    minWidth: \"100%\",\r\n    height: \"15vh\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  cardItem: {\r\n    marginRight: theme.spacing(2),\r\n    \"&:last-child\": {\r\n      marginRight: 0,\r\n    },\r\n  },\r\n  chart: {},\r\n  chartContainer: {\r\n    marginTop: theme.spacing(6),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  cardContent: {\r\n    \"&:last-child\": {\r\n      paddingBottom: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nexport { adminHomeStyles };\r\n","import * as h2p from \"html2plaintext\";\r\n\r\nexport const formatDate = (data) => {\r\n  return data.map((d) => {\r\n    d.createdAt = new Date(d.createdAt).toLocaleDateString();\r\n    d.updatedAt = new Date(d.updatedAt).toLocaleDateString();\r\n    return d;\r\n  });\r\n};\r\n\r\nexport const getUniqueDates = (data, type) => {\r\n  const dateFormattedData = formatDate(data);\r\n  if (type === \"createdAt\") {\r\n    return [...new Set(dateFormattedData.map((d) => d.createdAt))];\r\n  } else {\r\n    return [...new Set(dateFormattedData.map((d) => d.updatedAt))];\r\n  }\r\n};\r\n\r\nexport const formatData = (data, type) => {\r\n  const uniqueDates = getUniqueDates(data, type);\r\n  const dateFormattedData = formatDate(data);\r\n  return uniqueDates.map((date) => {\r\n    const count = dateFormattedData.filter((d) => d.createdAt === date).length;\r\n    return {\r\n      date: date,\r\n      count: count,\r\n    };\r\n  });\r\n};\r\n\r\nexport const getAuthorNameInitials = (author) =>\r\n  author.split(\" \").map((np, index) => {\r\n    if (index > 1) return null;\r\n    return np[0];\r\n  });\r\n\r\nexport const sanitizeSocialURL = (url) => {\r\n  const urlHandles = {\r\n    fb: \"https://www.facebook.com/\",\r\n    fbAlt: \"www.facebook.com/\",\r\n    twitter: \"https://twitter.com/\",\r\n    twitterAlt: \"twitter.com/\",\r\n    linkedin: \"https://www.linkedin.com/in/\",\r\n    linkedinAlt: \"www.linkedin.com/in/\",\r\n  };\r\n  if (url.includes(urlHandles.fb)) {\r\n    return url.replace(urlHandles.fb, \"\");\r\n  }\r\n  if (url.includes(urlHandles.fbAlt)) {\r\n    return url.replace(urlHandles.fbAlt, \"\");\r\n  }\r\n  if (url.includes(urlHandles.linkedin)) {\r\n    return url.replace(urlHandles.linkedin, \"\");\r\n  }\r\n  if (url.includes(urlHandles.linkedinAlt)) {\r\n    return url.replace(urlHandles.linkedinAlt, \"\");\r\n  }\r\n  if (url.includes(urlHandles.twitter)) {\r\n    return url.replace(urlHandles.twitter, \"\");\r\n  }\r\n  if (url.includes(urlHandles.twitterAlt)) {\r\n    return url.replace(urlHandles.twitterAlt, \"\");\r\n  }\r\n  return url;\r\n};\r\n\r\nexport const countWords = (str) => {\r\n  return str.trim().split(/\\s+/).length;\r\n};\r\n\r\nexport const calculateReadingTime = (str) => {\r\n  return Math.ceil(countWords(str) / 200);\r\n};\r\n\r\nexport const convertToText = (html) => {\r\n  return h2p(html);\r\n};\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AlertNotification from \"../../../components/AlertNotification\";\r\nimport ScreenTitle from \"../../../components/ScreenTitle\";\r\nimport { getCuratedCategoryList } from \"../../../data/categoryQueryFunctions\";\r\nimport { getCuratedPostList } from \"../../../data/postQueryFunctions\";\r\nimport { getCuratedUserList } from \"../../../data/userQueryFunctions\";\r\nimport {\r\n  CATEGORY_DATA,\r\n  POST_DATA,\r\n  USER_DATA,\r\n} from \"../../../definitions/reactQueryConstants/queryConstants\";\r\nimport { adminHomeStyles } from \"../../../styles/adminHomeStyles\";\r\nimport { formatData } from \"../../../utils/dataFormat\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  BarChart,\r\n  Legend,\r\n  Bar,\r\n} from \"recharts\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\n\r\nconst AdminHomeScreen = () => {\r\n  const classes = adminHomeStyles();\r\n  const history = useHistory();\r\n  const { user } = useSelector((state) => state.userData);\r\n  const theme = useTheme();\r\n\r\n  const [showErrorNotification, setShowErrorNotification] = useState(false);\r\n  const [curatedUserData, setCuratedUserData] = useState([]);\r\n  const [curatedPostData, setCuratedPostData] = useState([]);\r\n\r\n  const {\r\n    isLoading: isUserDataLoading,\r\n    isError: isUserDataError,\r\n    isFetching: isUserDataFetching,\r\n    data: userData,\r\n  } = useQuery(USER_DATA, getCuratedUserList);\r\n\r\n  const {\r\n    isLoading: isCategoryDataLoading,\r\n    isError: isCategoryDataError,\r\n    isFetching: isCategoryDataFetching,\r\n    data: categoryData,\r\n  } = useQuery(CATEGORY_DATA, getCuratedCategoryList);\r\n\r\n  const {\r\n    isLoading: isPostDataLoading,\r\n    isError: isPostDataError,\r\n    isFetching: isPostDataFetching,\r\n    data: postData,\r\n  } = useQuery(POST_DATA, getCuratedPostList);\r\n  useEffect(() => {\r\n    if (!isUserDataLoading && !isUserDataFetching) {\r\n      setCuratedUserData(formatData(userData, \"createdAt\"));\r\n    }\r\n    if (!isPostDataLoading && !isPostDataFetching) {\r\n      setCuratedPostData(formatData(postData, \"createdAt\"));\r\n    }\r\n  }, [\r\n    isUserDataLoading,\r\n    isCategoryDataLoading,\r\n    isPostDataLoading,\r\n    userData,\r\n    categoryData,\r\n    postData,\r\n    isUserDataFetching,\r\n    isCategoryDataFetching,\r\n    isPostDataFetching,\r\n  ]);\r\n  useEffect(() => {\r\n    if (!user.isAdmin) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, user]);\r\n  return (\r\n    <>\r\n      <ScreenTitle text=\"Dashboard\" className={classes.root} />\r\n      {isUserDataError || isCategoryDataError || isPostDataError ? (\r\n        <AlertNotification\r\n          showState={showErrorNotification}\r\n          alertText=\"Error while loading data. Please try again later\"\r\n          closeHandler={() => setShowErrorNotification(false)}\r\n          alertSeverity=\"error\"\r\n        />\r\n      ) : (\r\n        <>\r\n          <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Grid item xs={3} className={classes.cardItem}>\r\n              <Card className={classes.card} variant=\"outlined\">\r\n                <CardContent className={classes.cardContent}>\r\n                  <Typography\r\n                    gutterBottom\r\n                    align=\"center\"\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                  >\r\n                    Posts\r\n                  </Typography>\r\n                  {isPostDataLoading || isPostDataFetching ? (\r\n                    <Grid container justify=\"center\">\r\n                      <CircularProgress size={25} color=\"primary\" />\r\n                    </Grid>\r\n                  ) : (\r\n                    <Typography\r\n                      color=\"primary\"\r\n                      align=\"center\"\r\n                      variant=\"h6\"\r\n                      component=\"p\"\r\n                    >\r\n                      {postData.length}\r\n                    </Typography>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={3} className={classes.cardItem}>\r\n              <Card className={classes.card} variant=\"outlined\">\r\n                <CardContent>\r\n                  <Typography\r\n                    gutterBottom\r\n                    align=\"center\"\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                  >\r\n                    Users\r\n                  </Typography>\r\n                  {isUserDataLoading || isUserDataFetching ? (\r\n                    <Grid container justify=\"center\">\r\n                      <CircularProgress size={25} color=\"primary\" />\r\n                    </Grid>\r\n                  ) : (\r\n                    <Typography\r\n                      color=\"primary\"\r\n                      align=\"center\"\r\n                      variant=\"h6\"\r\n                      component=\"p\"\r\n                    >\r\n                      {userData.length}\r\n                    </Typography>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={3} className={classes.cardItem}>\r\n              <Card className={classes.card} variant=\"outlined\">\r\n                <CardContent>\r\n                  <Typography\r\n                    gutterBottom\r\n                    align=\"center\"\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                  >\r\n                    Categories\r\n                  </Typography>\r\n                  {isCategoryDataLoading || isCategoryDataFetching ? (\r\n                    <Grid container justify=\"center\">\r\n                      <CircularProgress size={25} color=\"primary\" />\r\n                    </Grid>\r\n                  ) : (\r\n                    <Typography\r\n                      color=\"primary\"\r\n                      align=\"center\"\r\n                      variant=\"h6\"\r\n                      component=\"p\"\r\n                    >\r\n                      {categoryData.length}\r\n                    </Typography>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={5} className={classes.chartContainer}>\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <Card variant=\"outlined\">\r\n                  <CardContent>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      component=\"h2\"\r\n                      align=\"center\"\r\n                      gutterBottom\r\n                    >\r\n                      Users added on the last 7 days\r\n                    </Typography>\r\n                    <BarChart\r\n                      width={500}\r\n                      height={200}\r\n                      data={curatedUserData}\r\n                      margin={{ top: 5, right: 30, bottom: 5, left: 20 }}\r\n                    >\r\n                      <XAxis dataKey=\"date\" />\r\n                      <YAxis />\r\n                      <Tooltip />\r\n                      <Legend />\r\n                      <Bar dataKey=\"count\" fill={theme.palette.primary.main} />\r\n                    </BarChart>\r\n                  </CardContent>\r\n                </Card>\r\n              </ResponsiveContainer>\r\n            </Grid>\r\n            <Grid item xs={12} sm={5} className={classes.chartContainer}>\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <Card variant=\"outlined\">\r\n                  <CardContent>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      component=\"h2\"\r\n                      align=\"center\"\r\n                      gutterBottom\r\n                    >\r\n                      Posts created on the last 7 days\r\n                    </Typography>\r\n                    <BarChart\r\n                      width={500}\r\n                      height={200}\r\n                      data={curatedPostData}\r\n                      margin={{ top: 5, right: 30, bottom: 5, left: 20 }}\r\n                    >\r\n                      <XAxis dataKey=\"date\" />\r\n                      <YAxis />\r\n                      <Tooltip />\r\n                      <Legend />\r\n                      <Bar dataKey=\"count\" fill={theme.palette.primary.main} />\r\n                    </BarChart>\r\n                  </CardContent>\r\n                </Card>\r\n              </ResponsiveContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminHomeScreen;\r\n","export default __webpack_public_path__ + \"static/media/homeBg.8ed699ba.svg\";","import Grid from \"@material-ui/core/Grid\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  modalContent: {\r\n    width: \"50vw\",\r\n    minHeight: \"40vh\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"80vw\",\r\n      margin: theme.spacing(0, 2),\r\n    },\r\n  },\r\n  modalContentExpanded: {\r\n    width: \"70vw\",\r\n    minHeight: \"40vh\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"95vw\",\r\n    },\r\n  },\r\n  closeIcon: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst UserModal = ({ children, open, onClose, expanded = false }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"Create User Modal\"\r\n      aria-describedby=\"Modal for creating a User\"\r\n      open={open}\r\n      onClose={onClose}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n      className={classes.modal}\r\n    >\r\n      <Fade in={open}>\r\n        <Paper\r\n          className={\r\n            expanded ? classes.modalContentExpanded : classes.modalContent\r\n          }\r\n          elevation={0}\r\n        >\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <IconButton aria-label=\"close\" onClick={onClose} size=\"small\">\r\n              <Box className={classes.closeIcon}>\r\n                <CloseIcon fontSize=\"small\" />\r\n              </Box>\r\n            </IconButton>\r\n          </Grid>\r\n          {children}\r\n        </Paper>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UserModal;\r\n","export default __webpack_public_path__ + \"static/media/login.4d86d1bb.svg\";","import Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport { useState } from \"react\";\r\nimport { useMutation } from \"react-query\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport LoginImg from \"../../assets/login.svg\";\r\nimport AlertNotification from \"../../components/AlertNotification\";\r\nimport { signInUser } from \"../../data/userQueryFunctions\";\r\nimport { storeUserData } from \"../../redux/slices/userDataSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"35vh\",\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formContent: {\r\n    paddingRight: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingTop: theme.spacing(4),\r\n  },\r\n  alertContainer: {\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string(\"Enter you email address\")\r\n    .required(\"This field is required\")\r\n    .email(\"Please enter a valid email address\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .required(\"This field is required\"),\r\n});\r\n\r\nconst LoginScreen = ({ handleModalClose, openRegistrationModal }) => {\r\n  const [showInvalidCredentialsAlert, setShowInvalidCredentialsAlert] =\r\n    useState(false);\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const mutation = useMutation(signInUser, {\r\n    onSuccess: (data) => {\r\n      dispatch(storeUserData(data));\r\n      if (data.isAdmin) {\r\n        history.push(\"/admin\");\r\n      }\r\n      handleModalClose();\r\n    },\r\n    onError: (error) => {\r\n      if (error.status === 401) {\r\n        setShowInvalidCredentialsAlert(true);\r\n      }\r\n    },\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      mutation.mutate({\r\n        email: values.email,\r\n        password: values.password,\r\n      });\r\n    },\r\n  });\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={3}\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      className={classes.container}\r\n    >\r\n      <Grid item xs={12} sm={6}>\r\n        <img\r\n          className={classes.image}\r\n          src={LoginImg}\r\n          alt=\"login prompter img\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <Typography variant=\"h5\" component=\"h1\">\r\n          Sign In\r\n        </Typography>\r\n        <Box className={classes.alertContainer}>\r\n          <AlertNotification\r\n            alertSeverity=\"error\"\r\n            alertText={\"Incorrect email or password\"}\r\n            showState={showInvalidCredentialsAlert}\r\n            closeHandler={() => setShowInvalidCredentialsAlert(false)}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <form onSubmit={formik.handleSubmit} className={classes.formContent}>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              value={formik.values.email}\r\n              onBlur={formik.handleBlur}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={(formik.touched.email && formik.errors.email) || \" \"}\r\n              size=\"small\"\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              onBlur={formik.handleBlur}\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={\r\n                (formik.touched.password && formik.errors.password) || \" \"\r\n              }\r\n              size=\"small\"\r\n              type=\"password\"\r\n            />\r\n            <Typography variant=\"subtitle1\" component=\"span\">\r\n              Don't have an account?{\" \"}\r\n              <Link\r\n                href=\"#\"\r\n                onClick={() => {\r\n                  handleModalClose();\r\n                  setTimeout(() => openRegistrationModal(), 150);\r\n                }}\r\n              >\r\n                Sign Up\r\n              </Link>\r\n            </Typography>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              type=\"submit\"\r\n              fullWidth\r\n              className={classes.button}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","export default __webpack_public_path__ + \"static/media/register.645bd03e.svg\";","// make Box, Button, Grid, Link, makeStyles, TextField, Typography imports from '@material-ui/core' to individual imports\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\nimport RegisterImg from \"../../assets/register.svg\";\r\nimport { createUser } from \"../../data/userQueryFunctions\";\r\nimport { USER_DATA } from \"../../definitions/reactQueryConstants/queryConstants\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { storeUserData } from \"../../redux/slices/userDataSlice\";\r\nimport { sanitizeSocialURL } from \"../../utils/dataFormat\";\r\nimport { useState } from \"react\";\r\nimport AlertNotification from \"../../components/AlertNotification\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    margin: theme.spacing(0, 2),\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"40vh\",\r\n    padding: theme.spacing(1),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formContent: {\r\n    paddingRight: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingTop: theme.spacing(2),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  inputGroup: {\r\n    display: \"block\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  inputLabel: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  errorLabel: {\r\n    color: theme.palette.error.main,\r\n    marginLeft: theme.spacing(2),\r\n    fontSize: \"0.75rem\",\r\n    lineHeight: 1.66,\r\n    letterSpacing: \"0.03333em\",\r\n    display: \"block\",\r\n  },\r\n  alertContainer: {\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string(\"Enter you name\").required(\"This field is required\"),\r\n  email: yup\r\n    .string(\"Enter you email address\")\r\n    .required(\"This field is required\")\r\n    .email(\"Please enter a valid email address\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password length must be at least 8 characters\")\r\n    .required(\"This field is required\"),\r\n  confirmPassword: yup.string(\"Confirm your password\").when(\"password\", {\r\n    is: (val) => val && val.length >= 8,\r\n    then: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"password\")], \"Both passwords need to be the same\")\r\n      .required(\"This field is required\"),\r\n    otherwise: yup.string(\"Confirm your password\"),\r\n  }),\r\n  bio: yup.string(\"Enter your bio\").required(\"This field is required\"),\r\n  facebookId: yup.string(\"Enter your facebook id\"),\r\n  linkedinId: yup.string(\"Enter your linkedin id\"),\r\n  twitterId: yup.string(\"Enter your twitter id\"),\r\n  image: yup.mixed(),\r\n});\r\n\r\nconst RegisterScreen = ({ handleModalClose, openLoginModal }) => {\r\n  // states\r\n  const [showErrorAlert, setShowErrorAlert] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const queryClient = useQueryClient();\r\n  const mutation = useMutation(createUser, {\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries(USER_DATA);\r\n      dispatch(storeUserData(data));\r\n      handleModalClose();\r\n    },\r\n    onError: (error) => {\r\n      if (error.status === 400) {\r\n        setErrorMessage(\"User with this email already exists\");\r\n        setShowErrorAlert(true);\r\n      }\r\n    },\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      bio: \"\",\r\n      facebookId: \"\",\r\n      linkedinId: \"\",\r\n      twitterId: \"\",\r\n      image: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      mutation.mutate({\r\n        name: values.name,\r\n        email: values.email,\r\n        password: values.password,\r\n        bio: values.bio,\r\n        facebookId: sanitizeSocialURL(values.facebookId),\r\n        linkedinId: sanitizeSocialURL(values.linkedinId),\r\n        twitterId: sanitizeSocialURL(values.twitterId),\r\n        image: values.image,\r\n        isAdmin: false,\r\n      });\r\n    },\r\n  });\r\n  return (\r\n    <Box className={classes.container}>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xs={12} sm={6}>\r\n          <img\r\n            className={classes.image}\r\n            src={RegisterImg}\r\n            alt=\"login prompter img\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h5\" component=\"h1\">\r\n            Sign Up\r\n          </Typography>\r\n          <Box>\r\n            <Box className={classes.alertContainer}>\r\n              <AlertNotification\r\n                alertSeverity=\"error\"\r\n                alertText={errorMessage}\r\n                showState={showErrorAlert}\r\n                closeHandler={() => setShowErrorAlert(false)}\r\n              />\r\n            </Box>\r\n            <form\r\n              onSubmit={formik.handleSubmit}\r\n              className={classes.formContent}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                label=\"Name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                error={formik.touched.name && Boolean(formik.errors.name)}\r\n                helperText={(formik.touched.name && formik.errors.name) || \" \"}\r\n                size=\"small\"\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                value={formik.values.email}\r\n                onBlur={formik.handleBlur}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                helperText={\r\n                  (formik.touched.email && formik.errors.email) || \" \"\r\n                }\r\n                size=\"small\"\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.password && Boolean(formik.errors.password)\r\n                }\r\n                helperText={\r\n                  (formik.touched.password && formik.errors.password) || \" \"\r\n                }\r\n                size=\"small\"\r\n                type=\"password\"\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                id=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                value={formik.values.confirmPassword}\r\n                onBlur={formik.handleBlur}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.confirmPassword &&\r\n                  Boolean(formik.errors.confirmPassword)\r\n                }\r\n                helperText={\r\n                  (formik.touched.confirmPassword &&\r\n                    formik.errors.confirmPassword) ||\r\n                  \" \"\r\n                }\r\n                size=\"small\"\r\n                type=\"password\"\r\n              />\r\n              <Box className={classes.inputGroup}>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  id=\"image\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(event) => {\r\n                    formik.setFieldValue(\"image\", event.target.files[0]);\r\n                  }}\r\n                  onBlur={formik.handleBlur}\r\n                  name=\"image\"\r\n                />\r\n                <label htmlFor=\"image\">\r\n                  <Button\r\n                    startIcon={<PhotoCameraIcon />}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    component=\"span\"\r\n                  >\r\n                    Upload Photo\r\n                  </Button>\r\n                </label>\r\n                <label className={classes.inputLabel}>\r\n                  {formik.values.image.name ? formik.values.image.name : \"\"}\r\n                </label>\r\n                <span className={classes.errorLabel}>\r\n                  {(formik.touched.image && formik.errors.image) || \" \"}\r\n                </span>\r\n              </Box>\r\n              <TextField\r\n                fullWidth\r\n                multiline\r\n                minRows={4}\r\n                variant=\"outlined\"\r\n                id=\"bio\"\r\n                name=\"bio\"\r\n                label=\"Bio\"\r\n                value={formik.values.bio}\r\n                onBlur={formik.handleBlur}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.bio && Boolean(formik.errors.bio)}\r\n                helperText={(formik.touched.bio && formik.errors.bio) || \" \"}\r\n                size=\"small\"\r\n              />\r\n              <Grid container justifyContent=\"space-between\" spacing={1}>\r\n                <Grid item xs={12} lg={4}>\r\n                  <Grid container>\r\n                    <Grid item xs={3}>\r\n                      <FacebookIcon fontSize=\"large\" />\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                      <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        id=\"facebookId\"\r\n                        name=\"facebookId\"\r\n                        label=\"Facebook\"\r\n                        value={formik.values.facebookId}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        error={\r\n                          formik.touched.facebookId &&\r\n                          Boolean(formik.errors.facebookId)\r\n                        }\r\n                        helperText={\r\n                          (formik.touched.facebookId &&\r\n                            formik.errors.facebookId) ||\r\n                          \" \"\r\n                        }\r\n                        size=\"small\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} lg={4}>\r\n                  <Grid container>\r\n                    <Grid item xs={3}>\r\n                      <LinkedInIcon fontSize=\"large\" />\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                      <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        id=\"linkedinId\"\r\n                        name=\"linkedinId\"\r\n                        label=\"Linkedin\"\r\n                        value={formik.values.linkedinId}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        error={\r\n                          formik.touched.linkedinId &&\r\n                          Boolean(formik.errors.linkedinId)\r\n                        }\r\n                        helperText={\r\n                          (formik.touched.linkedinId &&\r\n                            formik.errors.linkedinId) ||\r\n                          \" \"\r\n                        }\r\n                        size=\"small\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} lg={4}>\r\n                  <Grid container>\r\n                    <Grid item xs={3}>\r\n                      <TwitterIcon fontSize=\"large\" />\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                      <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        id=\"twitterId\"\r\n                        name=\"twitterId\"\r\n                        label=\"Twitter\"\r\n                        value={formik.values.twitterId}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        error={\r\n                          formik.touched.twitterId &&\r\n                          Boolean(formik.errors.twitterId)\r\n                        }\r\n                        helperText={\r\n                          (formik.touched.twitterId &&\r\n                            formik.errors.twitterId) ||\r\n                          \" \"\r\n                        }\r\n                        size=\"small\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Typography variant=\"subtitle1\" component=\"span\">\r\n                Already have an account?{\" \"}\r\n                <Link\r\n                  href=\"#\"\r\n                  onClick={() => {\r\n                    handleModalClose();\r\n                    setTimeout(() => openLoginModal(), 150);\r\n                  }}\r\n                >\r\n                  Sign In\r\n                </Link>\r\n              </Typography>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                type=\"submit\"\r\n                fullWidth\r\n                className={classes.button}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </form>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    margin: theme.spacing(4, 0),\r\n  },\r\n  authorInfoContainer: {\r\n    marginBottom: theme.spacing(2),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  authorInfoContainerMobile: {\r\n    display: \"none\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  title: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  metaContainer: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  meta: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  imageLoader: {\r\n    display: \"block\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  imageLoaderMobile: {\r\n    display: \"none\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ExpandedPostSummaryLoader = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid\r\n        className={classes.authorInfoContainerMobile}\r\n        container\r\n        alignItems=\"center\"\r\n      >\r\n        <Skeleton variant=\"circle\" className={classes.avatar} />\r\n        <Skeleton variant=\"text\" width={50} />\r\n      </Grid>\r\n      <Grid\r\n        spacing={2}\r\n        container\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        className={classes.container}\r\n      >\r\n        <Grid item xs={12} sm={4} className={classes.imageLoaderMobile}>\r\n          <Skeleton variant=\"rect\" width={\"100%\"} height={160} />\r\n        </Grid>\r\n        <Grid item xs={12} sm={8}>\r\n          <Grid\r\n            className={classes.authorInfoContainer}\r\n            container\r\n            alignItems=\"center\"\r\n          >\r\n            <Skeleton variant=\"circle\" className={classes.avatar} />\r\n            <Skeleton variant=\"text\" width={50} />\r\n          </Grid>\r\n          <Skeleton className={classes.title} variant=\"text\" width={100} />\r\n          <Skeleton variant=\"text\" width={\"100%\"} />\r\n          <Skeleton variant=\"text\" width={\"100%\"} />\r\n          <Skeleton variant=\"text\" width={\"100%\"} />\r\n          <Grid className={classes.metaContainer} container alignItems=\"center\">\r\n            <Skeleton className={classes.meta} variant=\"text\" width={50} />\r\n            <Skeleton variant=\"text\" width={50} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} className={classes.imageLoader}>\r\n          <Skeleton variant=\"rect\" width={\"100%\"} height={160} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpandedPostSummaryLoader;\r\n","import { memo } from \"react\";\r\nimport ExpandedPostSummaryLoader from \"./ExpandedPostSummaryLoader\";\r\n\r\nconst ExpandedPostSummaryLoaderDeck = memo(({ count }) => {\r\n  return (\r\n    <>\r\n      {Array.from(Array(count).keys()).map((_, index) => (\r\n        <ExpandedPostSummaryLoader key={index} />\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ExpandedPostSummaryLoaderDeck;\r\n","import { Skeleton } from \"@material-ui/lab\";\r\n\r\nconst PostSummaryCardLoader = () => {\r\n  return <Skeleton variant=\"rect\" width={\"100%\"} height={160} />;\r\n};\r\n\r\nexport default PostSummaryCardLoader;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport { memo } from \"react\";\r\nimport PostSummaryCardLoader from \"./PostSummaryCardLoader\";\r\n\r\nconst PostSummaryCardLoaderDeck = memo(({ count }) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      spacing={2}\r\n    >\r\n      {Array.from(Array(count).keys()).map((_, index) => (\r\n        <Grid key={index} item xs={12} sm={4}>\r\n          <PostSummaryCardLoader />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default PostSummaryCardLoaderDeck;\r\n","import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport { memo } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginRight: theme.spacing(3),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  container: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst CategoryLoaderDeck = memo(({ count }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      {Array.from(Array(count).keys()).map((i) => (\r\n        <Skeleton\r\n          key={i}\r\n          variant=\"rect\"\r\n          width={60}\r\n          height={20}\r\n          className={classes.root}\r\n        />\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default CategoryLoaderDeck;\r\n","export const getPostFormattedDate = (date) =>\r\n  new Date(date).toLocaleDateString(\"default\", {\r\n    month: \"short\",\r\n    day: \"numeric\",\r\n    year: \"numeric\",\r\n  });\r\n","import makeStyles from \"@material-ui/styles/makeStyles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPostFormattedDate } from \"../utils/dateUtils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    margin: theme.spacing(4, 0),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column-reverse\",\r\n      marginBottom: theme.spacing(4),\r\n      marginTop: theme.spacing(1),\r\n    },\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  authorInfoContainer: {\r\n    marginBottom: theme.spacing(2),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  authorInfoContainerMobile: {\r\n    display: \"none\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"flex\",\r\n      margin: theme.spacing(1, 0),\r\n    },\r\n  },\r\n  authorName: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  postTitle: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  postDescription: {\r\n    lineHeight: theme.spacing(0.2),\r\n    textAlign: \"justify\",\r\n  },\r\n  postMeta: {\r\n    marginTop: theme.spacing(2),\r\n    color: grey[500],\r\n  },\r\n  tagsChip: {\r\n    marginRight: theme.spacing(1),\r\n    backgroundColor: grey[200],\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary,\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n      backgroundColor: grey[300],\r\n    },\r\n  },\r\n  postImage: {\r\n    width: \"100%\",\r\n    height: theme.spacing(25),\r\n    objectFit: \"cover\",\r\n  },\r\n}));\r\n\r\nconst ExpandedPostSummaryCard = ({\r\n  authorId,\r\n  authorName,\r\n  authorImageURL,\r\n  postId,\r\n  postTitle,\r\n  postSummary,\r\n  postCreationDate,\r\n  postReadingTime,\r\n  postTags,\r\n  postImageURL,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        className={classes.authorInfoContainerMobile}\r\n        container\r\n        alignItems=\"center\"\r\n      >\r\n        <Avatar\r\n          className={classes.avatar}\r\n          alt={authorName}\r\n          src={authorImageURL}\r\n        />\r\n        <Typography\r\n          component={Link}\r\n          to={`/authors/${authorId}`}\r\n          className={classes.authorName}\r\n          variant=\"body2\"\r\n        >\r\n          {authorName}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid\r\n        spacing={2}\r\n        container\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        className={classes.container}\r\n      >\r\n        <Grid item xs={12} sm={8}>\r\n          <Grid\r\n            className={classes.authorInfoContainer}\r\n            container\r\n            alignItems=\"center\"\r\n          >\r\n            <Avatar\r\n              className={classes.avatar}\r\n              alt={authorName}\r\n              src={authorImageURL}\r\n            />\r\n            <Typography\r\n              component={Link}\r\n              to={`/authors/${authorId}`}\r\n              className={classes.authorName}\r\n              variant=\"body2\"\r\n            >\r\n              {authorName}\r\n            </Typography>\r\n          </Grid>\r\n          <Box\r\n            className={classes.postTitle}\r\n            component={Link}\r\n            to={`/posts/${postId}`}\r\n          >\r\n            <Typography variant=\"h5\" component=\"h4\" gutterBottom>\r\n              {postTitle}\r\n            </Typography>\r\n            <Typography\r\n              className={classes.postDescription}\r\n              variant=\"body2\"\r\n              component=\"p\"\r\n            >\r\n              {postSummary}\r\n            </Typography>\r\n          </Box>\r\n          <Box className={classes.postMeta}>\r\n            <Typography variant=\"body2\" component=\"span\">\r\n              {getPostFormattedDate(postCreationDate)}\r\n            </Typography>{\" \"}\r\n            ·{\" \"}\r\n            <Typography variant=\"body2\" component=\"span\">\r\n              {postReadingTime} mins\r\n            </Typography>{\" \"}\r\n            ·{\" \"}\r\n            {postTags.map((tag, index) => (\r\n              <Chip\r\n                key={index}\r\n                component={Link}\r\n                to={`/posts/search/tags/${tag}`}\r\n                className={classes.tagsChip}\r\n                size=\"small\"\r\n                label={tag.toLowerCase()}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <img\r\n            className={classes.postImage}\r\n            src={postImageURL}\r\n            alt={postTitle}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpandedPostSummaryCard;\r\n","import { memo } from \"react\";\r\nimport { calculateReadingTime } from \"../utils/dataFormat\";\r\nimport { getBase64ImageURL } from \"../utils/imageConvertion\";\r\nimport ExpandedPostSummaryCard from \"./ExpandedPostSummaryCard\";\r\n\r\nconst HomeAllPostsDeck = memo(({ posts }) => {\r\n  return posts.map((post) => (\r\n    <ExpandedPostSummaryCard\r\n      key={post._id}\r\n      authorId={post.author._id}\r\n      authorImageURL={post.author.imageURL}\r\n      authorImageFileName={post.author.imageFileName}\r\n      authorName={post.author.name}\r\n      postId={post._id}\r\n      postTitle={post.title}\r\n      postSummary={post.summary}\r\n      postCreationDate={post.createdAt}\r\n      postReadingTime={calculateReadingTime(post.description)}\r\n      postTags={post.tags}\r\n      postImageURL={post.imageURL}\r\n    />\r\n  ));\r\n});\r\n\r\nexport default HomeAllPostsDeck;\r\n","import { Avatar, Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  calculateReadingTime,\r\n  convertToText,\r\n  getAuthorNameInitials,\r\n} from \"../utils/dataFormat\";\r\nimport { getPostFormattedDate } from \"../utils/dateUtils\";\r\nimport { getBase64ImageURL } from \"../utils/imageConvertion\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    height: theme.spacing(20),\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  authorInfoContainer: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  postTitle: {\r\n    textDecoration: \"none\",\r\n    display: \"block\",\r\n    color: theme.palette.text.primary,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: theme.typography.subtitle1.fontSize,\r\n    },\r\n  },\r\n  authorName: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nconst PostSummaryCard = ({\r\n  postId,\r\n  authorId,\r\n  authorImageURL,\r\n  authorName,\r\n  postTitle,\r\n  publishDate,\r\n  description,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.container} variant=\"outlined\" elevation={0}>\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          className={classes.authorInfoContainer}\r\n        >\r\n          {authorImageURL ? (\r\n            <Avatar\r\n              className={classes.avatar}\r\n              src={authorImageURL}\r\n              alt={authorName}\r\n            />\r\n          ) : (\r\n            <Avatar className={classes.avatar}>\r\n              {getAuthorNameInitials(authorName)}\r\n            </Avatar>\r\n          )}\r\n          <Typography\r\n            className={classes.authorName}\r\n            variant=\"caption\"\r\n            component={Link}\r\n            to={`/authors/${authorId}`}\r\n          >\r\n            {authorName}\r\n          </Typography>\r\n        </Grid>\r\n        <Typography\r\n          className={classes.postTitle}\r\n          variant=\"h6\"\r\n          gutterBottom\r\n          component={Link}\r\n          to={`/posts/${postId}`}\r\n        >\r\n          {postTitle}\r\n        </Typography>\r\n        <Typography variant=\"caption\">\r\n          {getPostFormattedDate(publishDate)} ·{\" \"}\r\n          {calculateReadingTime(convertToText(description))} min read\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PostSummaryCard;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport { memo } from \"react\";\r\nimport PostSummaryCard from \"./PostSummaryCard\";\r\n\r\nconst HomeLatestPostsDeck = memo(({ posts }) => {\r\n  return (\r\n    <Grid container justifyContent=\"flex-start\" spacing={2} alignItems=\"center\">\r\n      {posts.map((post) => (\r\n        <Grid key={post._id} item xs={12} sm={3}>\r\n          <PostSummaryCard\r\n            postId={post._id}\r\n            authorId={post.author._id}\r\n            authorImageURL={post.author.imageURL}\r\n            authorName={post.author.name}\r\n            postTitle={post.title}\r\n            publishDate={post.createdAt}\r\n            description={post.description}\r\n          />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default HomeLatestPostsDeck;\r\n","import { Chip, makeStyles } from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  categoryChip: {\r\n    marginRight: theme.spacing(2),\r\n    margin: theme.spacing(1, 0),\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n      backgroundColor: grey[100],\r\n    },\r\n  },\r\n}));\r\n\r\nconst HomeCategoriesDeck = memo(({ categories }) => {\r\n  const classes = useStyles();\r\n  return categories.map((category) => (\r\n    <Chip\r\n      key={category._id}\r\n      component={Link}\r\n      to={`/posts/search/categories/${category.title}`}\r\n      className={classes.categoryChip}\r\n      label={category.title}\r\n      variant=\"outlined\"\r\n    />\r\n  ));\r\n});\r\n\r\nexport default HomeCategoriesDeck;\r\n","import Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\nimport homeBg from \"../../assets/homeBg.svg\";\r\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\r\nimport UserModal from \"../../components/UserModal\";\r\nimport LoginScreen from \"./LoginScreen\";\r\nimport RegisterScreen from \"./RegisterScreen\";\r\nimport { useCallback, useRef, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport {\r\n  CATEGORY_DATA,\r\n  LATEST_POST_DATA,\r\n  PAGINATED_POST_DATA,\r\n} from \"../../definitions/reactQueryConstants/queryConstants\";\r\nimport {\r\n  getLatestPosts,\r\n  getPaginatedPosts,\r\n} from \"../../data/postQueryFunctions\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { getAllCategories } from \"../../data/categoryQueryFunctions\";\r\nimport ExpandedPostSummaryLoaderDeck from \"../../components/ExpandedPostSummaryLoaderDeck\";\r\nimport PostSummaryCardLoaderDeck from \"../../components/PostSummaryCardLoaderDeck\";\r\nimport CategoryLoaderDeck from \"../../components/CategoryLoaderDeck\";\r\nimport HomeAllPostsDeck from \"../../components/HomeAllPostsDeck\";\r\nimport HomeLatestPostsDeck from \"../../components/HomeLatestPostsDeck\";\r\nimport HomeCategoriesDeck from \"../../components/HomeCategoriesDeck\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    margin: theme.spacing(4, 0),\r\n  },\r\n  headerTitle: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: theme.typography.h4.fontSize,\r\n      textAlign: \"center\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: theme.typography.h3.fontSize,\r\n    },\r\n  },\r\n  headerContent: {\r\n    marginBottom: theme.spacing(6),\r\n  },\r\n  headerContentContainer: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column-reverse\",\r\n    },\r\n  },\r\n  homeBg: {\r\n    width: \"100%\",\r\n    height: \"50vh\",\r\n  },\r\n  subHeader: {\r\n    fontWeight: theme.typography.fontWeightLight,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      textAlign: \"center\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: theme.typography.subtitle1.fontSize,\r\n    },\r\n  },\r\n  headerCallContainer: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  latestArticlesHeaderText: {\r\n    marginLeft: theme.spacing(0.3),\r\n  },\r\n  latestArticlesContainer: {\r\n    margin: theme.spacing(4, 0),\r\n    marginBottom: theme.spacing(8),\r\n  },\r\n  latestArticleHeader: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  allPostsContainer: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  categorySectionTitle: {\r\n    marginTop: theme.spacing(3),\r\n    fontSize: theme.typography.pxToRem(16),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  categoriesContainer: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  paginationContainer: {\r\n    marginTop: theme.spacing(8),\r\n  },\r\n}));\r\n\r\nconst HomeScreen = () => {\r\n  //#region states\r\n  const [openLoginModal, setOpenLoginModal] = useState(false);\r\n  const [openRegistrationModal, setOpenRegistrationModal] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  //#endregion\r\n\r\n  //#region refs\r\n  const allPostsContainerRef = useRef(null);\r\n  //#endregion\r\n\r\n  const classes = useStyles();\r\n\r\n  //#region data queries\r\n  const {\r\n    data: latestPostData,\r\n    isLoading: latestPostDataLoading,\r\n    isFetching: latestPostDataFetching,\r\n    isError: latestPostDataError,\r\n  } = useQuery(LATEST_POST_DATA, getLatestPosts, {\r\n    refetchOnWindowFocus: false,\r\n    refetchInterval: 10 * 60 * 1000,\r\n  });\r\n  const {\r\n    data: allPostData,\r\n    isLoading: allPostDataLoading,\r\n    isFetching: allPostDataFetching,\r\n    isError: allPostDataError,\r\n  } = useQuery(\r\n    [PAGINATED_POST_DATA, { page: currentPage, limit: 5 }],\r\n    ({ queryKey }) => getPaginatedPosts(queryKey[1]),\r\n    {\r\n      refetchOnWindowFocus: false,\r\n      refetchInterval: 10 * 60 * 1000,\r\n      keepPreviousData: true,\r\n    }\r\n  );\r\n  const {\r\n    data: allCategoryData,\r\n    isLoading: allCategoryDataLoading,\r\n    isFetching: allCategoryDataFectching,\r\n    isError: allCategoryDataError,\r\n  } = useQuery(CATEGORY_DATA, getAllCategories, {\r\n    refetchOnWindowFocus: false,\r\n    refetchInterval: 10 * 60 * 1000,\r\n  });\r\n  //#endregion\r\n\r\n  //#region action handlers\r\n  const handleLoginModalOpen = useCallback(() => {\r\n    setOpenLoginModal(true);\r\n  }, []);\r\n  const handleLoginModalClose = useCallback(() => {\r\n    setOpenLoginModal(false);\r\n  }, []);\r\n  const handleRegistrationModalOpen = useCallback(() => {\r\n    setOpenRegistrationModal(true);\r\n  }, []);\r\n  const handleRegistrationModalClose = useCallback(() => {\r\n    setOpenRegistrationModal(false);\r\n  }, []);\r\n\r\n  const handlePageChange = useCallback((_, page) => {\r\n    setCurrentPage(page);\r\n    window.scrollTo(0, allPostsContainerRef.current.offsetTop);\r\n  }, []);\r\n  //#endregion\r\n\r\n  return (\r\n    <>\r\n      <header className={classes.header}>\r\n        <Grid\r\n          container\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          className={classes.headerContentContainer}\r\n        >\r\n          <Grid item xs={12} sm={6}>\r\n            <div className={classes.headerContent}>\r\n              <Typography\r\n                variant=\"h2\"\r\n                component=\"h1\"\r\n                gutterBottom\r\n                className={classes.headerTitle}\r\n              >\r\n                Blogen is a place where creative minds grow\r\n              </Typography>\r\n              <Typography\r\n                className={classes.subHeader}\r\n                variant=\"h6\"\r\n                component=\"h4\"\r\n              >\r\n                Share your knowledge and get inspired\r\n              </Typography>\r\n            </div>\r\n            <Grid container className={classes.headerCallContainer}>\r\n              <Button\r\n                onClick={() => setOpenLoginModal(\"true\")}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Start Sharing\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <img\r\n              className={classes.homeBg}\r\n              src={homeBg}\r\n              alt=\"home background\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </header>\r\n      <Divider />\r\n      <section className={classes.latestArticlesContainer}>\r\n        <Grid\r\n          container\r\n          alignItems=\"center\"\r\n          className={classes.latestArticleHeader}\r\n        >\r\n          <AutorenewIcon />\r\n          <Typography\r\n            className={classes.latestArticlesHeaderText}\r\n            variant=\"subtitle2\"\r\n            component=\"h2\"\r\n            gutterBottom\r\n          >\r\n            LATEST ARTICLES\r\n          </Typography>\r\n        </Grid>\r\n        {latestPostDataLoading || latestPostDataFetching ? (\r\n          <PostSummaryCardLoaderDeck count={6} />\r\n        ) : latestPostDataError ? (\r\n          <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n            <Typography variant=\"h6\" component=\"h4\" gutterBottom>\r\n              <Alert className={classes.root} severity=\"error\">\r\n                Error occurred while fetching data\r\n              </Alert>\r\n            </Typography>\r\n          </Grid>\r\n        ) : (\r\n          <HomeLatestPostsDeck posts={latestPostData} />\r\n        )}\r\n      </section>\r\n      <Divider />\r\n      <section className={classes.allPostsContainer} ref={allPostsContainerRef}>\r\n        <Grid\r\n          spacing={10}\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid item xs={12} sm={8}>\r\n            {allPostDataLoading || allPostDataFetching ? (\r\n              <ExpandedPostSummaryLoaderDeck count={5} />\r\n            ) : allPostDataError ? (\r\n              <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n                <Typography variant=\"h6\" component=\"h4\" gutterBottom>\r\n                  <Alert severity=\"error\">\r\n                    Error occurred while fetching data\r\n                  </Alert>\r\n                </Typography>\r\n              </Grid>\r\n            ) : (\r\n              <>\r\n                <HomeAllPostsDeck posts={allPostData.docs} />\r\n                <Grid\r\n                  className={classes.paginationContainer}\r\n                  container\r\n                  justifyContent=\"center\"\r\n                >\r\n                  <Pagination\r\n                    count={allPostData.totalPages}\r\n                    page={currentPage}\r\n                    onChange={handlePageChange}\r\n                  />\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Typography\r\n              className={classes.categorySectionTitle}\r\n              variant=\"h6\"\r\n              component=\"h4\"\r\n              gutterBottom\r\n            >\r\n              DISCOVER MORE OF WHAT MATTERS TO YOU\r\n            </Typography>\r\n            {allCategoryDataLoading || allCategoryDataFectching ? (\r\n              <CategoryLoaderDeck count={8} />\r\n            ) : allCategoryDataError ? (\r\n              <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n                <Typography variant=\"h6\" component=\"h4\" gutterBottom>\r\n                  <Alert className={classes.root} severity=\"error\">\r\n                    Error occurred while fetching data\r\n                  </Alert>\r\n                </Typography>\r\n              </Grid>\r\n            ) : (\r\n              <Grid container className={classes.categoriesContainer}>\r\n                <HomeCategoriesDeck categories={allCategoryData} />\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </section>\r\n      {/* Modals */}\r\n      <UserModal open={openLoginModal} onClose={handleLoginModalClose}>\r\n        <LoginScreen\r\n          openRegistrationModal={handleRegistrationModalOpen}\r\n          handleModalClose={handleLoginModalClose}\r\n        />\r\n      </UserModal>\r\n      <UserModal\r\n        open={openRegistrationModal}\r\n        onClose={handleRegistrationModalClose}\r\n        expanded={true}\r\n      >\r\n        <RegisterScreen\r\n          openLoginModal={handleLoginModalOpen}\r\n          handleModalClose={handleRegistrationModalClose}\r\n        />\r\n      </UserModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import { createTheme } from \"@material-ui/core\";\r\nimport { grey, orange } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    background: {\r\n      default: \"#ffffff\",\r\n    },\r\n    primary: {\r\n      light: orange[\"600\"],\r\n      main: orange[\"800\"],\r\n      dark: orange[\"900\"],\r\n      contrastText: grey[\"50\"],\r\n    },\r\n    secondary: {\r\n      light: grey[\"500\"],\r\n      main: grey[\"600\"],\r\n      dark: grey[\"700\"],\r\n      contrastText: grey[\"50\"],\r\n    },\r\n    text: {\r\n      primary: grey[\"700\"],\r\n      secondary: grey[\"800\"],\r\n      disabled: grey[\"600\"],\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Drawer,\r\n  List,\r\n  Typography,\r\n  Divider,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  People as PeopleIcon,\r\n  Category as CategoryIcon,\r\n  Note as PostIcon,\r\n} from \"@material-ui/icons\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport { Link, NavLink, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { clearUserData } from \"../redux/slices/userDataSlice\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  list: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  bottomList: {\r\n    marginTop: \"auto\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n  drawerHeader: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    textDecoration: \"none\",\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    letterSpacing: theme.spacing(0.5),\r\n  },\r\n  activeLink: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst AdminLayout = ({ children }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(clearUserData());\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <Typography\r\n          className={classes.drawerHeader}\r\n          variant=\"h6\"\r\n          component={Link}\r\n          to=\"/admin\"\r\n          color=\"textPrimary\"\r\n          align=\"center\"\r\n        >\r\n          Blogen\r\n        </Typography>\r\n        <Divider />\r\n        <List className={classes.list}>\r\n          <ListItem\r\n            button\r\n            component={NavLink}\r\n            to=\"/admin/users\"\r\n            activeClassName={classes.activeLink}\r\n          >\r\n            <ListItemIcon>\r\n              <PeopleIcon\r\n                color={\r\n                  location.pathname === \"/admin/users\" ? \"primary\" : \"inherit\"\r\n                }\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Users\" />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            component={NavLink}\r\n            to=\"/admin/categories\"\r\n            activeClassName={classes.activeLink}\r\n          >\r\n            <ListItemIcon>\r\n              <CategoryIcon\r\n                color={\r\n                  location.pathname === \"/admin/categories\"\r\n                    ? \"primary\"\r\n                    : \"inherit\"\r\n                }\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Categories\" />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            component={NavLink}\r\n            to=\"/admin/posts\"\r\n            activeClassName={classes.activeLink}\r\n          >\r\n            <ListItemIcon>\r\n              <PostIcon\r\n                color={\r\n                  location.pathname.includes(\"/admin/posts\")\r\n                    ? \"primary\"\r\n                    : \"inherit\"\r\n                }\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Posts\" />\r\n          </ListItem>\r\n        </List>\r\n        <List className={classes.bottomList}>\r\n          <ListItem divider></ListItem>\r\n          <ListItem\r\n            button\r\n            component={NavLink}\r\n            to=\"/admin/profile\"\r\n            activeClassName={classes.activeLink}\r\n          >\r\n            <ListItemIcon>\r\n              <AccountCircleIcon\r\n                color={\r\n                  location.pathname.includes(\"/admin/profile\")\r\n                    ? \"primary\"\r\n                    : \"inherit\"\r\n                }\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Profile\" />\r\n          </ListItem>\r\n          <ListItem button onClick={handleLogout}>\r\n            <ListItemIcon>\r\n              <PowerSettingsNewIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Logout\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </div>\r\n  );\r\n};\r\nexport default AdminLayout;\r\n","const columns = [\r\n  { field: \"id\", hide: true },\r\n  { field: \"name\", headerName: \"Name\", flex: 1 },\r\n  { field: \"email\", headerName: \"Email Address\", flex: 1 },\r\n  { field: \"bio\", headerName: \"Bio\", flex: 1 },\r\n  { field: \"facebookId\", headerName: \"Facebook Id\", flex: 1 },\r\n  { field: \"linkedinId\", headerName: \"Linkedin Id\", flex: 1 },\r\n  { field: \"twitterId\", headerName: \"Twitter Id\", flex: 1 },\r\n];\r\n\r\nexport default columns;\r\n","import { Box, Button, Grid, makeStyles, TextField } from \"@material-ui/core\";\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\nimport { useFormik } from \"formik\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport * as yup from \"yup\";\r\nimport { createUser } from \"../../../data/userQueryFunctions\";\r\nimport { USER_DATA } from \"../../../definitions/reactQueryConstants/queryConstants\";\r\nimport { useState } from \"react\";\r\nimport { sanitizeSocialURL } from \"../../../utils/dataFormat\";\r\nimport AlertNotification from \"../../../components/AlertNotification\";\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string(\"Enter user name\").required(\"This field is required\"),\r\n  email: yup\r\n    .string(\"Enter user email address\")\r\n    .required(\"This field is required\")\r\n    .email(\"Please enter a valid email address\"),\r\n  password: yup\r\n    .string(\"Enter user password\")\r\n    .min(8, \"Password length must be at least 8 characters\")\r\n    .required(\"This field is required\"),\r\n  confirmPassword: yup.string(\"Confirm user password\").when(\"password\", {\r\n    is: (val) => val && val.length >= 8,\r\n    then: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"password\")], \"Both passwords need to be the same\")\r\n      .required(\"This field is required\"),\r\n    otherwise: yup.string(\"Confirm user password\"),\r\n  }),\r\n  bio: yup.string(\"Enter user bio\"),\r\n  facebookId: yup.string(\"Enter user facebook id\"),\r\n  linkedinId: yup.string(\"Enter user linkedin id\"),\r\n  twitterId: yup.string(\"Enter user twitter id\"),\r\n  image: yup.mixed(),\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formContent: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  inputGroup: {\r\n    display: \"block\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  inputLabel: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  errorLabel: {\r\n    color: theme.palette.error.main,\r\n    marginLeft: theme.spacing(2),\r\n    fontSize: \"0.75rem\",\r\n    lineHeight: 1.66,\r\n    letterSpacing: \"0.03333em\",\r\n    display: \"block\",\r\n  },\r\n  alertContainer: {\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst SignupScreen = ({ showSuccessAlertHandler, handleModalClose }) => {\r\n  // states\r\n  const [showErrorAlert, setShowErrorAlert] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n  const queryClient = useQueryClient();\r\n  const mutation = useMutation(createUser, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(USER_DATA);\r\n      showSuccessAlertHandler();\r\n    },\r\n    onError: (error) => {\r\n      if (error.status === 400) {\r\n        setErrorMessage(\"User with this email already exists\");\r\n        setShowErrorAlert(true);\r\n      }\r\n    },\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      bio: \"\",\r\n      facebookId: \"\",\r\n      linkedinId: \"\",\r\n      twitterId: \"\",\r\n      image: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      mutation.mutate({\r\n        name: values.name,\r\n        email: values.email,\r\n        password: values.password,\r\n        bio: values.bio,\r\n        facebookId: sanitizeSocialURL(values.facebookId),\r\n        linkedinId: sanitizeSocialURL(values.linkedinId),\r\n        twitterId: sanitizeSocialURL(values.twitterId),\r\n        image: values.image,\r\n        isAdmin: false,\r\n      });\r\n      handleModalClose();\r\n    },\r\n  });\r\n  return (\r\n    <Box>\r\n      <Box className={classes.alertContainer}>\r\n        <AlertNotification\r\n          alertSeverity=\"error\"\r\n          alertText={errorMessage}\r\n          showState={showErrorAlert}\r\n          closeHandler={() => setShowErrorAlert(false)}\r\n        />\r\n      </Box>\r\n      <form onSubmit={formik.handleSubmit} className={classes.formContent}>\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          value={formik.values.name}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          error={formik.touched.name && Boolean(formik.errors.name)}\r\n          helperText={(formik.touched.name && formik.errors.name) || \" \"}\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          value={formik.values.email}\r\n          onBlur={formik.handleBlur}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={(formik.touched.email && formik.errors.email) || \" \"}\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.password}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={\r\n            (formik.touched.password && formik.errors.password) || \" \"\r\n          }\r\n          size=\"small\"\r\n          type=\"password\"\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          id=\"confirmPassword\"\r\n          name=\"confirmPassword\"\r\n          label=\"Confirm Password\"\r\n          value={formik.values.confirmPassword}\r\n          onBlur={formik.handleBlur}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.confirmPassword &&\r\n            Boolean(formik.errors.confirmPassword)\r\n          }\r\n          helperText={\r\n            (formik.touched.confirmPassword && formik.errors.confirmPassword) ||\r\n            \" \"\r\n          }\r\n          size=\"small\"\r\n          type=\"password\"\r\n        />\r\n        <Box className={classes.inputGroup}>\r\n          <input\r\n            accept=\"image/*\"\r\n            className={classes.input}\r\n            id=\"image\"\r\n            multiple\r\n            type=\"file\"\r\n            onChange={(event) => {\r\n              formik.setFieldValue(\"image\", event.target.files[0]);\r\n            }}\r\n            onBlur={formik.handleBlur}\r\n            name=\"image\"\r\n          />\r\n          <label htmlFor=\"image\">\r\n            <Button\r\n              startIcon={<PhotoCameraIcon />}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component=\"span\"\r\n            >\r\n              Upload Photo\r\n            </Button>\r\n          </label>\r\n          <label className={classes.inputLabel}>\r\n            {formik.values.image.name ? formik.values.image.name : \"\"}\r\n          </label>\r\n          <span className={classes.errorLabel}>\r\n            {(formik.touched.image && formik.errors.image) || \" \"}\r\n          </span>\r\n        </Box>\r\n        <TextField\r\n          fullWidth\r\n          multiline\r\n          minRows={4}\r\n          variant=\"outlined\"\r\n          id=\"bio\"\r\n          name=\"bio\"\r\n          label=\"Bio\"\r\n          value={formik.values.bio}\r\n          onBlur={formik.handleBlur}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.bio && Boolean(formik.errors.bio)}\r\n          helperText={(formik.touched.bio && formik.errors.bio) || \" \"}\r\n          size=\"small\"\r\n        />\r\n        <Grid container justifyContent=\"space-between\" spacing={1}>\r\n          <Grid item xs={4}>\r\n            <Grid container>\r\n              <Grid item xs={3}>\r\n                <FacebookIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  id=\"facebookId\"\r\n                  name=\"facebookId\"\r\n                  label=\"Facebook\"\r\n                  value={formik.values.facebookId}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  error={\r\n                    formik.touched.facebookId &&\r\n                    Boolean(formik.errors.facebookId)\r\n                  }\r\n                  helperText={\r\n                    (formik.touched.facebookId && formik.errors.facebookId) ||\r\n                    \" \"\r\n                  }\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Grid container>\r\n              <Grid item xs={3}>\r\n                <LinkedInIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  id=\"linkedinId\"\r\n                  name=\"linkedinId\"\r\n                  label=\"Linkedin\"\r\n                  value={formik.values.linkedinId}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  error={\r\n                    formik.touched.linkedinId &&\r\n                    Boolean(formik.errors.linkedinId)\r\n                  }\r\n                  helperText={\r\n                    (formik.touched.linkedinId && formik.errors.linkedinId) ||\r\n                    \" \"\r\n                  }\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Grid container>\r\n              <Grid item xs={3}>\r\n                <TwitterIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  id=\"twitterId\"\r\n                  name=\"twitterId\"\r\n                  label=\"Twitter\"\r\n                  value={formik.values.twitterId}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  error={\r\n                    formik.touched.twitterId && Boolean(formik.errors.twitterId)\r\n                  }\r\n                  helperText={\r\n                    (formik.touched.twitterId && formik.errors.twitterId) || \" \"\r\n                  }\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          type=\"submit\"\r\n          fullWidth\r\n          className={classes.button}\r\n          startIcon={<AddBoxIcon />}\r\n        >\r\n          Create\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SignupScreen;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  modalContent: {\r\n    minWidth: \"30vw\",\r\n    maxWidth: \"50vw\",\r\n    minHeight: \"28vh\",\r\n  },\r\n  modalHeader: {\r\n    marginBottom: theme.spacing(1.5),\r\n    marginTop: theme.spacing(2.5),\r\n  },\r\n  heading: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AdminModal = ({\r\n  children,\r\n  modalOpenState,\r\n  modalCloseHandler,\r\n  modalTitle,\r\n  modalIcon,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"Create User Modal\"\r\n      aria-describedby=\"Modal for creating a User\"\r\n      open={modalOpenState}\r\n      onClose={modalCloseHandler}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n      className={classes.modal}\r\n    >\r\n      <Fade in={modalOpenState}>\r\n        <Paper className={classes.modalContent}>\r\n          <Grid\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            className={classes.modalHeader}\r\n          >\r\n            {modalIcon}\r\n            <Typography className={classes.heading} variant=\"h5\" component=\"h1\">\r\n              {modalTitle}\r\n            </Typography>\r\n          </Grid>\r\n          {children}\r\n        </Paper>\r\n      </Fade>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AdminModal;\r\n","import {\r\n  Box,\r\n  Button,\r\n  makeStyles,\r\n  TextField,\r\n  CircularProgress,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { useFormik } from \"formik\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport * as yup from \"yup\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\r\n\r\nimport { getUserById, updateUserById } from \"../../../data/userQueryFunctions\";\r\nimport { SINGLE_USER_DATA } from \"../../../definitions/reactQueryConstants/queryConstants\";\r\nimport { sanitizeSocialURL } from \"../../../utils/dataFormat\";\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string(\"Enter you name\"),\r\n  email: yup\r\n    .string(\"Enter you email address\")\r\n    .email(\"Please enter a valid email address\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password length must be at least 8 characters\"),\r\n  confirmPassword: yup.string(\"Confirm your password\").when(\"password\", {\r\n    is: (val) => val && val.length >= 8,\r\n    then: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"password\")], \"Both passwords need to be the same\"),\r\n    otherwise: yup.string(\"Confirm your password\"),\r\n  }),\r\n  bio: yup.string(\"Enter user bio\"),\r\n  facebookId: yup.string(\"Enter user facebook id\"),\r\n  linkedinId: yup.string(\"Enter user linkedin id\"),\r\n  twitterId: yup.string(\"Enter user twitter id\"),\r\n  image: yup.mixed(),\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formContent: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  inputGroup: {\r\n    display: \"block\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  inputLabel: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  errorLabel: {\r\n    color: theme.palette.error.main,\r\n    marginLeft: theme.spacing(2),\r\n    fontSize: \"0.75rem\",\r\n    lineHeight: 1.66,\r\n    letterSpacing: \"0.03333em\",\r\n    display: \"block\",\r\n  },\r\n}));\r\n\r\nconst EditUserScreen = ({\r\n  showSuccessAlertHandler,\r\n  handleModalClose,\r\n  userId,\r\n}) => {\r\n  const classes = useStyles();\r\n  const queryClient = useQueryClient();\r\n  const { isLoading, isError, data } = useQuery(\r\n    [SINGLE_USER_DATA, userId],\r\n    ({ queryKey }) => getUserById(queryKey[1])\r\n  );\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      bio: \"\",\r\n      facebookId: \"\",\r\n      linkedinId: \"\",\r\n      twitterId: \"\",\r\n      image: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      mutation.mutate({\r\n        userId: userId,\r\n        values: {\r\n          name: values.name,\r\n          email: values.email,\r\n          password: values.password,\r\n          bio: values.bio,\r\n          facebookId: sanitizeSocialURL(values.facebookId),\r\n          linkedinId: sanitizeSocialURL(values.linkedinId),\r\n          twitterId: sanitizeSocialURL(values.twitterId),\r\n          image: values.image,\r\n          isAdmin: false,\r\n        },\r\n      });\r\n      handleModalClose();\r\n    },\r\n  });\r\n  if (!isLoading && !isError) {\r\n    formik.initialValues.name = data.name;\r\n    formik.initialValues.email = data.email;\r\n    formik.initialValues.bio = data.bio;\r\n    formik.initialValues.facebookId = data.facebookId;\r\n    formik.initialValues.linkedinId = data.linkedinId;\r\n    formik.initialValues.twitterId = data.twitterId;\r\n  }\r\n  const mutation = useMutation(updateUserById, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"users\");\r\n      showSuccessAlertHandler();\r\n    },\r\n  });\r\n  return (\r\n    <Box>\r\n      {isLoading && !isError ? (\r\n        <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n          <CircularProgress />\r\n        </Grid>\r\n      ) : (\r\n        <form onSubmit={formik.handleSubmit} className={classes.formContent}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            value={formik.values.name}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.touched.name && Boolean(formik.errors.name)}\r\n            helperText={(formik.touched.name && formik.errors.name) || \" \"}\r\n            size=\"small\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            value={formik.values.email}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={(formik.touched.email && formik.errors.email) || \" \"}\r\n            size=\"small\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={\r\n              (formik.touched.password && formik.errors.password) || \" \"\r\n            }\r\n            size=\"small\"\r\n            type=\"password\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            id=\"confirmPassword\"\r\n            name=\"confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            value={formik.values.confirmPassword}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            error={\r\n              formik.touched.confirmPassword &&\r\n              Boolean(formik.errors.confirmPassword)\r\n            }\r\n            helperText={\r\n              (formik.touched.confirmPassword &&\r\n                formik.errors.confirmPassword) ||\r\n              \" \"\r\n            }\r\n            size=\"small\"\r\n            type=\"password\"\r\n          />\r\n          <Box className={classes.inputGroup}>\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              id=\"image\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={(event) => {\r\n                formik.setFieldValue(\"image\", event.target.files[0]);\r\n              }}\r\n              onBlur={formik.handleBlur}\r\n              name=\"image\"\r\n            />\r\n            <label htmlFor=\"image\">\r\n              <Button\r\n                startIcon={<PhotoCameraIcon />}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                component=\"span\"\r\n              >\r\n                Upload Photo\r\n              </Button>\r\n            </label>\r\n            <label className={classes.inputLabel}>\r\n              {formik.values.image.name ? formik.values.image.name : \"\"}\r\n            </label>\r\n            <span className={classes.errorLabel}>\r\n              {(formik.touched.image && formik.errors.image) || \" \"}\r\n            </span>\r\n          </Box>\r\n          <TextField\r\n            fullWidth\r\n            multiline\r\n            minRows={4}\r\n            variant=\"outlined\"\r\n            id=\"bio\"\r\n            name=\"bio\"\r\n            label=\"Bio\"\r\n            value={formik.values.bio}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.bio && Boolean(formik.errors.bio)}\r\n            helperText={(formik.touched.bio && formik.errors.bio) || \" \"}\r\n            size=\"small\"\r\n          />\r\n          <Grid container justifyContent=\"space-between\" spacing={1}>\r\n            <Grid item xs={4}>\r\n              <Grid container>\r\n                <Grid item xs={3}>\r\n                  <FacebookIcon fontSize=\"large\" />\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"facebookId\"\r\n                    name=\"facebookId\"\r\n                    label=\"Facebook\"\r\n                    value={formik.values.facebookId}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    error={\r\n                      formik.touched.facebookId &&\r\n                      Boolean(formik.errors.facebookId)\r\n                    }\r\n                    helperText={\r\n                      (formik.touched.facebookId && formik.errors.facebookId) ||\r\n                      \" \"\r\n                    }\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Grid container>\r\n                <Grid item xs={3}>\r\n                  <LinkedInIcon fontSize=\"large\" />\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"linkedinId\"\r\n                    name=\"linkedinId\"\r\n                    label=\"Linkedin\"\r\n                    value={formik.values.linkedinId}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    error={\r\n                      formik.touched.linkedinId &&\r\n                      Boolean(formik.errors.linkedinId)\r\n                    }\r\n                    helperText={\r\n                      (formik.touched.linkedinId && formik.errors.linkedinId) ||\r\n                      \" \"\r\n                    }\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Grid container>\r\n                <Grid item xs={3}>\r\n                  <TwitterIcon fontSize=\"large\" />\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <TextField\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    id=\"twitterId\"\r\n                    name=\"twitterId\"\r\n                    label=\"Twitter\"\r\n                    value={formik.values.twitterId}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    error={\r\n                      formik.touched.twitterId &&\r\n                      Boolean(formik.errors.twitterId)\r\n                    }\r\n                    helperText={\r\n                      (formik.touched.twitterId && formik.errors.twitterId) ||\r\n                      \" \"\r\n                    }\r\n                    size=\"small\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            type=\"submit\"\r\n            fullWidth\r\n            className={classes.button}\r\n            startIcon={<CreateIcon />}\r\n          >\r\n            Update\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditUserScreen;\r\n","import { Box, Button, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  title: {\r\n    marginBottom: theme.spacing(2),\r\n    textAlign: \"center\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n    marginLeft: theme.spacing(1.5),\r\n    marginRight: theme.spacing(1.5),\r\n  },\r\n}));\r\n\r\nconst AdminDeleteConfirmation = ({\r\n  deleteAction,\r\n  cancelAction,\r\n  singleItem = false,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography variant=\"body2\" className={classes.title}>\r\n        {singleItem\r\n          ? \"Are you sure you want to delete the selected item?\"\r\n          : \"Are you sure you want to delete the selected item(s)?\"}\r\n      </Typography>\r\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n        <Button\r\n          onClick={deleteAction}\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<DeleteIcon />}\r\n        >\r\n          Yes\r\n        </Button>\r\n        <Button\r\n          onClick={cancelAction}\r\n          className={classes.button}\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          startIcon={<CancelIcon />}\r\n        >\r\n          No\r\n        </Button>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AdminDeleteConfirmation;\r\n","import { useMutation, useQueryClient } from \"react-query\";\r\nimport AdminDeleteConfirmation from \"../../../components/AdminDeleteConfirmation\";\r\nimport { deleteMultipleUsersById } from \"../../../data/userQueryFunctions\";\r\n\r\nconst AdminUserDeleteScreen = ({\r\n  showSuccessAlertHandler,\r\n  userId,\r\n  handleModalClose,\r\n}) => {\r\n  const queryClient = useQueryClient();\r\n  const mutation = useMutation(deleteMultipleUsersById, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"users\");\r\n      showSuccessAlertHandler();\r\n      handleModalClose();\r\n    },\r\n  });\r\n  const handleUserDelete = () => {\r\n    mutation.mutate(userId);\r\n  };\r\n  return (\r\n    <AdminDeleteConfirmation\r\n      deleteAction={handleUserDelete}\r\n      cancelAction={handleModalClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AdminUserDeleteScreen;\r\n","import { ButtonGroup, makeStyles } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport {\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon,\r\n  Add as CreateIcon,\r\n} from \"@material-ui/icons\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport { DataGrid, GridToolbar } from \"@material-ui/data-grid\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ScreenTitle from \"../../../components/ScreenTitle\";\r\nimport columns from \"../../../definitions/gridColDef/userGrids\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getAllUsers } from \"../../../data/userQueryFunctions\";\r\nimport SignupScreen from \"./SignupScreen\";\r\nimport { USER_DATA } from \"../../../definitions/reactQueryConstants/queryConstants\";\r\nimport AdminModal from \"../../../components/AdminModal\";\r\nimport AlertNotification from \"../../../components/AlertNotification\";\r\nimport EditUserScreen from \"./EditUserScreen\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AdminUserDeleteScreen from \"./AdminUserDeleteScreen\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  buttonGroup: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  dataGridContainer: {\r\n    height: \"70vh\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst AdminUsers = (props) => {\r\n  const history = useHistory();\r\n  const { user } = useSelector((state) => state.userData);\r\n  const classes = useStyles();\r\n  const { isLoading, isError, data, error, isFetching } = useQuery(\r\n    USER_DATA,\r\n    getAllUsers,\r\n    { refetchOnWindowFocus: false, refetchInterval: 10 * 60 * 1000 }\r\n  );\r\n  let rows = [];\r\n\r\n  // states\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [showCreateSuccessAlert, setShowCreateSuccessAlert] = useState(false);\r\n  const [showEditSuccessAlert, setShowEditSuccessAlert] = useState(false);\r\n  const [showDeleteSuccessAlert, setShowDeleteSuccessAlert] = useState(false);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [editDisabled, setEditDisabled] = useState(true);\r\n  const [deleteDisabled, setDeleteDisabled] = useState(true);\r\n\r\n  // effects\r\n  useEffect(() => {\r\n    if (!user.isAdmin) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, user]);\r\n\r\n  useEffect(() => {\r\n    if (selectedRows.length > 0) {\r\n      setEditDisabled(false);\r\n      setDeleteDisabled(false);\r\n    }\r\n    if (selectedRows.length > 1) {\r\n      setEditDisabled(true);\r\n      setDeleteDisabled(false);\r\n    }\r\n    if (selectedRows.length === 0) {\r\n      setEditDisabled(true);\r\n      setDeleteDisabled(true);\r\n    }\r\n  }, [selectedRows]);\r\n\r\n  useEffect(() => {\r\n    if (isLoading || isFetching) {\r\n      setSelectedRows([]);\r\n    }\r\n  }, [isLoading, isFetching]);\r\n\r\n  // handlers\r\n  const handleModalOpen = (modalType) => {\r\n    switch (modalType) {\r\n      case \"CREATE\": {\r\n        setShowCreateModal(true);\r\n        break;\r\n      }\r\n      case \"DELETE\":\r\n        setShowDeleteModal(true);\r\n        break;\r\n      case \"EDIT\":\r\n        setShowEditModal(true);\r\n        break;\r\n      default: {\r\n        setShowCreateModal(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleModalClose = (modalType) => {\r\n    switch (modalType) {\r\n      case \"CREATE\": {\r\n        setShowCreateModal(false);\r\n        break;\r\n      }\r\n      case \"DELETE\":\r\n        setShowDeleteModal(false);\r\n        break;\r\n      case \"EDIT\":\r\n        setShowEditModal(false);\r\n        break;\r\n      default: {\r\n        setShowCreateModal(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!isLoading && !isError && !isFetching && data.length > 0) {\r\n    rows = data\r\n      .filter((user) => !user.isAdmin)\r\n      .map((user) => ({\r\n        id: user._id,\r\n        name: user.name,\r\n        email: user.email,\r\n        isAdmin: user.isAdmin,\r\n        bio: user.bio,\r\n        linkedinId: user.linkedinId,\r\n        twitterId: user.twitterId,\r\n        facebookId: user.facebookId,\r\n      }));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ScreenTitle text=\"Users\" className={classes.root} />\r\n      <AlertNotification\r\n        showState={showCreateSuccessAlert}\r\n        alertText=\"User has been created\"\r\n        closeHandler={() => setShowCreateSuccessAlert(false)}\r\n        alertSeverity=\"success\"\r\n      />\r\n      <AlertNotification\r\n        showState={showEditSuccessAlert}\r\n        alertText=\"User data has been successfully updated\"\r\n        closeHandler={() => setShowEditSuccessAlert(false)}\r\n        alertSeverity=\"success\"\r\n      />\r\n      <AlertNotification\r\n        showState={showDeleteSuccessAlert}\r\n        alertText=\"The selected user(s) has been deleted\"\r\n        closeHandler={() => setShowDeleteSuccessAlert(false)}\r\n        alertSeverity=\"error\"\r\n      />\r\n      <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Typography variant=\"body1\" component=\"h1\">\r\n          All Users\r\n        </Typography>\r\n        <ButtonGroup\r\n          className={classes.buttonGroup}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          aria-label=\"admin user action button group\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"create\"\r\n            onClick={() => handleModalOpen(\"CREATE\")}\r\n          >\r\n            <CreateIcon fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton\r\n            aria-label=\"edit\"\r\n            disabled={editDisabled}\r\n            onClick={() => handleModalOpen(\"EDIT\")}\r\n          >\r\n            <EditIcon fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton\r\n            aria-label=\"delete\"\r\n            disabled={deleteDisabled}\r\n            onClick={() => handleModalOpen(\"DELETE\")}\r\n          >\r\n            <DeleteIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </ButtonGroup>\r\n      </Grid>\r\n      <Box className={classes.dataGridContainer}>\r\n        <DataGrid\r\n          loading={isLoading || isFetching}\r\n          checkboxSelection\r\n          columns={columns}\r\n          rows={rows}\r\n          pageSize={12}\r\n          onSelectionModelChange={(e) => setSelectedRows(e.selectionModel)}\r\n          components={{\r\n            Toolbar: GridToolbar,\r\n          }}\r\n          error={error}\r\n          {...props}\r\n        />\r\n      </Box>\r\n      <AdminModal\r\n        modalOpenState={showCreateModal}\r\n        modalCloseHandler={() => handleModalClose(\"CREATE\")}\r\n        modalTitle=\"Create New User\"\r\n        modalIcon={<AccountCircleIcon fontSize=\"large\" color=\"secondary\" />}\r\n      >\r\n        <SignupScreen\r\n          showSuccessAlertHandler={() => setShowCreateSuccessAlert(true)}\r\n          handleModalClose={() => handleModalClose(\"CREATE\")}\r\n        />\r\n      </AdminModal>\r\n      <AdminModal\r\n        modalOpenState={showEditModal}\r\n        modalCloseHandler={() => handleModalClose(\"EDIT\")}\r\n        modalTitle=\"Edit User\"\r\n        modalIcon={<AccountCircleIcon fontSize=\"large\" color=\"secondary\" />}\r\n      >\r\n        <EditUserScreen\r\n          userId={selectedRows[0]}\r\n          showSuccessAlertHandler={() => setShowEditSuccessAlert(true)}\r\n          handleModalClose={() => handleModalClose(\"EDIT\")}\r\n        />\r\n      </AdminModal>\r\n      <AdminModal\r\n        modalOpenState={showDeleteModal}\r\n        modalCloseHandler={() => handleModalClose(\"DELETE\")}\r\n        modalTitle=\"Confirm Delete\"\r\n        modalIcon={<ErrorIcon fontSize=\"medium\" color=\"secondary\" />}\r\n      >\r\n        <AdminUserDeleteScreen\r\n          userId={selectedRows}\r\n          showSuccessAlertHandler={() => setShowDeleteSuccessAlert(true)}\r\n          handleModalClose={() => handleModalClose(\"DELETE\")}\r\n        />\r\n      </AdminModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminUsers;\r\n","const columns = [\r\n  { field: \"id\", hide: true },\r\n  { field: \"Title\", flex: 1 },\r\n];\r\n\r\nexport default columns;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst adminCategoryHomeStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  dataGridContainer: {\r\n    height: \"70vh\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst adminCategoryCreateStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formContent: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst adminCategoryEditStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formContent: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport {\r\n  adminCategoryHomeStyles,\r\n  adminCategoryCreateStyles,\r\n  adminCategoryEditStyles,\r\n};\r\n","import { Box, Button, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from \"formik\";\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport * as yup from \"yup\";\r\nimport { createCategory } from \"../../../data/categoryQueryFunctions\";\r\nimport { CATEGORY_DATA } from \"../../../definitions/reactQueryConstants/queryConstants\";\r\nimport { adminCategoryCreateStyles } from \"../../../styles/adminCategoryStyles\";\r\n\r\nconst validationSchema = yup.object({\r\n  title: yup.string(\"Enter category title\").required(\"This field is required\"),\r\n});\r\n\r\nconst CreateCategoryScreen = ({\r\n  showSuccessAlertHandler,\r\n  handleModalClose,\r\n}) => {\r\n  const classes = adminCategoryCreateStyles();\r\n  const queryClient = useQueryClient();\r\n  const mutation = useMutation(createCategory, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(CATEGORY_DATA);\r\n      showSuccessAlertHandler();\r\n    },\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      mutation.mutate({\r\n        title: values.title,\r\n      });\r\n      handleModalClose();\r\n    },\r\n  });\r\n  return (\r\n    <Box>\r\n      <form onSubmit={formik.handleSubmit} className={classes.formContent}>\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          id=\"title\"\r\n          name=\"title\"\r\n          label=\"Title\"\r\n          value={formik.values.title}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          error={formik.touched.title && Boolean(formik.errors.title)}\r\n          helperText={(formik.touched.title && formik.errors.title) || \" \"}\r\n          size=\"small\"\r\n        />\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          type=\"submit\"\r\n          fullWidth\r\n          className={classes.button}\r\n          startIcon={<AddBoxIcon />}\r\n        >\r\n          Create\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CreateCategoryScreen;\r\n","import {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useFormik } from \"formik\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport * as yup from \"yup\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport {\r\n  getCategoryById,\r\n  updateCategoryById,\r\n} from \"../../../data/categoryQueryFunctions\";\r\nimport {\r\n  CATEGORY_DATA,\r\n  SINGLE_CATEGORY_DATA,\r\n} from \"../../../definitions/reactQueryConstants/queryConstants\";\r\nimport { adminCategoryEditStyles } from \"../../../styles/adminCategoryStyles\";\r\n\r\nconst validationSchema = yup.object({\r\n  title: yup.string(\"Enter category title\").required(\"This field is required\"),\r\n});\r\n\r\nconst EditCategoryScreen = ({\r\n  showSuccessAlertHandler,\r\n  handleModalClose,\r\n  categoryId,\r\n}) => {\r\n  const classes = adminCategoryEditStyles();\r\n  const queryClient = useQueryClient();\r\n  const { isLoading, isError, data } = useQuery(\r\n    [SINGLE_CATEGORY_DATA, categoryId],\r\n    ({ queryKey }) => getCategoryById(queryKey[1])\r\n  );\r\n\r\n  const mutation = useMutation(updateCategoryById, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(CATEGORY_DATA);\r\n      showSuccessAlertHandler();\r\n    },\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      mutation.mutate({\r\n        categoryId: categoryId,\r\n        values: {\r\n          title: values.title,\r\n        },\r\n      });\r\n      handleModalClose();\r\n    },\r\n  });\r\n\r\n  if (!isLoading && !isError) {\r\n    formik.initialValues.title = data.title;\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      {isLoading && !isError ? (\r\n        <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n          <CircularProgress />\r\n        </Grid>\r\n      ) : (\r\n        <form onSubmit={formik.handleSubmit} className={classes.formContent}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            label=\"Title\"\r\n            value={formik.values.title}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.touched.title && Boolean(formik.errors.title)}\r\n            helperText={(formik.touched.title && formik.errors.title) || \" \"}\r\n            size=\"small\"\r\n          />\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            type=\"submit\"\r\n            fullWidth\r\n            className={classes.button}\r\n            startIcon={<CreateIcon />}\r\n          >\r\n            Update\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditCategoryScreen;\r\n","import { useMutation, useQueryClient } from \"react-query\";\r\nimport AdminDeleteConfirmation from \"../../../components/AdminDeleteConfirmation\";\r\nimport { deleteMultipleCategoriesById } from \"../../../data/categoryQueryFunctions\";\r\n\r\nconst DeleteCategoryScreen = ({\r\n  showSuccessAlertHandler,\r\n  categoryId,\r\n  handleModalClose,\r\n}) => {\r\n  const queryClient = useQueryClient();\r\n  const mutation = useMutation(deleteMultipleCategoriesById, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"categories\");\r\n      showSuccessAlertHandler();\r\n      handleModalClose();\r\n    },\r\n  });\r\n  const handleUserDelete = () => {\r\n    mutation.mutate(categoryId);\r\n  };\r\n  return (\r\n    <AdminDeleteConfirmation\r\n      deleteAction={handleUserDelete}\r\n      cancelAction={handleModalClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DeleteCategoryScreen;\r\n","import CreateIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  Box,\r\n  ButtonGroup,\r\n  Grid,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ScreenTitle from \"../../../components/ScreenTitle\";\r\nimport { useQuery } from \"react-query\";\r\nimport { CATEGORY_DATA } from \"../../../definitions/reactQueryConstants/queryConstants\";\r\nimport { getAllCategories } from \"../../../data/categoryQueryFunctions\";\r\nimport { DataGrid, GridToolbar } from \"@material-ui/data-grid\";\r\nimport columns from \"../../../definitions/gridColDef/categoryGrids\";\r\nimport AdminModal from \"../../../components/AdminModal\";\r\nimport CategoryIcon from \"@material-ui/icons/Category\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport CreateCategoryScreen from \"./CreateCategoryScreen\";\r\nimport AlertNotification from \"../../../components/AlertNotification\";\r\nimport EditCategoryScreen from \"./EditCategoryScreen\";\r\nimport DeleteCategoryScreen from \"./DeleteCategoryScreen\";\r\nimport { adminCategoryHomeStyles } from \"../../../styles/adminCategoryStyles\";\r\n\r\nconst AdminCategories = () => {\r\n  let rows = [];\r\n  const { user } = useSelector((state) => state.userData);\r\n  const classes = adminCategoryHomeStyles();\r\n  const history = useHistory();\r\n  const { data, isLoading, isError, error, isFetching } = useQuery(\r\n    CATEGORY_DATA,\r\n    getAllCategories,\r\n    { refetchOnWindowFocus: false, refetchInterval: 10 * 60 * 1000 }\r\n  );\r\n\r\n  // states\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [editDisabled, setEditDisabled] = useState(true);\r\n  const [deleteDisabled, setDeleteDisabled] = useState(true);\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [showCreateSuccessAlert, setShowCreateSuccessAlert] = useState(false);\r\n  const [showEditSuccessAlert, setShowEditSuccessAlert] = useState(false);\r\n  const [showDeleteSuccessAlert, setShowDeleteSuccessAlert] = useState(false);\r\n  // effects\r\n  useEffect(() => {\r\n    if (!user.isAdmin) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, user]);\r\n  useEffect(() => {\r\n    if (selectedRows.length > 0) {\r\n      setEditDisabled(false);\r\n      setDeleteDisabled(false);\r\n    }\r\n    if (selectedRows.length > 1) {\r\n      setEditDisabled(true);\r\n      setDeleteDisabled(false);\r\n    }\r\n    if (selectedRows.length === 0) {\r\n      setEditDisabled(true);\r\n      setDeleteDisabled(true);\r\n    }\r\n  }, [selectedRows]);\r\n  useEffect(() => {\r\n    if (isLoading || isFetching) {\r\n      setSelectedRows([]);\r\n    }\r\n  }, [isLoading, isFetching]);\r\n\r\n  // modal handlers\r\n  const handleModalOpen = (modalType) => {\r\n    switch (modalType) {\r\n      case \"CREATE\": {\r\n        setShowCreateModal(true);\r\n        break;\r\n      }\r\n      case \"DELETE\":\r\n        setShowDeleteModal(true);\r\n        break;\r\n      case \"EDIT\":\r\n        setShowEditModal(true);\r\n        break;\r\n      default: {\r\n        setShowCreateModal(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleModalClose = (modalType) => {\r\n    switch (modalType) {\r\n      case \"CREATE\": {\r\n        setShowCreateModal(false);\r\n        break;\r\n      }\r\n      case \"DELETE\":\r\n        setShowDeleteModal(false);\r\n        break;\r\n      case \"EDIT\":\r\n        setShowEditModal(false);\r\n        break;\r\n      default: {\r\n        setShowCreateModal(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!isFetching && !isError && !isLoading && data.length > 0) {\r\n    rows = data.map((cat) => ({\r\n      id: cat._id,\r\n      Title: cat.title,\r\n    }));\r\n  }\r\n  return (\r\n    <>\r\n      <ScreenTitle text=\"Categories\" className={classes.root} />\r\n      <AlertNotification\r\n        showState={showCreateSuccessAlert}\r\n        alertText=\"Category has been created\"\r\n        closeHandler={() => setShowCreateSuccessAlert(false)}\r\n        alertSeverity=\"success\"\r\n      />\r\n      <AlertNotification\r\n        showState={showEditSuccessAlert}\r\n        alertText=\"Category has been updated\"\r\n        closeHandler={() => setShowEditSuccessAlert(false)}\r\n        alertSeverity=\"success\"\r\n      />\r\n      <AlertNotification\r\n        showState={showDeleteSuccessAlert}\r\n        alertText=\"The selected category(s) has been deleted\"\r\n        closeHandler={() => setShowDeleteSuccessAlert(false)}\r\n        alertSeverity=\"error\"\r\n      />\r\n      <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Typography variant=\"body1\" component=\"h1\">\r\n          All Categories\r\n        </Typography>\r\n        <ButtonGroup\r\n          className={classes.buttonGroup}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          aria-label=\"admin user action button group\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"create\"\r\n            onClick={() => handleModalOpen(\"CREATE\")}\r\n          >\r\n            <CreateIcon fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton\r\n            aria-label=\"edit\"\r\n            disabled={editDisabled}\r\n            onClick={() => handleModalOpen(\"EDIT\")}\r\n          >\r\n            <EditIcon fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton\r\n            aria-label=\"delete\"\r\n            disabled={deleteDisabled}\r\n            onClick={() => handleModalOpen(\"DELETE\")}\r\n          >\r\n            <DeleteIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </ButtonGroup>\r\n      </Grid>\r\n      <Box className={classes.dataGridContainer}>\r\n        <DataGrid\r\n          loading={isLoading || isFetching}\r\n          checkboxSelection\r\n          columns={columns}\r\n          rows={rows}\r\n          pageSize={12}\r\n          onSelectionModelChange={(e) => setSelectedRows(e.selectionModel)}\r\n          components={{\r\n            Toolbar: GridToolbar,\r\n          }}\r\n          error={error}\r\n        />\r\n      </Box>\r\n      {/* modals */}\r\n      <AdminModal\r\n        modalOpenState={showCreateModal}\r\n        modalCloseHandler={() => handleModalClose(\"CREATE\")}\r\n        modalTitle=\"Create New Category\"\r\n        modalIcon={<CategoryIcon fontSize=\"large\" color=\"secondary\" />}\r\n      >\r\n        <CreateCategoryScreen\r\n          showSuccessAlertHandler={() => setShowCreateSuccessAlert(true)}\r\n          handleModalClose={() => handleModalClose(\"CREATE\")}\r\n        />\r\n      </AdminModal>\r\n      <AdminModal\r\n        modalOpenState={showEditModal}\r\n        modalCloseHandler={() => handleModalClose(\"EDIT\")}\r\n        modalTitle=\"Edit Category\"\r\n        modalIcon={<CategoryIcon fontSize=\"large\" color=\"secondary\" />}\r\n      >\r\n        <EditCategoryScreen\r\n          showSuccessAlertHandler={() => setShowEditSuccessAlert(true)}\r\n          categoryId={selectedRows[0]}\r\n          handleModalClose={() => handleModalClose(\"EDIT\")}\r\n        />\r\n      </AdminModal>\r\n      <AdminModal\r\n        modalOpenState={showDeleteModal}\r\n        modalCloseHandler={() => handleModalClose(\"DELETE\")}\r\n        modalTitle=\"Delete Category\"\r\n        modalIcon={<ErrorIcon fontSize=\"large\" color=\"secondary\" />}\r\n      >\r\n        <DeleteCategoryScreen\r\n          categoryId={selectedRows}\r\n          showSuccessAlertHandler={() => setShowDeleteSuccessAlert(true)}\r\n          handleModalClose={() => handleModalClose(\"DELETE\")}\r\n        />\r\n      </AdminModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminCategories;\r\n","const columns = [\r\n  { field: \"id\", hide: true },\r\n  { field: \"Title\", flex: 1 },\r\n  { field: \"Author\", flex: 1 },\r\n  { field: \"Category\", flex: 1 },\r\n  { field: \"Tags\", flex: 1 },\r\n];\r\nexport default columns;\r\n","import { useMutation, useQueryClient } from \"react-query\";\r\nimport AdminDeleteConfirmation from \"../../../components/AdminDeleteConfirmation\";\r\nimport { deleteMultiplePostsById } from \"../../../data/postQueryFunctions\";\r\n\r\nconst DeletePostScreen = ({\r\n  showSuccessAlertHandler,\r\n  postId,\r\n  handleModalClose,\r\n}) => {\r\n  const queryClient = useQueryClient();\r\n  const mutation = useMutation(deleteMultiplePostsById, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"posts\");\r\n      showSuccessAlertHandler();\r\n      handleModalClose();\r\n    },\r\n  });\r\n  const handleUserDelete = () => {\r\n    mutation.mutate(postId);\r\n  };\r\n  return (\r\n    <AdminDeleteConfirmation\r\n      deleteAction={handleUserDelete}\r\n      cancelAction={handleModalClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DeletePostScreen;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst adminPostHomeStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  dataGridContainer: {\r\n    height: \"70vh\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst adminPostCreateStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    minWidth: 240,\r\n    marginBottom: theme.spacing(2.5),\r\n  },\r\n  formContent: {\r\n    padding: `${theme.spacing(4)}px 0px`,\r\n    paddingRight: theme.spacing(4),\r\n  },\r\n  editor: {\r\n    height: \"50vh\",\r\n    border: \"1px solid #ddd\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    paddingTop: theme.spacing(2),\r\n    paddingLeft: theme.spacing(8),\r\n    paddingRight: theme.spacing(8),\r\n    \"& .ql-container\": {\r\n      fontFamily: theme.typography.fontFamily,\r\n      fontSize: theme.typography.fontSize,\r\n      zIndex: theme.zIndex.tooltip,\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  inputGroup: {\r\n    display: \"block\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  inputLabel: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  errorLabel: {\r\n    color: theme.palette.error.main,\r\n    marginLeft: theme.spacing(2),\r\n    fontSize: \"0.75rem\",\r\n    lineHeight: 1.66,\r\n    letterSpacing: \"0.03333em\",\r\n    display: \"block\",\r\n  },\r\n  submitBtn: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  returnLink: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst adminPostEditStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    minWidth: 240,\r\n    marginBottom: theme.spacing(2.5),\r\n  },\r\n  formContent: {\r\n    padding: `${theme.spacing(4)}px 0px`,\r\n    paddingRight: theme.spacing(4),\r\n  },\r\n  editor: {\r\n    height: \"50vh\",\r\n    border: \"1px solid #ddd\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    paddingTop: theme.spacing(2),\r\n    paddingLeft: theme.spacing(8),\r\n    paddingRight: theme.spacing(8),\r\n    \"& .ql-container\": {\r\n      fontFamily: theme.typography.fontFamily,\r\n      fontSize: theme.typography.fontSize,\r\n      zIndex: theme.zIndex.tooltip,\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  inputGroup: {\r\n    display: \"block\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  inputLabel: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  errorLabel: {\r\n    color: theme.palette.error.main,\r\n    marginLeft: theme.spacing(2),\r\n    fontSize: \"0.75rem\",\r\n    lineHeight: 1.66,\r\n    letterSpacing: \"0.03333em\",\r\n    display: \"block\",\r\n  },\r\n  submitBtn: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  returnLink: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport { adminPostHomeStyles, adminPostCreateStyles, adminPostEditStyles };\r\n","import {\r\n  Grid,\r\n  Typography,\r\n  IconButton,\r\n  ButtonGroup,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport ScreenTitle from \"../../../components/ScreenTitle\";\r\nimport CreateIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useQuery } from \"react-query\";\r\nimport columns from \"../../../definitions/gridColDef/postGrids\";\r\nimport { POST_DATA } from \"../../../definitions/reactQueryConstants/queryConstants\";\r\nimport { getAllPosts } from \"../../../data/postQueryFunctions\";\r\nimport { DataGrid, GridToolbar } from \"@material-ui/data-grid\";\r\nimport DeletePostScreen from \"./DeletePostScreen\";\r\nimport AdminModal from \"../../../components/AdminModal\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport AlertNotification from \"../../../components/AlertNotification\";\r\nimport { adminPostHomeStyles } from \"../../../styles/adminPostStyles\";\r\n\r\nconst AdminPosts = () => {\r\n  let rows = [];\r\n  const location = useLocation();\r\n  const classes = adminPostHomeStyles();\r\n  const history = useHistory();\r\n  const { user } = useSelector((state) => state.userData);\r\n  const { data, isLoading, isFetching, isError, error } = useQuery(\r\n    POST_DATA,\r\n    getAllPosts,\r\n    { refetchOnWindowFocus: false, refetchInterval: 10 * 60 * 1000 }\r\n  );\r\n  // states\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [editDisabled, setEditDisabled] = useState(true);\r\n  const [deleteDisabled, setDeleteDisabled] = useState(true);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [showCreateSuccessAlert, setShowCreateSuccessAlert] = useState(false);\r\n  const [showEditSuccessAlert, setShowEditSuccessAlert] = useState(false);\r\n  const [showDeleteSuccessAlert, setShowDeleteSuccessAlert] = useState(false);\r\n\r\n  // effects\r\n  useEffect(() => {\r\n    if (location.state) {\r\n      if (location.state.showCreateSuccessAlert) {\r\n        setShowCreateSuccessAlert(true);\r\n      }\r\n      if (location.state.showEditSuccessAlert) {\r\n        setShowEditSuccessAlert(true);\r\n      }\r\n    }\r\n  }, [location]);\r\n  useEffect(() => {\r\n    if (!user.isAdmin) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, user]);\r\n  useEffect(() => {\r\n    if (selectedRows.length > 0) {\r\n      setEditDisabled(false);\r\n      setDeleteDisabled(false);\r\n    }\r\n    if (selectedRows.length > 1) {\r\n      setEditDisabled(true);\r\n      setDeleteDisabled(false);\r\n    }\r\n    if (selectedRows.length === 0) {\r\n      setEditDisabled(true);\r\n      setDeleteDisabled(true);\r\n    }\r\n  }, [selectedRows]);\r\n  useEffect(() => {\r\n    if (isLoading || isFetching) {\r\n      setSelectedRows([]);\r\n    }\r\n  }, [isLoading, isFetching]);\r\n  // modal handlers\r\n  const handleModalOpen = (modalType) => {\r\n    switch (modalType) {\r\n      case \"DELETE\":\r\n        setShowDeleteModal(true);\r\n        break;\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleModalClose = (modalType) => {\r\n    switch (modalType) {\r\n      case \"DELETE\":\r\n        setShowDeleteModal(false);\r\n        break;\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!isFetching && !isError && !isLoading && data.length > 0) {\r\n    rows = data.map((post) => ({\r\n      id: post._id,\r\n      Title: post.title,\r\n      Author: post.author.name,\r\n      Category: post.category.title,\r\n      Tags: post.tags.join(\", \"),\r\n    }));\r\n  }\r\n  return (\r\n    <>\r\n      <ScreenTitle text=\"Posts\" className={classes.root} />\r\n      <AlertNotification\r\n        showState={showDeleteSuccessAlert}\r\n        alertText=\"The selected post(s) has been deleted\"\r\n        closeHandler={() => setShowDeleteSuccessAlert(false)}\r\n        alertSeverity=\"error\"\r\n      />\r\n      <AlertNotification\r\n        showState={showCreateSuccessAlert}\r\n        alertText=\"Post has been created\"\r\n        closeHandler={() => setShowCreateSuccessAlert(false)}\r\n        alertSeverity=\"success\"\r\n      />\r\n      <AlertNotification\r\n        showState={showEditSuccessAlert}\r\n        alertText=\"The selected post has been updated\"\r\n        closeHandler={() => setShowEditSuccessAlert(false)}\r\n        alertSeverity=\"success\"\r\n      />\r\n      <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Typography variant=\"body1\" component=\"h1\">\r\n          All Categories\r\n        </Typography>\r\n        <ButtonGroup\r\n          className={classes.buttonGroup}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          aria-label=\"admin user action button group\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"create\"\r\n            component={Link}\r\n            to=\"/admin/posts/create\"\r\n          >\r\n            <CreateIcon fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton\r\n            disabled={editDisabled}\r\n            aria-label=\"edit\"\r\n            component={Link}\r\n            to={`/admin/posts/edit/${selectedRows[0]}`}\r\n          >\r\n            <EditIcon fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton\r\n            aria-label=\"delete\"\r\n            disabled={deleteDisabled}\r\n            onClick={() => handleModalOpen(\"DELETE\")}\r\n          >\r\n            <DeleteIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </ButtonGroup>\r\n      </Grid>\r\n      <Box className={classes.dataGridContainer}>\r\n        <DataGrid\r\n          loading={isLoading || isFetching}\r\n          checkboxSelection\r\n          columns={columns}\r\n          rows={rows}\r\n          pageSize={12}\r\n          onSelectionModelChange={(e) => setSelectedRows(e.selectionModel)}\r\n          components={{\r\n            Toolbar: GridToolbar,\r\n          }}\r\n          error={error}\r\n        />\r\n      </Box>\r\n      {/* modals */}\r\n      <AdminModal\r\n        modalOpenState={showDeleteModal}\r\n        modalCloseHandler={() => handleModalClose(\"DELETE\")}\r\n        modalTitle=\"Delete Post(s)\"\r\n        modalIcon={<ErrorIcon fontSize=\"large\" color=\"secondary\" />}\r\n      >\r\n        <DeletePostScreen\r\n          postId={selectedRows}\r\n          showSuccessAlertHandler={() => setShowDeleteSuccessAlert(true)}\r\n          handleModalClose={() => handleModalClose(\"DELETE\")}\r\n        />\r\n      </AdminModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPosts;\r\n","import hljs from \"highlight.js\";\r\nimport \"highlight.js/styles/night-owl.css\";\r\n\r\nhljs.configure({\r\n  languages: [\"javascript\", \"ruby\", \"python\", \"rust\"],\r\n});\r\n\r\nexport const modules = {\r\n  syntax: {\r\n    highlight: (text) => hljs.highlightAuto(text).value,\r\n  },\r\n  toolbar: [\r\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n    [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n    [{ color: [] }, { background: [] }],\r\n    [{ script: \"sub\" }, { script: \"super\" }],\r\n    [\"blockquote\", \"code-block\"],\r\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n    [{ indent: \"-1\" }, { indent: \"+1\" }, { align: [] }],\r\n    [\"link\", \"image\"],\r\n    [\"clean\"],\r\n  ],\r\n};\r\n","import {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { createPost } from \"../../../data/postQueryFunctions\";\r\nimport { useFormik } from \"formik\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport * as yup from \"yup\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport ReactQuill from \"react-quill\";\r\nimport ScreenTitle from \"../../../components/ScreenTitle\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport { getAllCategories } from \"../../../data/categoryQueryFunctions\";\r\nimport {\r\n  CATEGORY_DATA,\r\n  POST_DATA,\r\n} from \"../../../definitions/reactQueryConstants/queryConstants\";\r\nimport { adminPostCreateStyles } from \"../../../styles/adminPostStyles\";\r\nimport { modules } from \"../../../definitions/editorModules\";\r\n\r\nconst validationSchema = yup.object({\r\n  title: yup.string(\"Enter post title\").required(\"This field is required\"),\r\n  summary: yup\r\n    .string(\"Enter post summary\")\r\n    .required(\"This field is required\")\r\n    .min(150)\r\n    .max(300),\r\n  category: yup\r\n    .string(\"Select post category\")\r\n    .required(\"This field is required\"),\r\n  image: yup.mixed().required(\"You need an image for your post\"),\r\n  description: yup\r\n    .string(\"Enter post description\")\r\n    .required(\"This field is required\"),\r\n});\r\n\r\nconst CreatePostScreen = () => {\r\n  const classes = adminPostCreateStyles();\r\n  const history = useHistory();\r\n  const queryClient = useQueryClient();\r\n  const { user } = useSelector((state) => state.userData);\r\n  useEffect(() => {\r\n    if (!user.isAdmin) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, user]);\r\n  const mutation = useMutation(createPost, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(POST_DATA);\r\n      history.push({\r\n        pathname: \"/admin/posts/\",\r\n        state: {\r\n          showCreateSuccessAlert: true,\r\n          showEditSuccessAlert: false,\r\n        },\r\n      });\r\n    },\r\n  });\r\n  const { data, isLoading, isError } = useQuery(\r\n    CATEGORY_DATA,\r\n    getAllCategories\r\n  );\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      description: \"\",\r\n      summary: \"\",\r\n      category: \"\",\r\n      tags: [],\r\n      image: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      values.tags =\r\n        values.tags.length > 0\r\n          ? values.tags.split(\",\").map((tag) => tag.trim())\r\n          : values.tags;\r\n      mutation.mutate({\r\n        title: values.title,\r\n        description: values.description,\r\n        summary: values.summary,\r\n        category: values.category,\r\n        tags: values.tags,\r\n        image: values.image,\r\n      });\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Grid container justifyContent=\"flex-start\" alignItems=\"center\">\r\n        <Button\r\n          variant=\"text\"\r\n          className={classes.returnLink}\r\n          component={RouterLink}\r\n          to=\"/admin/posts\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          startIcon={<ArrowBackIcon />}\r\n        >\r\n          Return to Posts\r\n        </Button>\r\n      </Grid>\r\n      <ScreenTitle text=\"Create a new post\" className={classes.root} />\r\n      <Box className={classes.formContent}>\r\n        {isLoading && !isError ? (\r\n          <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n            <CircularProgress />\r\n          </Grid>\r\n        ) : (\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              value={formik.values.title}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.title && Boolean(formik.errors.title)}\r\n              helperText={(formik.touched.title && formik.errors.title) || \" \"}\r\n              size=\"small\"\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              minRows={5}\r\n              variant=\"outlined\"\r\n              id=\"summary\"\r\n              name=\"summary\"\r\n              label=\"Summary\"\r\n              value={formik.values.summary}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.summary && Boolean(formik.errors.summary)}\r\n              helperText={\r\n                (formik.touched.summary && formik.errors.summary) || \" \"\r\n              }\r\n            />\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel id=\"category-label\">Category</InputLabel>\r\n              <Select\r\n                labelId=\"category-label\"\r\n                id=\"category\"\r\n                name=\"category\"\r\n                label=\"Category\"\r\n                value={formik.values.category}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                error={\r\n                  formik.touched.category && Boolean(formik.errors.category)\r\n                }\r\n              >\r\n                {!isLoading &&\r\n                  !isError &&\r\n                  data.map((cat) => (\r\n                    <MenuItem value={cat._id}>{cat.title}</MenuItem>\r\n                  ))}\r\n              </Select>\r\n              <span className={classes.errorLabel}>\r\n                {(formik.touched.category && formik.errors.category) || \" \"}\r\n              </span>\r\n            </FormControl>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              variant=\"outlined\"\r\n              id=\"tags\"\r\n              name=\"tags\"\r\n              label=\"Tags\"\r\n              placeholder=\"Enter tags separated by commas\"\r\n              value={formik.values.tags}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.tags && Boolean(formik.errors.tags)}\r\n              helperText={(formik.touched.tags && formik.errors.tags) || \" \"}\r\n            />\r\n            <Box className={classes.inputGroup}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"image\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(event) => {\r\n                  formik.setFieldValue(\"image\", event.target.files[0]);\r\n                }}\r\n                onBlur={formik.handleBlur}\r\n                name=\"image\"\r\n              />\r\n              <label htmlFor=\"image\">\r\n                <Button\r\n                  startIcon={<PhotoCameraIcon />}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  component=\"span\"\r\n                >\r\n                  Upload Image\r\n                </Button>\r\n              </label>\r\n              <label className={classes.inputLabel}>\r\n                {formik.values.image.name ? formik.values.image.name : \"\"}\r\n              </label>\r\n              <span className={classes.errorLabel}>\r\n                {(formik.touched.image && formik.errors.image) || \" \"}\r\n              </span>\r\n            </Box>\r\n\r\n            <ReactQuill\r\n              theme=\"bubble\"\r\n              onChange={(editorData) => {\r\n                formik.setFieldValue(\"description\", editorData);\r\n              }}\r\n              value={formik.values.description}\r\n              id=\"description\"\r\n              placeholder=\"Description\"\r\n              className={classes.editor}\r\n              name=\"description\"\r\n              modules={modules}\r\n            />\r\n            <span className={classes.errorLabel}>\r\n              {(formik.touched.description && formik.errors.description) || \" \"}\r\n            </span>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.submitBtn}\r\n              startIcon={<AddBoxIcon />}\r\n            >\r\n              Create Post\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePostScreen;\r\n","import {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { getPostById, updatePostById } from \"../../../data/postQueryFunctions\";\r\nimport { useFormik } from \"formik\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport ReactQuill from \"react-quill\";\r\nimport ScreenTitle from \"../../../components/ScreenTitle\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\r\nimport { getAllCategories } from \"../../../data/categoryQueryFunctions\";\r\nimport {\r\n  CATEGORY_DATA,\r\n  POST_DATA,\r\n  SINGLE_POST_DATA,\r\n} from \"../../../definitions/reactQueryConstants/queryConstants\";\r\nimport { adminPostEditStyles } from \"../../../styles/adminPostStyles\";\r\nimport { modules } from \"../../../definitions/editorModules\";\r\n\r\nconst validationSchema = yup.object({\r\n  title: yup.string(\"Enter post title\").required(\"This field is required\"),\r\n  summary: yup\r\n    .string(\"Enter post summary\")\r\n    .required(\"This field is required\")\r\n    .min(150)\r\n    .max(300),\r\n  category: yup\r\n    .string(\"Select post category\")\r\n    .required(\"This field is required\"),\r\n  image: yup.mixed().required(\"You need an image for your post\"),\r\n  description: yup\r\n    .string(\"Enter post description\")\r\n    .required(\"This field is required\"),\r\n});\r\n\r\nconst EditPostScreen = () => {\r\n  const classes = adminPostEditStyles();\r\n  const history = useHistory();\r\n  const queryClient = useQueryClient();\r\n  const { user } = useSelector((state) => state.userData);\r\n  const { editPostId } = useParams();\r\n  useEffect(() => {\r\n    if (!user.isAdmin) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, user]);\r\n  const {\r\n    isLoading: isUserDataLoading,\r\n    isError: isUserDataError,\r\n    data: userData,\r\n  } = useQuery([SINGLE_POST_DATA, editPostId], ({ queryKey }) =>\r\n    getPostById(queryKey[1])\r\n  );\r\n  const mutation = useMutation(updatePostById, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(POST_DATA);\r\n      queryClient.invalidateQueries(SINGLE_POST_DATA);\r\n      history.push({\r\n        pathname: \"/admin/posts/\",\r\n        state: {\r\n          showCreateSuccessAlert: false,\r\n          showEditSuccessAlert: true,\r\n        },\r\n      });\r\n    },\r\n  });\r\n  const { data, isLoading, isError } = useQuery(\r\n    CATEGORY_DATA,\r\n    getAllCategories\r\n  );\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      description: \"\",\r\n      summary: \"\",\r\n      category: \"\",\r\n      tags: [],\r\n      image: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      values.tags =\r\n        values.tags.length > 0\r\n          ? values.tags.split(\",\").map((tag) => tag.trim())\r\n          : values.tags;\r\n\r\n      mutation.mutate({\r\n        postId: editPostId,\r\n        values: {\r\n          title: values.title,\r\n          description: values.description,\r\n          summary: values.summary,\r\n          category: values.category,\r\n          tags: values.tags,\r\n          image: values.image,\r\n        },\r\n      });\r\n    },\r\n  });\r\n  if (!isUserDataLoading && !isUserDataError) {\r\n    formik.initialValues.title = userData.title;\r\n    formik.initialValues.description = userData.description;\r\n    formik.initialValues.summary = userData.summary;\r\n    formik.initialValues.category = userData.category._id;\r\n    formik.initialValues.tags = userData.tags.join(\",\");\r\n    formik.initialValues.image = userData.imageFileName;\r\n  }\r\n  return (\r\n    <>\r\n      <Grid container justifyContent=\"flex-start\" alignItems=\"center\">\r\n        <Button\r\n          variant=\"text\"\r\n          className={classes.returnLink}\r\n          component={RouterLink}\r\n          to=\"/admin/posts\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          startIcon={<ArrowBackIcon />}\r\n        >\r\n          Return to Posts\r\n        </Button>\r\n      </Grid>\r\n      <ScreenTitle text=\"Edit Post\" className={classes.root} />\r\n      <Box className={classes.formContent}>\r\n        {(isLoading && !isError) || (isUserDataLoading && !isUserDataError) ? (\r\n          <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n            <CircularProgress />\r\n          </Grid>\r\n        ) : (\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              value={formik.values.title}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.title && Boolean(formik.errors.title)}\r\n              helperText={(formik.touched.title && formik.errors.title) || \" \"}\r\n              size=\"small\"\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              minRows={5}\r\n              variant=\"outlined\"\r\n              id=\"summary\"\r\n              name=\"summary\"\r\n              label=\"Summary\"\r\n              value={formik.values.summary}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.summary && Boolean(formik.errors.summary)}\r\n              helperText={\r\n                (formik.touched.summary && formik.errors.summary) || \" \"\r\n              }\r\n            />\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel id=\"category-label\">Category</InputLabel>\r\n              <Select\r\n                labelId=\"category-label\"\r\n                id=\"category\"\r\n                name=\"category\"\r\n                label=\"Category\"\r\n                value={formik.values.category}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                error={\r\n                  formik.touched.category && Boolean(formik.errors.category)\r\n                }\r\n              >\r\n                {!isLoading &&\r\n                  !isError &&\r\n                  data.map((cat) => (\r\n                    <MenuItem value={cat._id}>{cat.title}</MenuItem>\r\n                  ))}\r\n              </Select>\r\n              <span className={classes.errorLabel}>\r\n                {(formik.touched.category && formik.errors.category) || \" \"}\r\n              </span>\r\n            </FormControl>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              variant=\"outlined\"\r\n              id=\"tags\"\r\n              name=\"tags\"\r\n              label=\"Tags\"\r\n              placeholder=\"Enter tags separated by commas\"\r\n              value={formik.values.tags}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.tags && Boolean(formik.errors.tags)}\r\n              helperText={(formik.touched.tags && formik.errors.tags) || \" \"}\r\n            />\r\n            <Box className={classes.inputGroup}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"image\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(event) => {\r\n                  formik.setFieldValue(\"image\", event.target.files[0]);\r\n                }}\r\n                onBlur={formik.handleBlur}\r\n                name=\"image\"\r\n              />\r\n              <label htmlFor=\"image\">\r\n                <Button\r\n                  startIcon={<PhotoCameraIcon />}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  component=\"span\"\r\n                >\r\n                  Upload Image\r\n                </Button>\r\n              </label>\r\n              <label className={classes.inputLabel}>\r\n                {formik.values.image.name ? formik.values.image.name : \"\"}\r\n              </label>\r\n              <span className={classes.errorLabel}>\r\n                {(formik.touched.image && formik.errors.image) || \" \"}\r\n              </span>\r\n            </Box>\r\n\r\n            <ReactQuill\r\n              theme=\"bubble\"\r\n              onChange={(editorData) => {\r\n                formik.setFieldValue(\"description\", editorData);\r\n              }}\r\n              value={formik.values.description}\r\n              id=\"description\"\r\n              placeholder=\"Description\"\r\n              className={classes.editor}\r\n              name=\"description\"\r\n              modules={modules}\r\n            />\r\n            <span className={classes.errorLabel}>\r\n              {(formik.touched.description && formik.errors.description) || \" \"}\r\n            </span>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.submitBtn}\r\n              startIcon={<CreateIcon />}\r\n            >\r\n              Update Post\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditPostScreen;\r\n","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginTop: theme.spacing(1.5),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n    marginRight: theme.spacing(1.5),\r\n    display: \"inline-block\",\r\n    width: \"8vw\",\r\n  },\r\n  value: {\r\n    display: \"inline-block\",\r\n  },\r\n}));\r\n\r\nconst AdminProfileDataRow = ({ title, value }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.container}>\r\n      <Typography variant=\"body1\" className={classes.title} align=\"right\">\r\n        {title}:\r\n      </Typography>\r\n\r\n      <Typography variant=\"body1\" className={classes.value} align=\"right\">\r\n        {value}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AdminProfileDataRow;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst adminProfileStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  header: {\r\n    marginBottom: theme.spacing(8),\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20),\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport { adminProfileStyles };\r\n","import { Box, Button, Grid, makeStyles, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from \"formik\";\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport * as yup from \"yup\";\r\nimport { updateUser } from \"../../../data/userQueryFunctions\";\r\nimport { sanitizeSocialURL } from \"../../../utils/dataFormat\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\r\nimport { SINGLE_USER_DATA } from \"../../../definitions/reactQueryConstants/queryConstants\";\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string(\"Enter you name\"),\r\n  email: yup\r\n    .string(\"Enter you email address\")\r\n    .email(\"Please enter a valid email address\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password length must be at least 8 characters\"),\r\n  confirmPassword: yup.string(\"Confirm your password\").when(\"password\", {\r\n    is: (val) => val && val.length >= 8,\r\n    then: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"password\")], \"Both passwords need to be the same\"),\r\n    otherwise: yup.string(\"Confirm your password\"),\r\n  }),\r\n  bio: yup.string(\"Enter your bio\"),\r\n  facebookId: yup.string(\"Enter your facebook id\"),\r\n  linkedinId: yup.string(\"Enter your linkedin id\"),\r\n  twitterId: yup.string(\"Enter your twitter id\"),\r\n  image: yup.mixed(),\r\n});\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formContent: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  inputGroup: {\r\n    display: \"block\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  inputLabel: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  errorLabel: {\r\n    color: theme.palette.error.main,\r\n    marginLeft: theme.spacing(2),\r\n    fontSize: \"0.75rem\",\r\n    lineHeight: 1.66,\r\n    letterSpacing: \"0.03333em\",\r\n    display: \"block\",\r\n  },\r\n}));\r\nconst EditProfileScreen = ({\r\n  showSuccessAlertHandler,\r\n  handleModalClose,\r\n  dispatcher,\r\n}) => {\r\n  const queryClient = useQueryClient();\r\n  const classes = useStyles();\r\n  // formik\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      bio: \"\",\r\n      facebookId: \"\",\r\n      linkedinId: \"\",\r\n      twitterId: \"\",\r\n      image: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      mutation.mutate({\r\n        name: values.name,\r\n        email: values.email,\r\n        password: values.password,\r\n        bio: values.bio,\r\n        facebookId: sanitizeSocialURL(values.facebookId),\r\n        linkedinId: sanitizeSocialURL(values.linkedinId),\r\n        twitterId: sanitizeSocialURL(values.twitterId),\r\n        image: values.image,\r\n        isAdmin: true,\r\n      });\r\n      handleModalClose();\r\n    },\r\n  });\r\n  const mutation = useMutation(updateUser, {\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries(SINGLE_USER_DATA);\r\n      showSuccessAlertHandler();\r\n      dispatcher(data);\r\n    },\r\n  });\r\n  return (\r\n    <Box>\r\n      <form onSubmit={formik.handleSubmit} className={classes.formContent}>\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          value={formik.values.name}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          error={formik.touched.name && Boolean(formik.errors.name)}\r\n          helperText={(formik.touched.name && formik.errors.name) || \" \"}\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          value={formik.values.email}\r\n          onBlur={formik.handleBlur}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={(formik.touched.email && formik.errors.email) || \" \"}\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.password}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={\r\n            (formik.touched.password && formik.errors.password) || \" \"\r\n          }\r\n          size=\"small\"\r\n          type=\"password\"\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          id=\"confirmPassword\"\r\n          name=\"confirmPassword\"\r\n          label=\"Confirm Password\"\r\n          value={formik.values.confirmPassword}\r\n          onBlur={formik.handleBlur}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.confirmPassword &&\r\n            Boolean(formik.errors.confirmPassword)\r\n          }\r\n          helperText={\r\n            (formik.touched.confirmPassword && formik.errors.confirmPassword) ||\r\n            \" \"\r\n          }\r\n          size=\"small\"\r\n          type=\"password\"\r\n        />\r\n        <Box className={classes.inputGroup}>\r\n          <input\r\n            accept=\"image/*\"\r\n            className={classes.input}\r\n            id=\"image\"\r\n            multiple\r\n            type=\"file\"\r\n            onChange={(event) => {\r\n              formik.setFieldValue(\"image\", event.target.files[0]);\r\n            }}\r\n            onBlur={formik.handleBlur}\r\n            name=\"image\"\r\n          />\r\n          <label htmlFor=\"image\">\r\n            <Button\r\n              startIcon={<PhotoCameraIcon />}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component=\"span\"\r\n            >\r\n              Upload Photo\r\n            </Button>\r\n          </label>\r\n          <label className={classes.inputLabel}>\r\n            {formik.values.image.name ? formik.values.image.name : \"\"}\r\n          </label>\r\n          <span className={classes.errorLabel}>\r\n            {(formik.touched.image && formik.errors.image) || \" \"}\r\n          </span>\r\n        </Box>\r\n        <TextField\r\n          fullWidth\r\n          multiline\r\n          minRows={4}\r\n          variant=\"outlined\"\r\n          id=\"bio\"\r\n          name=\"bio\"\r\n          label=\"Bio\"\r\n          value={formik.values.bio}\r\n          onBlur={formik.handleBlur}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.bio && Boolean(formik.errors.bio)}\r\n          helperText={(formik.touched.bio && formik.errors.bio) || \" \"}\r\n          size=\"small\"\r\n        />\r\n        <Grid container justifyContent=\"space-between\" spacing={1}>\r\n          <Grid item xs={4}>\r\n            <Grid container>\r\n              <Grid item xs={3}>\r\n                <FacebookIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  id=\"facebookId\"\r\n                  name=\"facebookId\"\r\n                  label=\"Facebook\"\r\n                  value={formik.values.facebookId}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  error={\r\n                    formik.touched.facebookId &&\r\n                    Boolean(formik.errors.facebookId)\r\n                  }\r\n                  helperText={\r\n                    (formik.touched.facebookId && formik.errors.facebookId) ||\r\n                    \" \"\r\n                  }\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Grid container>\r\n              <Grid item xs={3}>\r\n                <LinkedInIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  id=\"linkedinId\"\r\n                  name=\"linkedinId\"\r\n                  label=\"Linkedin\"\r\n                  value={formik.values.linkedinId}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  error={\r\n                    formik.touched.linkedinId &&\r\n                    Boolean(formik.errors.linkedinId)\r\n                  }\r\n                  helperText={\r\n                    (formik.touched.linkedinId && formik.errors.linkedinId) ||\r\n                    \" \"\r\n                  }\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Grid container>\r\n              <Grid item xs={3}>\r\n                <TwitterIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={9}>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  id=\"twitterId\"\r\n                  name=\"twitterId\"\r\n                  label=\"Twitter\"\r\n                  value={formik.values.twitterId}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  error={\r\n                    formik.touched.twitterId && Boolean(formik.errors.twitterId)\r\n                  }\r\n                  helperText={\r\n                    (formik.touched.twitterId && formik.errors.twitterId) || \" \"\r\n                  }\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          type=\"submit\"\r\n          fullWidth\r\n          className={classes.button}\r\n          startIcon={<CreateIcon />}\r\n        >\r\n          Update\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditProfileScreen;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AdminModal from \"../../../components/AdminModal\";\r\nimport AdminProfileDataRow from \"../../../components/AdminProfileDataRow\";\r\nimport ScreenTitle from \"../../../components/ScreenTitle\";\r\nimport { adminProfileStyles } from \"../../../styles/adminProfileStyles\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport EditProfileScreen from \"./EditProfileScreen\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { storeUserData } from \"../../../redux/slices/userDataSlice\";\r\nimport AlertNotification from \"../../../components/AlertNotification\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { useQuery } from \"react-query\";\r\nimport { SINGLE_USER_DATA } from \"../../../definitions/reactQueryConstants/queryConstants\";\r\nimport { getUserById } from \"../../../data/userQueryFunctions\";\r\nimport { getBase64ImageURL } from \"../../../utils/imageConvertion\";\r\nimport { getAuthorNameInitials } from \"../../../utils/dataFormat\";\r\n\r\nconst AdminProfile = () => {\r\n  const { user } = useSelector((state) => state.userData);\r\n  const { isLoading, isFetching, isError, data } = useQuery(\r\n    [SINGLE_USER_DATA, user._id],\r\n    ({ queryKey }) => getUserById(queryKey[1])\r\n  );\r\n  const history = useHistory();\r\n  const classes = adminProfileStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  // dispatcher\r\n  const updateUserState = (userData) => {\r\n    dispatch(\r\n      storeUserData({\r\n        _id: userData._id,\r\n        name: userData.name,\r\n        email: userData.email,\r\n        isAdmin: userData.isAdmin,\r\n        token: user.token,\r\n      })\r\n    );\r\n  };\r\n\r\n  // states\r\n  const [showProfileEditModal, setShowProfileEditModal] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  // effects\r\n  useEffect(() => {\r\n    if (!user.isAdmin || !user._id) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, user]);\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.header}>\r\n        <ScreenTitle text=\"Profile\" className={classes.root} />\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          Welcome admin{\" \"}\r\n          <Typography component=\"span\" variant=\"subtitle1\" color=\"primary\">\r\n            {user.name}\r\n          </Typography>\r\n        </Typography>\r\n        <AlertNotification\r\n          showState={showAlert}\r\n          alertText=\"Profile has been updated\"\r\n          closeHandler={() => setShowAlert(false)}\r\n          alertSeverity=\"success\"\r\n        />\r\n      </Box>\r\n      {isLoading || isFetching ? (\r\n        <Grid container justifyContent=\"center\">\r\n          <CircularProgress />\r\n        </Grid>\r\n      ) : isError ? (\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          Error\r\n        </Typography>\r\n      ) : (\r\n        <>\r\n          {data.imageURL ? (\r\n            <Avatar\r\n              alt=\"user profile image\"\r\n              className={classes.avatar}\r\n              src={data.imageURL}\r\n            />\r\n          ) : (\r\n            <Avatar alt=\"user profile image\" className={classes.avatar}>\r\n              {getAuthorNameInitials(data.name)}\r\n            </Avatar>\r\n          )}\r\n\r\n          <AdminProfileDataRow title=\"Name\" value={data.name} />\r\n          <AdminProfileDataRow title=\"Email\" value={data.email} />\r\n          <AdminProfileDataRow title=\"Bio\" value={data.bio} />\r\n          <AdminProfileDataRow title=\"Facebook URL\" value={data.facebookId} />\r\n          <AdminProfileDataRow title=\"Linkedin URL\" value={data.linkedinId} />\r\n          <AdminProfileDataRow title=\"Twitter URL\" value={data.twitterId} />\r\n        </>\r\n      )}\r\n\r\n      <AdminProfileDataRow title=\"Name\" value={user.name} />\r\n      <AdminProfileDataRow title=\"Email\" value={user.email} />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        startIcon={<CreateIcon />}\r\n        onClick={() => setShowProfileEditModal(true)}\r\n      >\r\n        Edit profile\r\n      </Button>\r\n      <AdminModal\r\n        modalOpenState={showProfileEditModal}\r\n        modalTitle=\"Edit profile\"\r\n        modalCloseHandler={() => setShowProfileEditModal(false)}\r\n        modalIcon={<AccountCircleIcon fontSize=\"large\" color=\"secondary\" />}\r\n      >\r\n        <EditProfileScreen\r\n          handleModalClose={() => setShowProfileEditModal(false)}\r\n          showSuccessAlertHandler={() => setShowAlert(true)}\r\n          dispatcher={(userData) => updateUserState(userData)}\r\n        />\r\n      </AdminModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminProfile;\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AlertNotification from \"../../../components/AlertNotification\";\r\nimport ScreenTitle from \"../../../components/ScreenTitle\";\r\nimport { getCuratedPostListByAuthor } from \"../../../data/postQueryFunctions\";\r\nimport { POST_DATA } from \"../../../definitions/reactQueryConstants/queryConstants\";\r\nimport { adminHomeStyles } from \"../../../styles/adminHomeStyles\";\r\nimport { formatData } from \"../../../utils/dataFormat\";\r\nimport {\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  BarChart,\r\n  Legend,\r\n  Bar,\r\n} from \"recharts\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\n\r\nconst UserDashboard = () => {\r\n  const classes = adminHomeStyles();\r\n  const history = useHistory();\r\n  const { user } = useSelector((state) => state.userData);\r\n  const theme = useTheme();\r\n\r\n  const [showErrorNotification, setShowErrorNotification] = useState(false);\r\n  const [curatedPostData, setCuratedPostData] = useState([]);\r\n\r\n  const {\r\n    isLoading: isPostDataLoading,\r\n    isError: isPostDataError,\r\n    isFetching: isPostDataFetching,\r\n    data: postData,\r\n  } = useQuery(POST_DATA, getCuratedPostListByAuthor);\r\n  useEffect(() => {\r\n    if (!isPostDataLoading && !isPostDataFetching) {\r\n      setCuratedPostData(formatData(postData, \"createdAt\"));\r\n    }\r\n  }, [isPostDataLoading, postData, isPostDataFetching]);\r\n  useEffect(() => {\r\n    if (user.isAdmin || !user._id) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, user]);\r\n  return (\r\n    <>\r\n      <ScreenTitle text=\"Dashboard\" className={classes.root} />\r\n      {isPostDataError ? (\r\n        <AlertNotification\r\n          showState={showErrorNotification}\r\n          alertText=\"Error while loading data. Please try again later\"\r\n          closeHandler={() => setShowErrorNotification(false)}\r\n          alertSeverity=\"error\"\r\n        />\r\n      ) : (\r\n        <>\r\n          <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Card className={classes.card}>\r\n              <CardContent>\r\n                <Typography\r\n                  gutterBottom\r\n                  align=\"center\"\r\n                  variant=\"h5\"\r\n                  component=\"h2\"\r\n                >\r\n                  Posts\r\n                </Typography>\r\n                {isPostDataLoading || isPostDataFetching ? (\r\n                  <Grid container justify=\"center\">\r\n                    <CircularProgress size={25} color=\"primary\" />\r\n                  </Grid>\r\n                ) : (\r\n                  <Typography\r\n                    color=\"primary\"\r\n                    align=\"center\"\r\n                    variant=\"h6\"\r\n                    component=\"p\"\r\n                  >\r\n                    {postData.length}\r\n                  </Typography>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={5} className={classes.chartContainer}>\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <Card>\r\n                  <CardContent>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      component=\"h2\"\r\n                      align=\"center\"\r\n                      gutterBottom\r\n                    >\r\n                      Posts created on the last 7 days\r\n                    </Typography>\r\n                    <BarChart\r\n                      width={500}\r\n                      height={200}\r\n                      data={curatedPostData}\r\n                      margin={{ top: 5, right: 30, bottom: 5, left: 20 }}\r\n                    >\r\n                      <XAxis dataKey=\"date\" />\r\n                      <YAxis />\r\n                      <Tooltip />\r\n                      <Legend />\r\n                      <Bar dataKey=\"count\" fill={theme.palette.primary.main} />\r\n                    </BarChart>\r\n                  </CardContent>\r\n                </Card>\r\n              </ResponsiveContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Drawer,\r\n  List,\r\n  Typography,\r\n  Divider,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { Note as PostIcon } from \"@material-ui/icons\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport { Link, NavLink, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { clearUserData } from \"../redux/slices/userDataSlice\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  list: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  bottomList: {\r\n    marginTop: \"auto\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n  drawerHeader: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    textDecoration: \"none\",\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    letterSpacing: theme.spacing(0.5),\r\n  },\r\n  activeLink: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst UserLayout = ({ children }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(clearUserData());\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"left\"\r\n      >\r\n        <Typography\r\n          className={classes.drawerHeader}\r\n          variant=\"h6\"\r\n          component={Link}\r\n          to=\"/\"\r\n          color=\"textPrimary\"\r\n          align=\"center\"\r\n        >\r\n          Blogen\r\n        </Typography>\r\n        <Divider />\r\n        <List className={classes.list}>\r\n          <ListItem\r\n            button\r\n            component={NavLink}\r\n            to=\"/user/dashboard\"\r\n            activeClassName={classes.activeLink}\r\n          >\r\n            <ListItemIcon>\r\n              <DashboardIcon\r\n                color={\r\n                  location.pathname.includes(\"/user/dashboard\")\r\n                    ? \"primary\"\r\n                    : \"inherit\"\r\n                }\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            component={NavLink}\r\n            to=\"/user/posts\"\r\n            activeClassName={classes.activeLink}\r\n          >\r\n            <ListItemIcon>\r\n              <PostIcon\r\n                color={\r\n                  location.pathname.includes(\"/user/posts\")\r\n                    ? \"primary\"\r\n                    : \"inherit\"\r\n                }\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Posts\" />\r\n          </ListItem>\r\n        </List>\r\n        <List className={classes.bottomList}>\r\n          <ListItem divider></ListItem>\r\n          <ListItem\r\n            button\r\n            component={NavLink}\r\n            to=\"/user/profile\"\r\n            activeClassName={classes.activeLink}\r\n          >\r\n            <ListItemIcon>\r\n              <AccountCircleIcon\r\n                color={\r\n                  location.pathname.includes(\"/user/profile\")\r\n                    ? \"primary\"\r\n                    : \"inherit\"\r\n                }\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Profile\" />\r\n          </ListItem>\r\n          <ListItem button onClick={handleLogout}>\r\n            <ListItemIcon>\r\n              <PowerSettingsNewIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Logout\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </div>\r\n  );\r\n};\r\nexport default UserLayout;\r\n","import { useMutation, useQueryClient } from \"react-query\";\r\nimport AdminDeleteConfirmation from \"../../../components/AdminDeleteConfirmation\";\r\nimport { deleteMultiplePostsById } from \"../../../data/postQueryFunctions\";\r\n\r\nconst DeleteUserPostScreen = ({\r\n  showSuccessAlertHandler,\r\n  postId,\r\n  handleModalClose,\r\n}) => {\r\n  const queryClient = useQueryClient();\r\n  const mutation = useMutation(deleteMultiplePostsById, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(\"posts\");\r\n      showSuccessAlertHandler();\r\n      handleModalClose();\r\n    },\r\n  });\r\n  const handleUserDelete = () => {\r\n    mutation.mutate(postId);\r\n  };\r\n  return (\r\n    <AdminDeleteConfirmation\r\n      deleteAction={handleUserDelete}\r\n      cancelAction={handleModalClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DeleteUserPostScreen;\r\n","import {\r\n  Grid,\r\n  Typography,\r\n  IconButton,\r\n  ButtonGroup,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport ScreenTitle from \"../../../components/ScreenTitle\";\r\nimport CreateIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useQuery } from \"react-query\";\r\nimport columns from \"../../../definitions/gridColDef/postGrids\";\r\nimport { POST_DATA } from \"../../../definitions/reactQueryConstants/queryConstants\";\r\nimport { getAllPostsByAuthorId } from \"../../../data/postQueryFunctions\";\r\nimport { DataGrid, GridToolbar } from \"@material-ui/data-grid\";\r\nimport AdminModal from \"../../../components/AdminModal\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport AlertNotification from \"../../../components/AlertNotification\";\r\nimport { adminPostHomeStyles } from \"../../../styles/adminPostStyles\";\r\nimport DeleteUserPostScreen from \"./DeleteUserPostScreen\";\r\n\r\nconst UserPosts = () => {\r\n  let rows = [];\r\n  const location = useLocation();\r\n  const classes = adminPostHomeStyles();\r\n  const history = useHistory();\r\n  const { user } = useSelector((state) => state.userData);\r\n  const { data, isLoading, isFetching, isError, error } = useQuery(\r\n    [POST_DATA, user._id],\r\n    ({ queryKey }) => getAllPostsByAuthorId(queryKey[1])\r\n  );\r\n  // states\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [editDisabled, setEditDisabled] = useState(true);\r\n  const [deleteDisabled, setDeleteDisabled] = useState(true);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [showCreateSuccessAlert, setShowCreateSuccessAlert] = useState(false);\r\n  const [showEditSuccessAlert, setShowEditSuccessAlert] = useState(false);\r\n  const [showDeleteSuccessAlert, setShowDeleteSuccessAlert] = useState(false);\r\n\r\n  // effects\r\n  useEffect(() => {\r\n    if (location.state) {\r\n      if (location.state.showCreateSuccessAlert) {\r\n        setShowCreateSuccessAlert(true);\r\n      }\r\n      if (location.state.showEditSuccessAlert) {\r\n        setShowEditSuccessAlert(true);\r\n      }\r\n    }\r\n  }, [location]);\r\n  useEffect(() => {\r\n    if (user.isAdmin || !user._id) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, user]);\r\n  useEffect(() => {\r\n    if (selectedRows.length > 0) {\r\n      setEditDisabled(false);\r\n      setDeleteDisabled(false);\r\n    }\r\n    if (selectedRows.length > 1) {\r\n      setEditDisabled(true);\r\n      setDeleteDisabled(false);\r\n    }\r\n    if (selectedRows.length === 0) {\r\n      setEditDisabled(true);\r\n      setDeleteDisabled(true);\r\n    }\r\n  }, [selectedRows]);\r\n  useEffect(() => {\r\n    if (isLoading || isFetching) {\r\n      setSelectedRows([]);\r\n    }\r\n  }, [isLoading, isFetching]);\r\n  // modal handlers\r\n  const handleModalOpen = (modalType) => {\r\n    switch (modalType) {\r\n      case \"DELETE\":\r\n        setShowDeleteModal(true);\r\n        break;\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleModalClose = (modalType) => {\r\n    switch (modalType) {\r\n      case \"DELETE\":\r\n        setShowDeleteModal(false);\r\n        break;\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!isFetching && !isError && !isLoading && data.length > 0) {\r\n    rows = data.map((post) => ({\r\n      id: post._id,\r\n      Title: post.title,\r\n      Author: post.author.name,\r\n      Category: post.category.title,\r\n      Tags: post.tags.join(\", \"),\r\n    }));\r\n  }\r\n  return (\r\n    <>\r\n      <ScreenTitle text=\"Posts\" className={classes.root} />\r\n      <AlertNotification\r\n        showState={showDeleteSuccessAlert}\r\n        alertText=\"The selected post(s) has been deleted\"\r\n        closeHandler={() => setShowDeleteSuccessAlert(false)}\r\n        alertSeverity=\"error\"\r\n      />\r\n      <AlertNotification\r\n        showState={showCreateSuccessAlert}\r\n        alertText=\"Post has been created\"\r\n        closeHandler={() => setShowCreateSuccessAlert(false)}\r\n        alertSeverity=\"success\"\r\n      />\r\n      <AlertNotification\r\n        showState={showEditSuccessAlert}\r\n        alertText=\"The selected post has been updated\"\r\n        closeHandler={() => setShowEditSuccessAlert(false)}\r\n        alertSeverity=\"success\"\r\n      />\r\n      <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Typography variant=\"body1\" component=\"h1\">\r\n          All Categories\r\n        </Typography>\r\n        <ButtonGroup\r\n          className={classes.buttonGroup}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          aria-label=\"general user action button group\"\r\n        >\r\n          <IconButton\r\n            aria-label=\"create\"\r\n            component={Link}\r\n            to=\"/user/posts/create\"\r\n          >\r\n            <CreateIcon fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton\r\n            disabled={editDisabled}\r\n            aria-label=\"edit\"\r\n            component={Link}\r\n            to={`/user/posts/edit/${selectedRows[0]}`}\r\n          >\r\n            <EditIcon fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton\r\n            aria-label=\"delete\"\r\n            disabled={deleteDisabled}\r\n            onClick={() => handleModalOpen(\"DELETE\")}\r\n          >\r\n            <DeleteIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </ButtonGroup>\r\n      </Grid>\r\n      <Box className={classes.dataGridContainer}>\r\n        <DataGrid\r\n          loading={isLoading || isFetching}\r\n          checkboxSelection\r\n          columns={columns}\r\n          rows={rows}\r\n          pageSize={12}\r\n          onSelectionModelChange={(e) => setSelectedRows(e.selectionModel)}\r\n          components={{\r\n            Toolbar: GridToolbar,\r\n          }}\r\n          error={error}\r\n        />\r\n      </Box>\r\n      {/* modals */}\r\n      <AdminModal\r\n        modalOpenState={showDeleteModal}\r\n        modalCloseHandler={() => handleModalClose(\"DELETE\")}\r\n        modalTitle=\"Delete Post(s)\"\r\n        modalIcon={<ErrorIcon fontSize=\"large\" color=\"secondary\" />}\r\n      >\r\n        <DeleteUserPostScreen\r\n          postId={selectedRows}\r\n          showSuccessAlertHandler={() => setShowDeleteSuccessAlert(true)}\r\n          handleModalClose={() => handleModalClose(\"DELETE\")}\r\n        />\r\n      </AdminModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPosts;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst userProfileStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  header: {\r\n    marginBottom: theme.spacing(8),\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(20),\r\n    height: theme.spacing(20),\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport { userProfileStyles };\r\n","import { Box, Button, Grid, makeStyles, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from \"formik\";\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport * as yup from \"yup\";\r\nimport { updateUser } from \"../../../data/userQueryFunctions\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\r\nimport { SINGLE_USER_DATA } from \"../../../definitions/reactQueryConstants/queryConstants\";\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup.string(\"Enter you name\"),\r\n  email: yup\r\n    .string(\"Enter you email address\")\r\n    .email(\"Please enter a valid email address\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password length must be at least 8 characters\"),\r\n  confirmPassword: yup.string(\"Confirm your password\").when(\"password\", {\r\n    is: (val) => val && val.length >= 8,\r\n    then: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"password\")], \"Both passwords need to be the same\"),\r\n    otherwise: yup.string(\"Confirm your password\"),\r\n  }),\r\n  bio: yup.string(\"Enter your bio\"),\r\n  facebookId: yup.string(\"Enter your facebook id\"),\r\n  linkedinId: yup.string(\"Enter your linkedin id\"),\r\n  twitterId: yup.string(\"Enter your twitter id\"),\r\n  image: yup.mixed(),\r\n});\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formContent: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  inputGroup: {\r\n    display: \"block\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  inputLabel: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  errorLabel: {\r\n    color: theme.palette.error.main,\r\n    marginLeft: theme.spacing(2),\r\n    fontSize: \"0.75rem\",\r\n    lineHeight: 1.66,\r\n    letterSpacing: \"0.03333em\",\r\n    display: \"block\",\r\n  },\r\n}));\r\nconst EditUserProfileScreen = ({\r\n  showSuccessAlertHandler,\r\n  handleModalClose,\r\n  dispatcher,\r\n}) => {\r\n  const classes = useStyles();\r\n  const queryClient = useQueryClient();\r\n  // formik\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      bio: \"\",\r\n      facebookId: \"\",\r\n      linkedinId: \"\",\r\n      twitterId: \"\",\r\n      image: \"\",\r\n      isAdmin: false,\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      mutation.mutate(values);\r\n      handleModalClose();\r\n    },\r\n  });\r\n  const mutation = useMutation(updateUser, {\r\n    onSuccess: (data) => {\r\n      showSuccessAlertHandler();\r\n      queryClient.invalidateQueries(SINGLE_USER_DATA);\r\n      dispatcher(data);\r\n    },\r\n  });\r\n  return (\r\n    <Box>\r\n      <form onSubmit={formik.handleSubmit} className={classes.formContent}>\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          value={formik.values.name}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          error={formik.touched.name && Boolean(formik.errors.name)}\r\n          helperText={(formik.touched.name && formik.errors.name) || \" \"}\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          value={formik.values.email}\r\n          onBlur={formik.handleBlur}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={(formik.touched.email && formik.errors.email) || \" \"}\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.password}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={\r\n            (formik.touched.password && formik.errors.password) || \" \"\r\n          }\r\n          size=\"small\"\r\n          type=\"password\"\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          id=\"confirmPassword\"\r\n          name=\"confirmPassword\"\r\n          label=\"Confirm Password\"\r\n          value={formik.values.confirmPassword}\r\n          onBlur={formik.handleBlur}\r\n          onChange={formik.handleChange}\r\n          error={\r\n            formik.touched.confirmPassword &&\r\n            Boolean(formik.errors.confirmPassword)\r\n          }\r\n          helperText={\r\n            (formik.touched.confirmPassword && formik.errors.confirmPassword) ||\r\n            \" \"\r\n          }\r\n          size=\"small\"\r\n          type=\"password\"\r\n        />\r\n        <Box className={classes.inputGroup}>\r\n          <input\r\n            accept=\"image/*\"\r\n            className={classes.input}\r\n            id=\"image\"\r\n            multiple\r\n            type=\"file\"\r\n            onChange={(event) => {\r\n              formik.setFieldValue(\"image\", event.target.files[0]);\r\n            }}\r\n            onBlur={formik.handleBlur}\r\n            name=\"image\"\r\n          />\r\n          <label htmlFor=\"image\">\r\n            <Button\r\n              startIcon={<PhotoCameraIcon />}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component=\"span\"\r\n            >\r\n              Upload Photo\r\n            </Button>\r\n          </label>\r\n          <label className={classes.inputLabel}>\r\n            {formik.values.image.name ? formik.values.image.name : \"\"}\r\n          </label>\r\n          <span className={classes.errorLabel}>\r\n            {(formik.touched.image && formik.errors.image) || \" \"}\r\n          </span>\r\n        </Box>\r\n        <TextField\r\n          fullWidth\r\n          multiline\r\n          minRows={4}\r\n          variant=\"outlined\"\r\n          id=\"bio\"\r\n          name=\"bio\"\r\n          label=\"Bio\"\r\n          value={formik.values.bio}\r\n          onBlur={formik.handleBlur}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.bio && Boolean(formik.errors.bio)}\r\n          helperText={(formik.touched.bio && formik.errors.bio) || \" \"}\r\n          size=\"small\"\r\n        />\r\n        <Grid container justifyContent=\"space-between\" spacing={1}>\r\n          <Grid item xs={4}>\r\n            <Grid container>\r\n              <Grid item xs={2}>\r\n                <FacebookIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  id=\"facebookId\"\r\n                  name=\"facebookId\"\r\n                  label=\"Facebook\"\r\n                  value={formik.values.facebookId}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  error={\r\n                    formik.touched.facebookId &&\r\n                    Boolean(formik.errors.facebookId)\r\n                  }\r\n                  helperText={\r\n                    (formik.touched.facebookId && formik.errors.facebookId) ||\r\n                    \" \"\r\n                  }\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Grid container>\r\n              <Grid item xs={2}>\r\n                <LinkedInIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  id=\"linkedinId\"\r\n                  name=\"linkedinId\"\r\n                  label=\"Linkedin\"\r\n                  value={formik.values.linkedinId}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  error={\r\n                    formik.touched.linkedinId &&\r\n                    Boolean(formik.errors.linkedinId)\r\n                  }\r\n                  helperText={\r\n                    (formik.touched.linkedinId && formik.errors.linkedinId) ||\r\n                    \" \"\r\n                  }\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Grid container>\r\n              <Grid item xs={2}>\r\n                <TwitterIcon fontSize=\"large\" />\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  id=\"twitterId\"\r\n                  name=\"twitterId\"\r\n                  label=\"Twitter\"\r\n                  value={formik.values.twitterId}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  error={\r\n                    formik.touched.twitterId && Boolean(formik.errors.twitterId)\r\n                  }\r\n                  helperText={\r\n                    (formik.touched.twitterId && formik.errors.twitterId) || \" \"\r\n                  }\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          type=\"submit\"\r\n          fullWidth\r\n          className={classes.button}\r\n          startIcon={<CreateIcon />}\r\n        >\r\n          Update\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditUserProfileScreen;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AdminModal from \"../../../components/AdminModal\";\r\nimport AdminProfileDataRow from \"../../../components/AdminProfileDataRow\";\r\nimport ScreenTitle from \"../../../components/ScreenTitle\";\r\nimport { userProfileStyles } from \"../../../styles/userProfileStyles\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport EditUserProfileScreen from \"./EditUserProfileScreen\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { storeUserData } from \"../../../redux/slices/userDataSlice\";\r\nimport AlertNotification from \"../../../components/AlertNotification\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { useQuery } from \"react-query\";\r\nimport { SINGLE_USER_DATA } from \"../../../definitions/reactQueryConstants/queryConstants\";\r\nimport { getUserById } from \"../../../data/userQueryFunctions\";\r\nimport { getBase64ImageURL } from \"../../../utils/imageConvertion\";\r\n\r\nconst UserProfile = () => {\r\n  const { user } = useSelector((state) => state.userData);\r\n  const { isLoading, isFetching, isError, data } = useQuery(\r\n    [SINGLE_USER_DATA, user._id],\r\n    ({ queryKey }) => getUserById(queryKey[1])\r\n  );\r\n  const history = useHistory();\r\n  const classes = userProfileStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  // dispatcher\r\n  const updateUserState = (userData) => {\r\n    dispatch(\r\n      storeUserData({\r\n        _id: userData._id,\r\n        name: userData.name,\r\n        email: userData.email,\r\n        image: userData.image,\r\n        isAdmin: userData.isAdmin,\r\n        token: user.token,\r\n      })\r\n    );\r\n  };\r\n\r\n  // states\r\n  const [showProfileEditModal, setShowProfileEditModal] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  // effects\r\n  useEffect(() => {\r\n    if (user.isAdmin || !user._id) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, user]);\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.header}>\r\n        <ScreenTitle text=\"Profile\" className={classes.root} />\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          Hello{\" \"}\r\n          <Typography component=\"span\" variant=\"subtitle1\" color=\"primary\">\r\n            {user.name}\r\n          </Typography>\r\n        </Typography>\r\n        <AlertNotification\r\n          showState={showAlert}\r\n          alertText=\"Profile has been updated\"\r\n          closeHandler={() => setShowAlert(false)}\r\n          alertSeverity=\"success\"\r\n        />\r\n      </Box>\r\n      {isLoading || isFetching ? (\r\n        <Grid container justifyContent=\"center\">\r\n          <CircularProgress />\r\n        </Grid>\r\n      ) : isError ? (\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          Error\r\n        </Typography>\r\n      ) : (\r\n        <>\r\n          <Avatar\r\n            alt=\"user profile image\"\r\n            className={classes.avatar}\r\n            src={data.imageURL}\r\n          />\r\n          <AdminProfileDataRow title=\"Name\" value={data.name} />\r\n          <AdminProfileDataRow title=\"Email\" value={data.email} />\r\n          <AdminProfileDataRow title=\"Bio\" value={data.bio} />\r\n          <AdminProfileDataRow title=\"Facebook URL\" value={data.facebookId} />\r\n          <AdminProfileDataRow title=\"Linkedin URL\" value={data.linkedinId} />\r\n          <AdminProfileDataRow title=\"Twitter URL\" value={data.twitterId} />\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<CreateIcon />}\r\n            onClick={() => setShowProfileEditModal(true)}\r\n          >\r\n            Edit profile\r\n          </Button>\r\n        </>\r\n      )}\r\n      <AdminModal\r\n        modalOpenState={showProfileEditModal}\r\n        modalTitle=\"Edit profile\"\r\n        modalCloseHandler={() => setShowProfileEditModal(false)}\r\n        modalIcon={<AccountCircleIcon fontSize=\"large\" color=\"secondary\" />}\r\n      >\r\n        <EditUserProfileScreen\r\n          handleModalClose={() => setShowProfileEditModal(false)}\r\n          showSuccessAlertHandler={() => setShowAlert(true)}\r\n          userData={user}\r\n          dispatcher={(userData) => updateUserState(userData)}\r\n        />\r\n      </AdminModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { createPost } from \"../../../data/postQueryFunctions\";\r\nimport { useFormik } from \"formik\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport * as yup from \"yup\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport ReactQuill from \"react-quill\";\r\nimport ScreenTitle from \"../../../components/ScreenTitle\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport { getAllCategories } from \"../../../data/categoryQueryFunctions\";\r\nimport {\r\n  CATEGORY_DATA,\r\n  POST_DATA,\r\n} from \"../../../definitions/reactQueryConstants/queryConstants\";\r\nimport { adminPostCreateStyles } from \"../../../styles/adminPostStyles\";\r\nimport { modules } from \"../../../definitions/editorModules\";\r\n\r\nconst validationSchema = yup.object({\r\n  title: yup.string(\"Enter post title\").required(\"This field is required\"),\r\n  summary: yup\r\n    .string(\"Enter post summary\")\r\n    .required(\"This field is required\")\r\n    .min(150)\r\n    .max(300),\r\n  category: yup\r\n    .string(\"Select post category\")\r\n    .required(\"This field is required\"),\r\n  image: yup.mixed().required(\"You need an image for your post\"),\r\n  description: yup\r\n    .string(\"Enter post description\")\r\n    .required(\"This field is required\"),\r\n});\r\n\r\nconst UserCreatePostScreen = () => {\r\n  const classes = adminPostCreateStyles();\r\n  const history = useHistory();\r\n  const queryClient = useQueryClient();\r\n  const { user } = useSelector((state) => state.userData);\r\n  useEffect(() => {\r\n    if (user.isAdmin) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, user]);\r\n  const mutation = useMutation(createPost, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(POST_DATA);\r\n      history.push({\r\n        pathname: \"/user/posts/\",\r\n        state: {\r\n          showCreateSuccessAlert: true,\r\n          showEditSuccessAlert: false,\r\n        },\r\n      });\r\n    },\r\n  });\r\n  const { data, isLoading, isError } = useQuery(\r\n    CATEGORY_DATA,\r\n    getAllCategories\r\n  );\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      description: \"\",\r\n      summary: \"\",\r\n      category: \"\",\r\n      tags: [],\r\n      image: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      values.tags =\r\n        values.tags.length > 0\r\n          ? values.tags.split(\",\").map((tag) => tag.trim())\r\n          : values.tags;\r\n      mutation.mutate({\r\n        title: values.title,\r\n        description: values.description,\r\n        summary: values.summary,\r\n        category: values.category,\r\n        tags: values.tags,\r\n        image: values.image,\r\n      });\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Grid container justifyContent=\"flex-start\" alignItems=\"center\">\r\n        <Button\r\n          variant=\"text\"\r\n          className={classes.returnLink}\r\n          component={RouterLink}\r\n          to=\"/user/posts\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          startIcon={<ArrowBackIcon />}\r\n        >\r\n          Return to Posts\r\n        </Button>\r\n      </Grid>\r\n      <ScreenTitle text=\"Create a new post\" className={classes.root} />\r\n      <Box className={classes.formContent}>\r\n        {isLoading && !isError ? (\r\n          <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n            <CircularProgress />\r\n          </Grid>\r\n        ) : (\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              value={formik.values.title}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.title && Boolean(formik.errors.title)}\r\n              helperText={(formik.touched.title && formik.errors.title) || \" \"}\r\n              size=\"small\"\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              minRows={5}\r\n              variant=\"outlined\"\r\n              id=\"summary\"\r\n              name=\"summary\"\r\n              label=\"Summary\"\r\n              value={formik.values.summary}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.summary && Boolean(formik.errors.summary)}\r\n              helperText={\r\n                (formik.touched.summary && formik.errors.summary) || \" \"\r\n              }\r\n            />\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel id=\"category-label\">Category</InputLabel>\r\n              <Select\r\n                labelId=\"category-label\"\r\n                id=\"category\"\r\n                name=\"category\"\r\n                label=\"Category\"\r\n                value={formik.values.category}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                error={\r\n                  formik.touched.category && Boolean(formik.errors.category)\r\n                }\r\n              >\r\n                {!isLoading &&\r\n                  !isError &&\r\n                  data.map((cat) => (\r\n                    <MenuItem value={cat._id}>{cat.title}</MenuItem>\r\n                  ))}\r\n              </Select>\r\n              <span className={classes.errorLabel}>\r\n                {(formik.touched.category && formik.errors.category) || \" \"}\r\n              </span>\r\n            </FormControl>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              variant=\"outlined\"\r\n              id=\"tags\"\r\n              name=\"tags\"\r\n              label=\"Tags\"\r\n              placeholder=\"Enter tags separated by commas\"\r\n              value={formik.values.tags}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.tags && Boolean(formik.errors.tags)}\r\n              helperText={(formik.touched.tags && formik.errors.tags) || \" \"}\r\n            />\r\n            <Box className={classes.inputGroup}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"image\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(event) => {\r\n                  formik.setFieldValue(\"image\", event.target.files[0]);\r\n                }}\r\n                onBlur={formik.handleBlur}\r\n                name=\"image\"\r\n              />\r\n              <label htmlFor=\"image\">\r\n                <Button\r\n                  startIcon={<PhotoCameraIcon />}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  component=\"span\"\r\n                >\r\n                  Upload Image\r\n                </Button>\r\n              </label>\r\n              <label className={classes.inputLabel}>\r\n                {formik.values.image.name ? formik.values.image.name : \"\"}\r\n              </label>\r\n              <span className={classes.errorLabel}>\r\n                {(formik.touched.image && formik.errors.image) || \" \"}\r\n              </span>\r\n            </Box>\r\n\r\n            <ReactQuill\r\n              theme=\"bubble\"\r\n              onChange={(editorData) => {\r\n                formik.setFieldValue(\"description\", editorData);\r\n              }}\r\n              value={formik.values.description}\r\n              id=\"description\"\r\n              placeholder=\"Description\"\r\n              className={classes.editor}\r\n              name=\"description\"\r\n              modules={modules}\r\n            />\r\n            <span className={classes.errorLabel}>\r\n              {(formik.touched.description && formik.errors.description) || \" \"}\r\n            </span>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.submitBtn}\r\n              startIcon={<AddBoxIcon />}\r\n            >\r\n              Create Post\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserCreatePostScreen;\r\n","import {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { getPostById, updatePostById } from \"../../../data/postQueryFunctions\";\r\nimport { useFormik } from \"formik\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport ReactQuill from \"react-quill\";\r\nimport ScreenTitle from \"../../../components/ScreenTitle\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\r\nimport { getAllCategories } from \"../../../data/categoryQueryFunctions\";\r\nimport {\r\n  CATEGORY_DATA,\r\n  POST_DATA,\r\n  SINGLE_POST_DATA,\r\n} from \"../../../definitions/reactQueryConstants/queryConstants\";\r\nimport { adminPostEditStyles } from \"../../../styles/adminPostStyles\";\r\nimport { modules } from \"../../../definitions/editorModules\";\r\n\r\nconst validationSchema = yup.object({\r\n  title: yup.string(\"Enter post title\").required(\"This field is required\"),\r\n  summary: yup\r\n    .string(\"Enter post summary\")\r\n    .required(\"This field is required\")\r\n    .min(150)\r\n    .max(300),\r\n  category: yup\r\n    .string(\"Select post category\")\r\n    .required(\"This field is required\"),\r\n  image: yup.mixed().required(\"You need an image for your post\"),\r\n  description: yup\r\n    .string(\"Enter post description\")\r\n    .required(\"This field is required\"),\r\n});\r\n\r\nconst EditUserPostScreen = () => {\r\n  const classes = adminPostEditStyles();\r\n  const history = useHistory();\r\n  const queryClient = useQueryClient();\r\n  const { user } = useSelector((state) => state.userData);\r\n  const { editPostId } = useParams();\r\n  useEffect(() => {\r\n    if (user.isAdmin) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, user]);\r\n  const {\r\n    isLoading: isUserDataLoading,\r\n    isError: isUserDataError,\r\n    data: userData,\r\n  } = useQuery([SINGLE_POST_DATA, editPostId], ({ queryKey }) =>\r\n    getPostById(queryKey[1])\r\n  );\r\n  const mutation = useMutation(updatePostById, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(POST_DATA);\r\n      queryClient.invalidateQueries(SINGLE_POST_DATA);\r\n      history.push({\r\n        pathname: \"/user/posts/\",\r\n        state: {\r\n          showCreateSuccessAlert: false,\r\n          showEditSuccessAlert: true,\r\n        },\r\n      });\r\n    },\r\n  });\r\n  const { data, isLoading, isError } = useQuery(\r\n    CATEGORY_DATA,\r\n    getAllCategories\r\n  );\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      description: \"\",\r\n      summary: \"\",\r\n      category: \"\",\r\n      tags: [],\r\n      image: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      values.tags =\r\n        values.tags.length > 0\r\n          ? values.tags.split(\",\").map((tag) => tag.trim())\r\n          : values.tags;\r\n\r\n      mutation.mutate({\r\n        postId: editPostId,\r\n        values: {\r\n          title: values.title,\r\n          description: values.description,\r\n          summary: values.summary,\r\n          category: values.category,\r\n          tags: values.tags,\r\n          image: values.image,\r\n        },\r\n      });\r\n    },\r\n  });\r\n  if (!isUserDataLoading && !isUserDataError) {\r\n    formik.initialValues.title = userData.title;\r\n    formik.initialValues.description = userData.description;\r\n    formik.initialValues.summary = userData.summary;\r\n    formik.initialValues.category = userData.category._id;\r\n    formik.initialValues.tags = userData.tags.join(\",\");\r\n    formik.initialValues.image = userData.imageFileName;\r\n  }\r\n  return (\r\n    <>\r\n      <Grid container justifyContent=\"flex-start\" alignItems=\"center\">\r\n        <Button\r\n          variant=\"text\"\r\n          className={classes.returnLink}\r\n          component={RouterLink}\r\n          to=\"/user/posts\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          startIcon={<ArrowBackIcon />}\r\n        >\r\n          Return to Posts\r\n        </Button>\r\n      </Grid>\r\n      <ScreenTitle text=\"Edit Post\" className={classes.root} />\r\n      <Box className={classes.formContent}>\r\n        {(isLoading && !isError) || (isUserDataLoading && !isUserDataError) ? (\r\n          <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n            <CircularProgress />\r\n          </Grid>\r\n        ) : (\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              value={formik.values.title}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.title && Boolean(formik.errors.title)}\r\n              helperText={(formik.touched.title && formik.errors.title) || \" \"}\r\n              size=\"small\"\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              minRows={5}\r\n              variant=\"outlined\"\r\n              id=\"summary\"\r\n              name=\"summary\"\r\n              label=\"Summary\"\r\n              value={formik.values.summary}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.summary && Boolean(formik.errors.summary)}\r\n              helperText={\r\n                (formik.touched.summary && formik.errors.summary) || \" \"\r\n              }\r\n            />\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel id=\"category-label\">Category</InputLabel>\r\n              <Select\r\n                labelId=\"category-label\"\r\n                id=\"category\"\r\n                name=\"category\"\r\n                label=\"Category\"\r\n                value={formik.values.category}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                error={\r\n                  formik.touched.category && Boolean(formik.errors.category)\r\n                }\r\n              >\r\n                {!isLoading &&\r\n                  !isError &&\r\n                  data.map((cat) => (\r\n                    <MenuItem value={cat._id}>{cat.title}</MenuItem>\r\n                  ))}\r\n              </Select>\r\n              <span className={classes.errorLabel}>\r\n                {(formik.touched.category && formik.errors.category) || \" \"}\r\n              </span>\r\n            </FormControl>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              variant=\"outlined\"\r\n              id=\"tags\"\r\n              name=\"tags\"\r\n              label=\"Tags\"\r\n              placeholder=\"Enter tags separated by commas\"\r\n              value={formik.values.tags}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              error={formik.touched.tags && Boolean(formik.errors.tags)}\r\n              helperText={(formik.touched.tags && formik.errors.tags) || \" \"}\r\n            />\r\n            <Box className={classes.inputGroup}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"image\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(event) => {\r\n                  formik.setFieldValue(\"image\", event.target.files[0]);\r\n                }}\r\n                onBlur={formik.handleBlur}\r\n                name=\"image\"\r\n              />\r\n              <label htmlFor=\"image\">\r\n                <Button\r\n                  startIcon={<PhotoCameraIcon />}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  component=\"span\"\r\n                >\r\n                  Upload Image\r\n                </Button>\r\n              </label>\r\n              <label className={classes.inputLabel}>\r\n                {formik.values.image.name ? formik.values.image.name : \"\"}\r\n              </label>\r\n              <span className={classes.errorLabel}>\r\n                {(formik.touched.image && formik.errors.image) || \" \"}\r\n              </span>\r\n            </Box>\r\n\r\n            <ReactQuill\r\n              theme=\"bubble\"\r\n              onChange={(editorData) => {\r\n                formik.setFieldValue(\"description\", editorData);\r\n              }}\r\n              value={formik.values.description}\r\n              id=\"description\"\r\n              placeholder=\"Description\"\r\n              className={classes.editor}\r\n              name=\"description\"\r\n              modules={modules}\r\n            />\r\n            <span className={classes.errorLabel}>\r\n              {(formik.touched.description && formik.errors.description) || \" \"}\r\n            </span>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.submitBtn}\r\n              startIcon={<CreateIcon />}\r\n            >\r\n              Update Post\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditUserPostScreen;\r\n","export default __webpack_public_path__ + \"static/media/appIcon.6c245a0b.svg\";","import { alpha, Link, makeStyles } from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"block\",\r\n    font: \"inherit\",\r\n    color: theme.palette.text.primary,\r\n    marginBottom: theme.spacing(0.5),\r\n    width: \"100%\",\r\n    padding: theme.spacing(0.5),\r\n    borderRadius: theme.shape.borderRadius,\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.15),\r\n    },\r\n    \"&:last-child\": {\r\n      marginBottom: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nconst SearchLink = ({ children, to, onClick }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Link\r\n      onClick={onClick}\r\n      className={classes.root}\r\n      component={RouterLink}\r\n      to={to}\r\n    >\r\n      {children}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default SearchLink;\r\n","import {\r\n  alpha,\r\n  AppBar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  InputBase,\r\n  makeStyles,\r\n  Toolbar,\r\n  Typography,\r\n  CircularProgress,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport AppIcon from \"../assets/appIcon.svg\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport SearchLink from \"./SearchLink\";\r\nimport { debounce } from \"lodash\";\r\nimport { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { SEARCH_POST_DATA } from \"../definitions/reactQueryConstants/queryConstants\";\r\nimport { searchPosts } from \"../data/postQueryFunctions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { storeSearchQuery } from \"../redux/slices/searchDataSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mobileContainer: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: 0,\r\n    },\r\n  },\r\n  headerText: {\r\n    letterSpacing: theme.spacing(0.5),\r\n    fontWeight: theme.typography.fontWeightLight,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  headerLink: {\r\n    textDecoration: \"none\",\r\n  },\r\n  header: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  headerImage: {\r\n    maxWidth: theme.spacing(4),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n    \"&:hover\": {\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.15),\r\n    },\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginRight: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 6, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n  searchResult: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n  },\r\n  searchMobile: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      maxWidth: \"66.66%\",\r\n      flexBasis: \"66.66%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Navbar = ({ headerText, closeDrawerHandler, children }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  // states\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [showSearchResultWindow, setShowSearchResultWindow] = useState(false);\r\n  const [isHoveringOnSearchResult, setIsHoveringOnSearchResult] =\r\n    useState(false);\r\n\r\n  // action handlers\r\n  const manageSearchInput = (e) => {\r\n    setSearchQuery(e?.target?.value);\r\n  };\r\n  const debouncedInput = debounce(manageSearchInput, 200);\r\n  const handleSearchInput = (e) => {\r\n    if (e.target.value === \"\") {\r\n      setShowSearchResultWindow(false);\r\n    } else {\r\n      setShowSearchResultWindow(true);\r\n    }\r\n    debouncedInput(e);\r\n  };\r\n  const hideSearchResultWindowHandler = () => {\r\n    setShowSearchResultWindow(false);\r\n  };\r\n  const showSearchResultWindowHandler = () => {\r\n    if (searchQuery !== \"\") {\r\n      setShowSearchResultWindow(true);\r\n    }\r\n  };\r\n  const handleSearchContainerBlur = () => {\r\n    if (isHoveringOnSearchResult === false) {\r\n      setShowSearchResultWindow(false);\r\n    }\r\n  };\r\n  const handleSearchResultRequest = () => {\r\n    history.push(`/search/${searchQuery}`);\r\n    setShowSearchResultWindow(false);\r\n  };\r\n  // data fetch\r\n  const { isLoading, data } = useQuery(\r\n    [SEARCH_POST_DATA, searchQuery],\r\n    ({ queryKey }) => searchPosts(queryKey[1]),\r\n    {\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      color=\"transparent\"\r\n      className={classes.header}\r\n      elevation={false}\r\n    >\r\n      <Toolbar>\r\n        <Container maxWidth=\"lg\" className={classes.mobileContainer}>\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item xs={9} lg={5}>\r\n              <Grid container justifyContent=\"flex-start\" alignItems=\"center\">\r\n                <Grid item xs={1} sm={3}>\r\n                  <Box className={classes.headerLink} component={Link} to=\"/\">\r\n                    <Grid\r\n                      container\r\n                      justifyContent=\"flex-start\"\r\n                      alignItems=\"center\"\r\n                    >\r\n                      <img\r\n                        className={classes.headerImage}\r\n                        src={AppIcon}\r\n                        alt=\"App Icon\"\r\n                      />\r\n                      <Typography\r\n                        variant=\"h6\"\r\n                        color=\"primary\"\r\n                        className={classes.headerText}\r\n                      >\r\n                        {headerText}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Box>\r\n                </Grid>\r\n                <Box className={classes.searchMobile}>\r\n                  <Box\r\n                    className={classes.search}\r\n                    onMouseEnter={() => setIsHoveringOnSearchResult(true)}\r\n                    onMouseLeave={() => setIsHoveringOnSearchResult(false)}\r\n                    onBlur={handleSearchContainerBlur}\r\n                  >\r\n                    <Box className={classes.searchIcon}>\r\n                      <SearchIcon />\r\n                    </Box>\r\n                    <InputBase\r\n                      placeholder=\"Search…\"\r\n                      classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                      }}\r\n                      inputProps={{ \"aria-label\": \"search\" }}\r\n                      onChange={handleSearchInput}\r\n                      onFocus={showSearchResultWindowHandler}\r\n                      onKeyDown={(e) => {\r\n                        e.key === \"Enter\" && handleSearchResultRequest();\r\n                      }}\r\n                    />\r\n                    <Fade in={showSearchResultWindow}>\r\n                      <Card className={classes.searchResult}>\r\n                        <CardContent>\r\n                          {isLoading ? (\r\n                            <Grid\r\n                              container\r\n                              justifyContent=\"center\"\r\n                              alignItems=\"center\"\r\n                            >\r\n                              <CircularProgress />\r\n                            </Grid>\r\n                          ) : (\r\n                            <>\r\n                              {data?.map((post) => (\r\n                                <SearchLink\r\n                                  onClick={hideSearchResultWindowHandler}\r\n                                  to={`/posts/${post._id}`}\r\n                                >\r\n                                  {post.title}\r\n                                </SearchLink>\r\n                              ))}\r\n                              {data?.length === 0 && (\r\n                                <Typography variant=\"subtitle1\">\r\n                                  No results found\r\n                                </Typography>\r\n                              )}\r\n                            </>\r\n                          )}\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Fade>\r\n                  </Box>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container>{children}</Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { Button, makeStyles } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navLink: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst NavLink = ({\r\n  text,\r\n  handler,\r\n  icon,\r\n  variant,\r\n  isLink,\r\n  to,\r\n  closeDrawerHandler,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  // action handler\r\n  const handleClick = () => {\r\n    if (closeDrawerHandler) {\r\n      closeDrawerHandler();\r\n    }\r\n    handler();\r\n  };\r\n  return isLink ? (\r\n    <Button\r\n      variant={variant}\r\n      color=\"primary\"\r\n      className={classes.navLink}\r\n      startIcon={icon}\r\n      component={Link}\r\n      to={to}\r\n      {...(closeDrawerHandler && { onClick: closeDrawerHandler })}\r\n    >\r\n      {text}\r\n    </Button>\r\n  ) : (\r\n    <Button\r\n      variant={variant}\r\n      color=\"primary\"\r\n      className={classes.navLink}\r\n      startIcon={icon}\r\n      onClick={handleClick}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default NavLink;\r\n","import {\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Logo from \"../assets/appIcon.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    borderTop: `1px solid ${theme.palette.primary.main}`,\r\n    marginTop: theme.spacing(8),\r\n  },\r\n  footerTextContainer: {\r\n    margin: theme.spacing(1.5, 0),\r\n  },\r\n  footerTextHeader: {\r\n    marginBottom: theme.spacing(1),\r\n    letterSpacing: theme.spacing(0.5),\r\n  },\r\n  footerTextBody: {\r\n    textAlign: \"justify\",\r\n    lineHeight: 1.5,\r\n    fontWeight: theme.typography.fontWeightLight,\r\n  },\r\n  footerNavigationContainer: {\r\n    marginTop: theme.spacing(1.5),\r\n  },\r\n  footerLogoImage: {\r\n    width: theme.spacing(6),\r\n  },\r\n  footerLogoText: {\r\n    fontWeight: theme.typography.fontWeightLight,\r\n  },\r\n}));\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.container}>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          className={classes.footerTextContainer}\r\n          container\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid item xs={12} sm={3}>\r\n            <Typography\r\n              className={classes.footerTextHeader}\r\n              variant=\"h6\"\r\n              color=\"primary\"\r\n            >\r\n              Learn More.\r\n            </Typography>\r\n            <Typography className={classes.footerTextBody} variant=\"subtitle2\">\r\n              Check out our about us page and learn more about us.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Typography\r\n              className={classes.footerTextHeader}\r\n              variant=\"h6\"\r\n              color=\"primary\"\r\n            >\r\n              Customize your account.\r\n            </Typography>\r\n            <Typography className={classes.footerTextBody} variant=\"subtitle2\">\r\n              Make the blogen experience yours. Customize your profile to\r\n              connect to your readers. Update your bio and add your social media\r\n              links.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Typography\r\n              className={classes.footerTextHeader}\r\n              variant=\"h6\"\r\n              color=\"primary\"\r\n            >\r\n              Write a story.\r\n            </Typography>\r\n            <Typography className={classes.footerTextBody} variant=\"subtitle2\">\r\n              Sign up and start writing your own stories. Join with a community\r\n              of creative writers.\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Divider />\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          className={classes.footerNavigationContainer}\r\n          container\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item sm={3}>\r\n            <Grid container justifyContent=\"flex-start\" alignItems=\"center\">\r\n              <img src={Logo} alt=\"logo\" className={classes.footerLogoImage} />\r\n              <Typography\r\n                className={classes.footerLogoText}\r\n                variant=\"h5\"\r\n                color=\"primary\"\r\n              >\r\n                Blogen\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item sm={9}>\r\n            <Grid container justifyContent=\"flex-end\" alignItems=\"center\">\r\n              <Typography variant=\"subtitle2\" color=\"primary\">\r\n                &copy; {new Date().getFullYear()} Blogen. All rights reserved.\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { useState } from \"react\";\r\nimport { Button, IconButton, Menu } from \"@material-ui/core\";\r\n\r\nconst ItemMenu = ({ children, isIconButton, menuButtonContent }) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isIconButton ? (\r\n        <IconButton\r\n          aria-controls=\"app-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n          disableRipple\r\n        >\r\n          {menuButtonContent}\r\n        </IconButton>\r\n      ) : (\r\n        <Button\r\n          aria-controls=\"app-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n        >\r\n          {menuButtonContent}\r\n        </Button>\r\n      )}\r\n      <Menu\r\n        id=\"app-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {children}\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemMenu;\r\n","import { MenuItem } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ItemMenuElement = ({ isLink, children, actionHandler, link }) => {\r\n  return isLink ? (\r\n    <MenuItem component={Link} to={link}>\r\n      {children}\r\n    </MenuItem>\r\n  ) : (\r\n    <MenuItem onClick={actionHandler}>{children}</MenuItem>\r\n  );\r\n};\r\n\r\nexport default ItemMenuElement;\r\n","import { useState } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport NavLink from \"../components/NavLink\";\r\nimport UserModal from \"../components/UserModal\";\r\nimport LoginScreen from \"../screens/general/LoginScreen\";\r\nimport RegisterScreen from \"../screens/general/RegisterScreen\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport CategoryIcon from \"@material-ui/icons/Category\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  Divider,\r\n  Drawer,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport Footer from \"../components/Footer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ItemMenu from \"../components/ItemMenu\";\r\nimport ItemMenuElement from \"../components/ItemMenuElement\";\r\nimport { getAuthorNameInitials } from \"../utils/dataFormat\";\r\nimport { clearUserData } from \"../redux/slices/userDataSlice\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    minHeight: \"45vh\",\r\n  },\r\n  navbar: {\r\n    display: \"block\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  navbarMobile: {\r\n    display: \"none\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  navLinkContainerMobile: {\r\n    padding: theme.spacing(3, 0),\r\n  },\r\n}));\r\n\r\nconst GeneralLayout = ({ children }) => {\r\n  const classes = useStyles();\r\n  const { user } = useSelector((state) => state.userData);\r\n  const dispatch = useDispatch();\r\n\r\n  // states\r\n  const [openLoginModal, setOpenLoginModal] = useState(false);\r\n  const [openRegistrationModal, setOpenRegistrationModal] = useState(false);\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n\r\n  // action handlers\r\n  const handleLogout = () => {\r\n    dispatch(clearUserData());\r\n  };\r\n\r\n  const modalCloseHandler = (modalType) => {\r\n    switch (modalType) {\r\n      case \"LOGIN\":\r\n        setOpenLoginModal(false);\r\n        break;\r\n      case \"REGISTER\":\r\n        setOpenRegistrationModal(false);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Box className={classes.navbar}>\r\n        <Navbar headerText=\"Blogen\">\r\n          <NavLink\r\n            text=\"about us\"\r\n            isLink={true}\r\n            to=\"/about\"\r\n            icon={<InfoIcon />}\r\n            variant=\"text\"\r\n          />\r\n          <NavLink\r\n            text=\"categories\"\r\n            isLink={true}\r\n            to=\"/categories\"\r\n            variant=\"text\"\r\n            icon={<CategoryIcon />}\r\n          />\r\n          <NavLink\r\n            text=\"authors\"\r\n            isLink={true}\r\n            to=\"/authors\"\r\n            variant=\"text\"\r\n            icon={<PersonIcon />}\r\n          />\r\n          {user._id ? (\r\n            <ItemMenu\r\n              isIconButton={true}\r\n              menuButtonContent={\r\n                user.imageURL ? (\r\n                  <>\r\n                    <Avatar src={user.imageURL} alt={user.name} />\r\n                    <ArrowDropDownIcon />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Avatar>{getAuthorNameInitials(user.name)}</Avatar>\r\n                    <ArrowDropDownIcon />\r\n                  </>\r\n                )\r\n              }\r\n            >\r\n              <ItemMenuElement isLink={true} link=\"/user/dashboard\">\r\n                Dashboard\r\n              </ItemMenuElement>\r\n              <ItemMenuElement isLink={true} link=\"/user/profile\">\r\n                Profile\r\n              </ItemMenuElement>\r\n              <ItemMenuElement actionHandler={handleLogout}>\r\n                Logout\r\n              </ItemMenuElement>\r\n            </ItemMenu>\r\n          ) : (\r\n            <>\r\n              <NavLink\r\n                text=\"sign in\"\r\n                handler={() => setOpenLoginModal(true)}\r\n                icon={<LockOpenIcon />}\r\n                variant=\"outlined\"\r\n                isLink={false}\r\n              />\r\n              <NavLink\r\n                text=\"register\"\r\n                handler={() => setOpenRegistrationModal(true)}\r\n                icon={<PersonAddIcon />}\r\n                variant=\"contained\"\r\n                isLink={false}\r\n              />\r\n            </>\r\n          )}\r\n        </Navbar>\r\n      </Box>\r\n      <Box className={classes.navbarMobile}>\r\n        <Navbar headerText=\"Blogen\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"mobile menu\"\r\n            component=\"span\"\r\n            onClick={() => setOpenDrawer(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Drawer\r\n            anchor=\"top\"\r\n            open={openDrawer}\r\n            onClose={() => setOpenDrawer(false)}\r\n          >\r\n            <Container maxWidth=\"lg\">\r\n              <Grid\r\n                className={classes.navLinkContainerMobile}\r\n                container\r\n                direction=\"column\"\r\n                alignItems=\"flex-start\"\r\n              >\r\n                <NavLink\r\n                  text=\"about us\"\r\n                  isLink={true}\r\n                  to=\"/about\"\r\n                  icon={<InfoIcon />}\r\n                  variant=\"text\"\r\n                  closeDrawerHandler={() => setOpenDrawer(false)}\r\n                />\r\n                <NavLink\r\n                  text=\"categories\"\r\n                  isLink={true}\r\n                  to=\"/categories\"\r\n                  variant=\"text\"\r\n                  icon={<CategoryIcon />}\r\n                  closeDrawerHandler={() => setOpenDrawer(false)}\r\n                />\r\n                <NavLink\r\n                  text=\"authors\"\r\n                  isLink={true}\r\n                  to=\"/authors\"\r\n                  variant=\"text\"\r\n                  icon={<PersonIcon />}\r\n                  closeDrawerHandler={() => setOpenDrawer(false)}\r\n                />\r\n                {user._id ? (\r\n                  <>\r\n                    <NavLink\r\n                      text=\"dashboard\"\r\n                      isLink={true}\r\n                      to=\"/user/dashboard\"\r\n                      icon={<InfoIcon />}\r\n                      variant=\"text\"\r\n                      closeDrawerHandler={() => setOpenDrawer(false)}\r\n                    />\r\n                    <NavLink\r\n                      text=\"write\"\r\n                      isLink={true}\r\n                      to=\"/user/posts\"\r\n                      icon={<InfoIcon />}\r\n                      variant=\"text\"\r\n                      closeDrawerHandler={() => setOpenDrawer(false)}\r\n                    />\r\n                    <NavLink\r\n                      text=\"profile\"\r\n                      isLink={true}\r\n                      to=\"/user/profile\"\r\n                      variant=\"text\"\r\n                      icon={<CategoryIcon />}\r\n                      closeDrawerHandler={() => setOpenDrawer(false)}\r\n                    />\r\n                    <NavLink\r\n                      text=\"logout\"\r\n                      handler={handleLogout}\r\n                      icon={<LockOpenIcon />}\r\n                      variant=\"outlined\"\r\n                      isLink={false}\r\n                      closeDrawerHandler={() => setOpenDrawer(false)}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Grid container>\r\n                      <NavLink\r\n                        text=\"sign in\"\r\n                        handler={() => setOpenLoginModal(true)}\r\n                        icon={<LockOpenIcon />}\r\n                        variant=\"outlined\"\r\n                        isLink={false}\r\n                        closeDrawerHandler={() => setOpenDrawer(false)}\r\n                      />\r\n                      <NavLink\r\n                        text=\"register\"\r\n                        handler={() => setOpenRegistrationModal(true)}\r\n                        icon={<PersonAddIcon />}\r\n                        variant=\"contained\"\r\n                        isLink={false}\r\n                        closeDrawerHandler={() => setOpenDrawer(false)}\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </Container>\r\n          </Drawer>\r\n        </Navbar>\r\n      </Box>\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        {children}\r\n      </Container>\r\n      {/* Modals */}\r\n      <UserModal open={openLoginModal} onClose={() => setOpenLoginModal(false)}>\r\n        <LoginScreen\r\n          handleModalClose={() => modalCloseHandler(\"LOGIN\")}\r\n          openRegistrationModal={() => setOpenRegistrationModal(true)}\r\n        />\r\n      </UserModal>\r\n      <UserModal\r\n        open={openRegistrationModal}\r\n        onClose={() => setOpenRegistrationModal(false)}\r\n        expanded={true}\r\n      >\r\n        <RegisterScreen\r\n          openLoginModal={() => setOpenLoginModal(true)}\r\n          handleModalClose={() => modalCloseHandler(\"REGISTER\")}\r\n        />\r\n      </UserModal>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GeneralLayout;\r\n","import {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getAuthorNameInitials } from \"../utils/dataFormat\";\r\nimport { getBase64ImageURL } from \"../utils/imageConvertion\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  authorText: {\r\n    marginTop: theme.spacing(1),\r\n    color: grey[500],\r\n    fontWeight: theme.typography.fontWeightLight,\r\n    textDecoration: \"none\",\r\n  },\r\n  commentTextContainer: {\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  actionButtonContainer: {\r\n    alignSelf: \"flex-start\",\r\n  },\r\n  hide: {\r\n    visibility: \"hidden\",\r\n  },\r\n}));\r\n\r\nconst PostComment = memo(\r\n  ({\r\n    authorImageURL,\r\n    authorId,\r\n    authorName,\r\n    commentText,\r\n    editHandler,\r\n    deleteHandler,\r\n    showCommentActions,\r\n  }) => {\r\n    const classes = useStyles();\r\n    return (\r\n      <Card className={classes.container} elevation={1} variant=\"outlined\">\r\n        <CardContent>\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item xs={2}>\r\n              <Grid\r\n                direction=\"column\"\r\n                container\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                {authorImageURL ? (\r\n                  <Avatar\r\n                    alt=\"user profile image\"\r\n                    className={classes.avatar}\r\n                    src={authorImageURL}\r\n                  />\r\n                ) : (\r\n                  <Avatar alt=\"user profile image\" className={classes.avatar}>\r\n                    {getAuthorNameInitials(authorName)}\r\n                  </Avatar>\r\n                )}\r\n                <Typography\r\n                  component={Link}\r\n                  to={`/authors/${authorId}`}\r\n                  variant=\"subtitle2\"\r\n                  className={classes.authorText}\r\n                >\r\n                  {authorName}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={9} className={classes.commentTextContainer}>\r\n              <Typography variant=\"subtitle1\" color=\"secondary\">\r\n                {commentText}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={1} className={classes.actionButtonContainer}>\r\n              <Grid\r\n                container\r\n                justifyContent=\"space-evenly\"\r\n                alignItems=\"flex-start\"\r\n                className={showCommentActions ? \"\" : classes.hide}\r\n              >\r\n                <IconButton\r\n                  aria-label=\"edit\"\r\n                  size=\"small\"\r\n                  edge=\"start\"\r\n                  color=\"primary\"\r\n                  onClick={editHandler}\r\n                >\r\n                  <EditIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  aria-label=\"delete\"\r\n                  size=\"small\"\r\n                  edge=\"start\"\r\n                  color=\"primary\"\r\n                  onClick={deleteHandler}\r\n                >\r\n                  <DeleteIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n);\r\n\r\nexport default PostComment;\r\n","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PostComment from \"./PostComment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginTop: theme.spacing(4),\r\n    marginBottom: theme.spacing(6),\r\n    maxHeight: \"60vh\",\r\n    overflowY: \"auto\",\r\n    paddingRight: theme.spacing(2),\r\n    \"&::-webkit-scrollbar\": {\r\n      width: \"0.4em\",\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      backgroundColor: grey[200],\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PostCommentDeck = memo(({ comments, editHandler, deleteHandler }) => {\r\n  // user data\r\n  const { user } = useSelector((state) => state.userData);\r\n\r\n  // classes\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.container}>\r\n        {comments.length > 0 ? (\r\n          comments.map((comment) => (\r\n            <PostComment\r\n              key={comment._id}\r\n              showCommentActions={\r\n                user._id === comment.author._id ? true : false\r\n              }\r\n              authorImageURL={comment.author.imageURL}\r\n              authorId={comment.author._id}\r\n              authorName={comment.author.name}\r\n              commentText={comment.text}\r\n              editHandler={() => {\r\n                editHandler(comment._id);\r\n              }}\r\n              deleteHandler={() => {\r\n                deleteHandler(comment._id);\r\n              }}\r\n            />\r\n          ))\r\n        ) : (\r\n          <Typography variant=\"subtitle1\">No comments yet...</Typography>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default PostCommentDeck;\r\n","import { Chip } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PostTag = ({ text, ...props }) => {\r\n  return (\r\n    <Chip\r\n      component={Link}\r\n      to={`/posts/search/tags/${text}`}\r\n      variant=\"outlined\"\r\n      {...props}\r\n      label={text}\r\n      color=\"primary\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default PostTag;\r\n","import { Box, makeStyles } from \"@material-ui/core\";\r\nimport { orange } from \"@material-ui/core/colors\";\r\nimport PostTag from \"./PostTag\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tagsContainer: {\r\n    marginTop: theme.spacing(6),\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  chip: {\r\n    marginLeft: theme.spacing(2),\r\n    \"&:first-child\": {\r\n      marginLeft: 0,\r\n    },\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n      backgroundColor: orange[50],\r\n    },\r\n  },\r\n}));\r\n\r\nconst PostTagDeck = ({ tags }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.tagsContainer}>\r\n      {tags.map((tag, index) => (\r\n        <PostTag key={index} text={tag} className={classes.chip} />\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PostTagDeck;\r\n","import axios from \"axios\";\r\nimport { store } from \"../redux/store\";\r\n\r\nexport const getCommentsByPostId = async (postId) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/posts/${postId}/comments`, config);\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const getCommentByPostIdCommentId = async ({ postId, commentId }) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.get(\r\n      `/api/posts/${postId}/comments/${commentId}`,\r\n      config\r\n    );\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const updateCommentByPostIdCommentId = async ({\r\n  postId,\r\n  commentId,\r\n  values,\r\n}) => {\r\n  try {\r\n    const { userData } = store.getState();\r\n    const { user } = userData;\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/posts/${postId}/comments/${commentId}`,\r\n      {\r\n        ...values,\r\n      },\r\n      config\r\n    );\r\n    return data;\r\n    // console.log(postId, commentId, values);\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const createCommentByPostId = async ({ postId, values }) => {\r\n  try {\r\n    const { userData } = store.getState();\r\n    const { user } = userData;\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/posts/${postId}/comments/`,\r\n      {\r\n        ...values,\r\n      },\r\n      config\r\n    );\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n\r\nexport const deleteCommentById = async ({ postId, commentId }) => {\r\n  try {\r\n    const { userData } = store.getState();\r\n    const { user } = userData;\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.delete(\r\n      `/api/posts/${postId}/comments/${commentId}`,\r\n      config\r\n    );\r\n    return data;\r\n  } catch (err) {\r\n    throw new Error(`Error while fetching data. Error Message: ${err.message}`);\r\n  }\r\n};\r\n","import { useFormik } from \"formik\";\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\nimport { createCommentByPostId } from \"../../data/commentQueryFunctions\";\r\nimport { COMMENT_DATA } from \"../../definitions/reactQueryConstants/queryConstants\";\r\nimport * as yup from \"yup\";\r\nimport { Box, Button, makeStyles, TextField } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst validationSchema = yup.object({\r\n  text: yup\r\n    .string(\"Please enter comment text\")\r\n    .required(\"This field is required\"),\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formContent: {\r\n    marginTop: theme.spacing(6),\r\n  },\r\n  hideAlert: {\r\n    display: \"none\",\r\n  },\r\n}));\r\nconst CreateCommentScreen = ({ postId, showSuccessAlertHandler }) => {\r\n  const queryClient = useQueryClient();\r\n  const { user } = useSelector((state) => state.userData);\r\n  const { isLoading, mutate } = useMutation(createCommentByPostId, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(COMMENT_DATA);\r\n      formik.values.text = \"\";\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      text: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      mutate({ postId, values });\r\n    },\r\n  });\r\n  return (\r\n    <Box>\r\n      <Alert severity=\"warning\" className={user._id ? classes.hideAlert : \"\"}>\r\n        You need to be logged in to post comments\r\n      </Alert>\r\n      <form onSubmit={formik.handleSubmit} className={classes.formContent}>\r\n        {user._id ? (\r\n          <>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              id=\"text\"\r\n              name=\"text\"\r\n              label=\"Post a comment\"\r\n              value={formik.values.text}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.text && Boolean(formik.errors.text)}\r\n              helperText={(formik.touched.text && formik.errors.text) || \" \"}\r\n              size=\"small\"\r\n              multiline={true}\r\n              rows={5}\r\n              disabled={!isLoading ? false : true}\r\n            />\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              type=\"submit\"\r\n              disabled={!isLoading ? false : true}\r\n            >\r\n              Save\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              id=\"text\"\r\n              name=\"text\"\r\n              label=\"Post a comment\"\r\n              value={formik.values.text}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.text && Boolean(formik.errors.text)}\r\n              helperText={(formik.touched.text && formik.errors.text) || \" \"}\r\n              size=\"small\"\r\n              multiline={true}\r\n              rows={5}\r\n              disabled={true}\r\n            />\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              type=\"submit\"\r\n              disabled={true}\r\n            >\r\n              Save\r\n            </Button>\r\n          </>\r\n        )}\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CreateCommentScreen;\r\n","import { memo } from \"react\";\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\nimport AdminDeleteConfirmation from \"../../components/AdminDeleteConfirmation\";\r\nimport { deleteCommentById } from \"../../data/commentQueryFunctions\";\r\nimport { COMMENT_DATA } from \"../../definitions/reactQueryConstants/queryConstants\";\r\n\r\nconst DeleteCommentScreen = memo(({ postId, commentId, handleModalClose }) => {\r\n  const queryClient = useQueryClient();\r\n  const mutation = useMutation(deleteCommentById, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(COMMENT_DATA);\r\n      handleModalClose();\r\n    },\r\n  });\r\n  const handleUserDelete = () => {\r\n    mutation.mutate({ postId, commentId });\r\n  };\r\n  return (\r\n    <AdminDeleteConfirmation\r\n      deleteAction={handleUserDelete}\r\n      cancelAction={handleModalClose}\r\n      singleItem={true}\r\n    />\r\n  );\r\n});\r\n\r\nexport default DeleteCommentScreen;\r\n","import { useFormik } from \"formik\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport {\r\n  getCommentByPostIdCommentId,\r\n  updateCommentByPostIdCommentId,\r\n} from \"../../data/commentQueryFunctions\";\r\nimport * as yup from \"yup\";\r\nimport {\r\n  COMMENT_DATA,\r\n  SINGLE_COMMENT_DATA,\r\n} from \"../../definitions/reactQueryConstants/queryConstants\";\r\nimport { Button, makeStyles, TextField } from \"@material-ui/core\";\r\nimport { memo } from \"react\";\r\n\r\nconst validationSchema = yup.object({\r\n  text: yup\r\n    .string(\"Please enter comment text\")\r\n    .required(\"This field is required\"),\r\n});\r\nconst useStyles = makeStyles((theme) => ({\r\n  formContent: {\r\n    marginTop: theme.spacing(6),\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst EditCommentScreen = memo(({ postId, commentId, modalCloseHandler }) => {\r\n  const classes = useStyles();\r\n  const queryClient = useQueryClient();\r\n  const { isLoading, isError, data } = useQuery(\r\n    [SINGLE_COMMENT_DATA, { postId, commentId }],\r\n    ({ queryKey }) => getCommentByPostIdCommentId(queryKey[1])\r\n  );\r\n\r\n  const mutation = useMutation(updateCommentByPostIdCommentId, {\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries(COMMENT_DATA);\r\n      modalCloseHandler();\r\n    },\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      text: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      mutation.mutate({\r\n        postId: postId,\r\n        commentId: commentId,\r\n        values: {\r\n          text: values.text,\r\n        },\r\n      });\r\n    },\r\n  });\r\n  if (!isLoading && !isError) {\r\n    formik.initialValues.text = data.text;\r\n  }\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit} className={classes.formContent}>\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          id=\"text\"\r\n          name=\"text\"\r\n          label=\"Post a comment\"\r\n          value={formik.values.text}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.text && Boolean(formik.errors.text)}\r\n          helperText={(formik.touched.text && formik.errors.text) || \" \"}\r\n          size=\"small\"\r\n          multiline={true}\r\n          rows={5}\r\n        />\r\n        <Button color=\"primary\" variant=\"outlined\" type=\"submit\">\r\n          Save\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default EditCommentScreen;\r\n","import { Grid, makeStyles } from \"@material-ui/core\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  meta: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  image: {\r\n    margin: theme.spacing(8, 0),\r\n  },\r\n  title: {\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  tagsContainer: {\r\n    margin: theme.spacing(6, 0),\r\n  },\r\n  tag: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  socialLinks: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst IndividualPostLoader = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container justifyContent=\"flex-start\">\r\n        <Skeleton variant=\"text\" height={100} width={\"50%\"} />\r\n      </Grid>\r\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Grid item>\r\n          <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Skeleton\r\n                className={classes.avatar}\r\n                variant=\"circle\"\r\n                width={40}\r\n                height={40}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Skeleton variant=\"text\" width={100} />\r\n              <Grid container>\r\n                <Skeleton className={classes.meta} variant=\"text\" width={100} />\r\n                <Skeleton variant=\"text\" width={50} />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item className={classes.socialLinks}>\r\n          <Grid container>\r\n            <Skeleton className={classes.meta} variant=\"rect\" width={25} />\r\n            <Skeleton className={classes.meta} variant=\"rect\" width={25} />\r\n            <Skeleton className={classes.meta} variant=\"rect\" width={25} />\r\n            <Skeleton variant=\"rect\" width={25} />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Skeleton\r\n        className={classes.image}\r\n        variant=\"rect\"\r\n        width={\"100%\"}\r\n        height={400}\r\n      />\r\n      <Grid container justifyContent=\"center\">\r\n        <Skeleton className={classes.title} variant=\"text\" width={\"50%\"} />\r\n      </Grid>\r\n      <Skeleton variant=\"text\" width={\"100%\"} />\r\n      <Skeleton variant=\"text\" width={\"100%\"} />\r\n      <Skeleton variant=\"text\" width={\"100%\"} />\r\n      <Skeleton variant=\"text\" width={\"100%\"} />\r\n      <Skeleton variant=\"text\" width={\"100%\"} />\r\n      <Skeleton variant=\"text\" width={\"100%\"} />\r\n      <Skeleton variant=\"text\" width={\"100%\"} />\r\n      <Skeleton variant=\"text\" width={\"100%\"} />\r\n      <Skeleton variant=\"text\" width={\"100%\"} />\r\n      <Grid\r\n        className={classes.tagsContainer}\r\n        container\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Skeleton className={classes.tag} variant=\"rect\" width={50} />\r\n        <Skeleton className={classes.tag} variant=\"rect\" width={50} />\r\n        <Skeleton className={classes.tag} variant=\"rect\" width={50} />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndividualPostLoader;\r\n","import { Skeleton } from \"@material-ui/lab\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    paddingRight: theme.spacing(2),\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  comment: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst PostCommentLoader = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.container}>\r\n      <Skeleton\r\n        className={classes.comment}\r\n        variant=\"rect\"\r\n        height={100}\r\n        width={\"100%\"}\r\n      />\r\n      <Skeleton\r\n        className={classes.comment}\r\n        variant=\"rect\"\r\n        height={100}\r\n        width={\"100%\"}\r\n      />\r\n      <Skeleton\r\n        className={classes.comment}\r\n        variant=\"rect\"\r\n        height={100}\r\n        width={\"100%\"}\r\n      />\r\n      <Skeleton\r\n        className={classes.comment}\r\n        variant=\"rect\"\r\n        height={100}\r\n        width={\"100%\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostCommentLoader;\r\n","import {\r\n  Avatar,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport PostCommentDeck from \"../../components/PostCommentDeck\";\r\nimport PostTagDeck from \"../../components/PostTagDeck\";\r\nimport { getPostById } from \"../../data/postQueryFunctions\";\r\nimport {\r\n  COMMENT_DATA,\r\n  SINGLE_AUTHOR_DATA,\r\n  SINGLE_POST_DATA,\r\n} from \"../../definitions/reactQueryConstants/queryConstants\";\r\nimport CreateCommentScreen from \"./CreateCommentScreen\";\r\nimport {\r\n  calculateReadingTime,\r\n  convertToText,\r\n  getAuthorNameInitials,\r\n} from \"../../utils/dataFormat\";\r\nimport { getPostFormattedDate } from \"../../utils/dateUtils\";\r\nimport { getBase64ImageURL } from \"../../utils/imageConvertion\";\r\nimport ReactQuill from \"react-quill\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DeleteCommentScreen from \"./DeleteCommentScreen\";\r\nimport AdminModal from \"../../components/AdminModal\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport EditCommentScreen from \"./EditCommentScreen\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport { getUserById } from \"../../data/userQueryFunctions\";\r\nimport IndividualPostLoader from \"../../components/IndividualPostLoader\";\r\nimport PostCommentLoader from \"../../components/PostCommentLoader\";\r\nimport { getCommentsByPostId } from \"../../data/commentQueryFunctions\";\r\nimport { modules } from \"../../definitions/editorModules\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginTop: theme.spacing(8),\r\n  },\r\n  postTitle: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: theme.typography.h3.fontSize,\r\n    },\r\n  },\r\n  authorName: {\r\n    marginLeft: theme.spacing(2),\r\n    textDecoration: \"none\",\r\n  },\r\n  avatar: {\r\n    height: theme.spacing(5),\r\n    width: theme.spacing(5),\r\n    zIndex: -100,\r\n  },\r\n  authorInfoContainer: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  postMeta: {\r\n    color: grey[500],\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  postReadingTime: {\r\n    color: grey[500],\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  postImg: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(8),\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  socialLinks: {\r\n    marginTop: theme.spacing(2),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  postContent: {\r\n    \"& .ql-container\": {\r\n      fontFamily: theme.typography.fontFamily,\r\n      zIndex: theme.zIndex.tooltip,\r\n      fontSize: theme.typography.subtitle1.fontSize,\r\n    },\r\n    \"& .ql-editor\": {\r\n      padding: 0,\r\n      lineHeight: \"2em\",\r\n      textAlign: \"justify\",\r\n    },\r\n  },\r\n  tagsContainer: {\r\n    marginTop: theme.spacing(6),\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  commentsHeader: {\r\n    margin: theme.spacing(4, 0),\r\n  },\r\n  loader: {\r\n    minHeight: \"35vh\",\r\n  },\r\n}));\r\n\r\nconst IndividualPostScreen = () => {\r\n  const [showDeleteCommentModal, setShowDeleteCommentModal] = useState(false);\r\n  const [showEditCommentModal, setShowEditCommentModal] = useState(false);\r\n  const [modificationCommentId, setModificationCommentId] = useState(null);\r\n\r\n  const { postId } = useParams();\r\n  const classes = useStyles();\r\n  const { isLoading, data } = useQuery(\r\n    [SINGLE_POST_DATA, postId],\r\n    ({ queryKey }) => getPostById(queryKey[1]),\r\n    {\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n  const {\r\n    isLoading: isPostCommentLoading,\r\n    data: postCommentData,\r\n    isFetching: isPostCommentFetching,\r\n  } = useQuery(\r\n    [COMMENT_DATA, postId],\r\n    ({ queryKey }) => getCommentsByPostId(queryKey[1]),\r\n    {\r\n      refetchOnWindowFocus: false,\r\n      refetchInterval: 5 * 60 * 1000,\r\n    }\r\n  );\r\n  const authorId = data?.author._id;\r\n  const { isLoading: isAuthorDataLoading, data: authorData } = useQuery(\r\n    [SINGLE_AUTHOR_DATA, authorId],\r\n    ({ queryKey }) => getUserById(queryKey[1]),\r\n    { enabled: !!authorId, refetchOnWindowFocus: false }\r\n  );\r\n  // effects\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  // action handlers\r\n  const handleDeleteComment = (commentId) => {\r\n    setModificationCommentId(commentId);\r\n    setShowDeleteCommentModal(true);\r\n  };\r\n\r\n  const handleEditComment = (commentId) => {\r\n    setModificationCommentId(commentId);\r\n    setShowEditCommentModal(true);\r\n  };\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.container}>\r\n      {isLoading || isAuthorDataLoading ? (\r\n        <Grid\r\n          className={classes.loader}\r\n          container\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <IndividualPostLoader />\r\n        </Grid>\r\n      ) : (\r\n        <>\r\n          <Typography variant=\"h2\" component=\"h1\" className={classes.postTitle}>\r\n            {data.title}\r\n          </Typography>\r\n          <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <Grid\r\n                container\r\n                justifyContent=\"flex-start\"\r\n                alignItems=\"center\"\r\n                className={classes.authorInfoContainer}\r\n              >\r\n                <Grid item>\r\n                  {authorData.imageURL ? (\r\n                    <Avatar\r\n                      alt=\"user profile image\"\r\n                      className={classes.avatar}\r\n                      src={authorData.imageURL}\r\n                    />\r\n                  ) : (\r\n                    <Avatar alt=\"user profile image\" className={classes.avatar}>\r\n                      {getAuthorNameInitials(authorData.name)}\r\n                    </Avatar>\r\n                  )}\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography\r\n                    color=\"primary\"\r\n                    variant=\"subtitle2\"\r\n                    className={classes.authorName}\r\n                    component={Link}\r\n                    to={`/authors/${data.author._id}`}\r\n                  >\r\n                    {data.author.name}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle2\" className={classes.postMeta}>\r\n                    {getPostFormattedDate(data.createdAt)} ·{\" \"}\r\n                    {calculateReadingTime(convertToText(data.description))} min\r\n                    read\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid\r\n                className={classes.socialLinks}\r\n                container\r\n                alignItems=\"center\"\r\n                justifyContent=\"flex-start\"\r\n              >\r\n                <IconButton\r\n                  aria-label=\"email author\"\r\n                  to=\"#\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    window.open(`mailto:${authorData.email}`);\r\n                  }}\r\n                  component={Link}\r\n                  color=\"primary\"\r\n                >\r\n                  <MailIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  aria-label=\"email author\"\r\n                  href={`https://www.facebook.com/${authorData.facebookId}`}\r\n                  component=\"a\"\r\n                  target=\"_blank\"\r\n                  color=\"primary\"\r\n                >\r\n                  <FacebookIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  aria-label=\"email author\"\r\n                  href={`https://twitter.com/${authorData.twitterId}`}\r\n                  component=\"a\"\r\n                  target=\"_blank\"\r\n                  color=\"primary\"\r\n                >\r\n                  <TwitterIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  aria-label=\"email author\"\r\n                  href={`https://www.linkedin.com/in/${authorData.linkedinId}`}\r\n                  component=\"a\"\r\n                  target=\"_blank\"\r\n                  color=\"primary\"\r\n                  edge=\"end\"\r\n                >\r\n                  <LinkedInIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <img className={classes.postImg} src={data.imageURL} alt=\"post\" />\r\n          <ReactQuill\r\n            theme=\"bubble\"\r\n            value={data.description}\r\n            id=\"description\"\r\n            placeholder=\"Description\"\r\n            className={classes.postContent}\r\n            name=\"description\"\r\n            modules={modules}\r\n            readOnly\r\n          />\r\n          <PostTagDeck tags={data.tags} />\r\n          <Divider />\r\n          <Typography\r\n            variant=\"h6\"\r\n            component=\"h2\"\r\n            className={classes.commentsHeader}\r\n            color=\"secondary\"\r\n          >\r\n            See what others say about this post\r\n          </Typography>\r\n          {isPostCommentLoading || isPostCommentFetching ? (\r\n            <PostCommentLoader />\r\n          ) : (\r\n            <PostCommentDeck\r\n              comments={postCommentData}\r\n              postId={postId}\r\n              deleteHandler={(commentId) => handleDeleteComment(commentId)}\r\n              editHandler={(commentId) => handleEditComment(commentId)}\r\n            />\r\n          )}\r\n          <CreateCommentScreen postId={postId} />\r\n        </>\r\n      )}\r\n      {/* modals */}\r\n      <AdminModal\r\n        modalOpenState={showDeleteCommentModal}\r\n        modalCloseHandler={() => setShowDeleteCommentModal(false)}\r\n        modalTitle={\"Delete comment\"}\r\n        modalIcon={<ErrorIcon fontSize=\"large\" color=\"secondary\" />}\r\n      >\r\n        <DeleteCommentScreen\r\n          handleModalClose={() => setShowDeleteCommentModal(false)}\r\n          commentId={modificationCommentId}\r\n          postId={postId}\r\n        />\r\n      </AdminModal>\r\n      <AdminModal\r\n        modalOpenState={showEditCommentModal}\r\n        modalCloseHandler={() => setShowEditCommentModal(false)}\r\n        modalTitle={`Edit comment`}\r\n        modalIcon={<CreateIcon fontSize=\"large\" color=\"secondary\" />}\r\n      >\r\n        <EditCommentScreen\r\n          modalCloseHandler={() => setShowEditCommentModal(false)}\r\n          commentId={modificationCommentId}\r\n          postId={postId}\r\n        />\r\n      </AdminModal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default IndividualPostScreen;\r\n","import {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  cardContent: {\r\n    \"&:last-child\": {\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n  },\r\n  authorName: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  imageContainer: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  authorImage: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"cover\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"70%\",\r\n      height: \"auto\",\r\n    },\r\n  },\r\n  authorMeta: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  socialLinks: {\r\n    marginTop: theme.spacing(2),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  socialLink: {\r\n    marginBottom: theme.spacing(-1),\r\n  },\r\n}));\r\n\r\nconst AuthorSummaryCard = ({ authorData }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card variant=\"outlined\" className={classes.container}>\r\n      <CardContent className={classes.cardContent}>\r\n        <Grid container justifyContent=\"space-between\">\r\n          <Grid item xs={12} sm={2} className={classes.imageContainer}>\r\n            <img\r\n              className={classes.authorImage}\r\n              src={authorData.imageURL}\r\n              alt={authorData.name}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            xs={12}\r\n            sm={9}\r\n            direction=\"column\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Box className={classes.authorMeta}>\r\n              <Typography\r\n                variant=\"h5\"\r\n                component={Link}\r\n                gutterBottom\r\n                to={`/authors/${authorData._id}`}\r\n                className={classes.authorName}\r\n              >\r\n                {authorData.name}\r\n              </Typography>\r\n              <Typography variant=\"body1\" component=\"p\">\r\n                {authorData.bio}\r\n              </Typography>\r\n            </Box>\r\n            <Grid\r\n              className={classes.socialLinks}\r\n              container\r\n              alignItems=\"center\"\r\n              justifyContent=\"flex-start\"\r\n            >\r\n              <IconButton\r\n                className={classes.socialLink}\r\n                aria-label=\"email author\"\r\n                to=\"#\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  window.open(`mailto:${authorData.email}`);\r\n                }}\r\n                component={Link}\r\n                color=\"primary\"\r\n                edge=\"start\"\r\n              >\r\n                <MailIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                className={classes.socialLink}\r\n                aria-label=\"email author\"\r\n                href={`https://www.facebook.com/${authorData.facebookId}`}\r\n                component=\"a\"\r\n                target=\"_blank\"\r\n                color=\"primary\"\r\n              >\r\n                <FacebookIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                className={classes.socialLink}\r\n                aria-label=\"email author\"\r\n                href={`https://twitter.com/${authorData.twitterId}`}\r\n                component=\"a\"\r\n                target=\"_blank\"\r\n                color=\"primary\"\r\n              >\r\n                <TwitterIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                className={classes.socialLink}\r\n                aria-label=\"email author\"\r\n                href={`https://www.linkedin.com/in/${authorData.linkedinId}`}\r\n                component=\"a\"\r\n                target=\"_blank\"\r\n                color=\"primary\"\r\n                edge=\"end\"\r\n              >\r\n                <LinkedInIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AuthorSummaryCard;\r\n","import { Box, makeStyles, Grid } from \"@material-ui/core\";\r\nimport { memo } from \"react\";\r\nimport AuthorSummaryCard from \"./AuthorSummaryCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    margin: theme.spacing(8, 0),\r\n  },\r\n}));\r\n\r\nconst AuthorSummaryCardDeck = memo(({ authorsData }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.container}>\r\n      <Grid container justifyContent=\"space-between\" spacing={2}>\r\n        {authorsData.map((author) => (\r\n          <Grid item xs={12} lg={6}>\r\n            <AuthorSummaryCard key={author._id} authorData={author} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default AuthorSummaryCardDeck;\r\n","import { Skeleton } from \"@material-ui/lab\";\r\n\r\nconst AuthorSummaryCardLoader = () => {\r\n  return <Skeleton variant=\"rect\" width={\"100%\"} height={150} />;\r\n};\r\n\r\nexport default AuthorSummaryCardLoader;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport AuthorSummaryCardLoader from \"./AuthorSummaryCardLoader\";\r\n\r\nconst AuthorSummaryCardLoaderDeck = ({ count }) => {\r\n  return (\r\n    <Grid container justifyContent=\"space-between\" spacing={2}>\r\n      {Array.from(Array(count).keys()).map((_, index) => (\r\n        <Grid item xs={12} lg={6} key={index}>\r\n          <AuthorSummaryCardLoader />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AuthorSummaryCardLoaderDeck;\r\n","import { Divider, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useQuery } from \"react-query\";\r\nimport AuthorSummaryCardDeck from \"../../components/AuthorSummaryCardDeck\";\r\nimport AuthorSummaryCardLoader from \"../../components/AuthorSummaryCardLoader\";\r\nimport AuthorSummaryCardLoaderDeck from \"../../components/AuthorSummaryCardLoaderDeck\";\r\nimport { getAllUsers } from \"../../data/userQueryFunctions\";\r\nimport { USER_DATA } from \"../../definitions/reactQueryConstants/queryConstants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  emptyListMessage: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst AuthorListScreen = () => {\r\n  const classes = useStyles();\r\n  const { data, isLoading, isError } = useQuery(USER_DATA, getAllUsers);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        All authors\r\n      </Typography>\r\n      <Divider />\r\n      {isLoading ? (\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {/* @todo: create skeleton loader */}\r\n          <AuthorSummaryCardLoaderDeck count={6} />\r\n        </Typography>\r\n      ) : isError ? (\r\n        <Typography variant=\"h6\" component=\"h4\" gutterBottom>\r\n          <Alert severity=\"error\">Error occurred while fetching data</Alert>\r\n        </Typography>\r\n      ) : data.length === 0 ? (\r\n        <Typography\r\n          variant=\"body1\"\r\n          component=\"h2\"\r\n          className={classes.emptyListMessage}\r\n        >\r\n          No authors found....\r\n        </Typography>\r\n      ) : (\r\n        <AuthorSummaryCardDeck authorsData={data} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthorListScreen;\r\n","export default __webpack_public_path__ + \"static/media/notFound.fc0d4359.svg\";","import { CircularProgress, Divider, Grid, makeStyles } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ExpandedPostSummaryCard from \"../../components/ExpandedPostSummaryCard\";\r\nimport { getPostByCategoryName } from \"../../data/postQueryFunctions\";\r\nimport { POST_DATA } from \"../../definitions/reactQueryConstants/queryConstants\";\r\nimport { calculateReadingTime } from \"../../utils/dataFormat\";\r\nimport { getPostFormattedDate } from \"../../utils/dateUtils\";\r\nimport { getBase64ImageURL } from \"../../utils/imageConvertion\";\r\nimport notFoundImage from \"../../assets/notFound.svg\";\r\nimport { useEffect } from \"react\";\r\nimport ExpandedPostSummaryLoaderDeck from \"../../components/ExpandedPostSummaryLoaderDeck\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  categoryTitle: {\r\n    marginBottom: theme.spacing(4),\r\n    textTransform: \"capitalize\",\r\n  },\r\n  postsContainer: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  loader: {\r\n    minHeight: \"40vh\",\r\n  },\r\n  notFoundImage: {\r\n    width: \"100%\",\r\n    height: \"40vh\",\r\n  },\r\n}));\r\n\r\nconst PostsByCategoryScreen = () => {\r\n  const classes = useStyles();\r\n  const { categoryName } = useParams();\r\n  const { data, isLoading, isFetching, isError } = useQuery(\r\n    [POST_DATA, { categoryName }],\r\n    ({ queryKey }) => getPostByCategoryName(queryKey[1]),\r\n    {\r\n      refetchOnWindowFocus: false,\r\n      refetchInterval: 10 * 60 * 1000,\r\n    }\r\n  );\r\n\r\n  // effects\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return (\r\n    <section className={classes.container}>\r\n      <Typography\r\n        className={classes.categoryTitle}\r\n        gutterBottom\r\n        variant=\"h3\"\r\n        component=\"h1\"\r\n      >\r\n        {categoryName}\r\n      </Typography>\r\n      <Divider />\r\n      <div className={classes.postsContainer}>\r\n        {isLoading || isFetching ? (\r\n          <ExpandedPostSummaryLoaderDeck count={5} />\r\n        ) : isError ? (\r\n          <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n            <Typography variant=\"h6\" component=\"h4\" gutterBottom>\r\n              <Alert className={classes.root} severity=\"error\">\r\n                Error occurred while fetching data\r\n              </Alert>\r\n            </Typography>\r\n          </Grid>\r\n        ) : data.length < 1 ? (\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item xs={6}>\r\n              <img\r\n                className={classes.notFoundImage}\r\n                src={notFoundImage}\r\n                alt=\"not found\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" component=\"h4\" gutterBottom>\r\n                No posts found under this category\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        ) : (\r\n          data.map((post) => (\r\n            <>\r\n              <ExpandedPostSummaryCard\r\n                key={post._id}\r\n                authorImageURL={post.author.imageURL}\r\n                authorId={post.author._id}\r\n                authorName={post.author.name}\r\n                postTitle={post.title}\r\n                postDescription={post.description}\r\n                postSummary={post.summary}\r\n                postCategory={post.category.title}\r\n                postTags={post.tags}\r\n                postId={post._id}\r\n                postCreationDate={getPostFormattedDate(post.createdAt)}\r\n                postReadingTime={calculateReadingTime(post.description)}\r\n                postImageURL={post.imageURL}\r\n              />\r\n              <Divider />\r\n            </>\r\n          ))\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PostsByCategoryScreen;\r\n","import { CircularProgress, Divider, Grid, makeStyles } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ExpandedPostSummaryCard from \"../../components/ExpandedPostSummaryCard\";\r\nimport { getPostByTagName } from \"../../data/postQueryFunctions\";\r\nimport { POST_DATA } from \"../../definitions/reactQueryConstants/queryConstants\";\r\nimport { calculateReadingTime } from \"../../utils/dataFormat\";\r\nimport { getPostFormattedDate } from \"../../utils/dateUtils\";\r\nimport { getBase64ImageURL } from \"../../utils/imageConvertion\";\r\nimport notFoundImage from \"../../assets/notFound.svg\";\r\nimport { useEffect } from \"react\";\r\nimport ExpandedPostSummaryLoaderDeck from \"../../components/ExpandedPostSummaryLoaderDeck\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  title: {\r\n    marginBottom: theme.spacing(4),\r\n    textTransform: \"capitalize\",\r\n  },\r\n  postsContainer: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  loader: {\r\n    minHeight: \"40vh\",\r\n  },\r\n  notFoundImage: {\r\n    width: \"100%\",\r\n    height: \"40vh\",\r\n  },\r\n}));\r\n\r\nconst PostsByTagScreen = () => {\r\n  const classes = useStyles();\r\n  const { tagName } = useParams();\r\n  const { data, isLoading, isFetching, isError } = useQuery(\r\n    [POST_DATA, { tagName }],\r\n    ({ queryKey }) => getPostByTagName(queryKey[1]),\r\n    {\r\n      refetchOnWindowFocus: false,\r\n      refetchInterval: 10 * 60 * 1000,\r\n    }\r\n  );\r\n\r\n  // effects\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return (\r\n    <section className={classes.container}>\r\n      <Typography\r\n        className={classes.title}\r\n        gutterBottom\r\n        variant=\"h3\"\r\n        component=\"h1\"\r\n      >\r\n        {tagName}\r\n      </Typography>\r\n      <Divider />\r\n      <div className={classes.postsContainer}>\r\n        {isLoading || isFetching ? (\r\n          <ExpandedPostSummaryLoaderDeck count={5} />\r\n        ) : isError ? (\r\n          <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n            <Typography variant=\"h6\" component=\"h4\" gutterBottom>\r\n              <Alert className={classes.root} severity=\"error\">\r\n                Error occurred while fetching data\r\n              </Alert>\r\n            </Typography>\r\n          </Grid>\r\n        ) : data.length < 1 ? (\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item xs={6}>\r\n              <img\r\n                className={classes.notFoundImage}\r\n                src={notFoundImage}\r\n                alt=\"not found\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" component=\"h4\" gutterBottom>\r\n                No posts found under this tag\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        ) : (\r\n          data.map((post) => (\r\n            <>\r\n              <ExpandedPostSummaryCard\r\n                key={post._id}\r\n                authorImageURL={post.author.imageURL}\r\n                authorName={post.author.name}\r\n                authorId={post.author._id}\r\n                postTitle={post.title}\r\n                postDescription={post.description}\r\n                postSummary={post.summary}\r\n                postCategory={post.category.title}\r\n                postTags={post.tags}\r\n                postId={post._id}\r\n                postCreationDate={getPostFormattedDate(post.createdAt)}\r\n                postReadingTime={calculateReadingTime(post.description)}\r\n                postImageURL={post.imageURL}\r\n              />\r\n              <Divider />\r\n            </>\r\n          ))\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PostsByTagScreen;\r\n","import { useQuery } from \"react-query\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getAllPostsByAuthorId } from \"../../data/postQueryFunctions\";\r\nimport { getUserById } from \"../../data/userQueryFunctions\";\r\nimport {\r\n  POST_DATA,\r\n  SINGLE_AUTHOR_DATA,\r\n} from \"../../definitions/reactQueryConstants/queryConstants\";\r\nimport {\r\n  Avatar,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Typography,\r\n  Divider,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport { Alert, Skeleton } from \"@material-ui/lab\";\r\nimport { getBase64ImageURL } from \"../../utils/imageConvertion\";\r\nimport { getAuthorNameInitials } from \"../../utils/dataFormat\";\r\nimport HomeAllPostsDeck from \"../../components/HomeAllPostsDeck\";\r\nimport ExpandedPostSummaryLoaderDeck from \"../../components/ExpandedPostSummaryLoaderDeck\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginTop: theme.spacing(4),\r\n    minHeight: \"45vh\",\r\n  },\r\n  leftContainer: {\r\n    paddingRight: theme.spacing(4),\r\n  },\r\n  rightContainer: {\r\n    borderLeft: `1px solid ${theme.palette.divider}`,\r\n    height: \"inherit\",\r\n    padding: theme.spacing(2, 3),\r\n  },\r\n  postsContainer: {\r\n    maxHeight: \"70vh\",\r\n    overflowY: \"auto\",\r\n    overflowX: \"hidden\",\r\n    padding: theme.spacing(2, 3, 2, 0),\r\n    marginTop: theme.spacing(2),\r\n    \"&::-webkit-scrollbar\": {\r\n      width: \"0.4em\",\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      backgroundColor: grey[200],\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  authorName: {\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  authorNameLoader: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  avatar: {\r\n    height: theme.spacing(10),\r\n    width: theme.spacing(10),\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  socialLinks: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  socialLinkLoaderContainer: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  socialLinkLoader: {\r\n    marginRight: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst AuthorProfileScreen = () => {\r\n  const { authorId } = useParams();\r\n  const classes = useStyles();\r\n\r\n  // effects\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  // data queries\r\n  const {\r\n    data: authorData,\r\n    isLoading: isAuthorDataLoading,\r\n    isError: isAuthorDataError,\r\n  } = useQuery([SINGLE_AUTHOR_DATA, authorId], ({ queryKey }) =>\r\n    getUserById(queryKey[1])\r\n  );\r\n\r\n  const {\r\n    data: authorPostData,\r\n    isLoading: isAuthorPostDataLoading,\r\n    isError: isAuthorPostDataError,\r\n  } = useQuery([POST_DATA, authorId], ({ queryKey }) =>\r\n    getAllPostsByAuthorId(queryKey[1])\r\n  );\r\n\r\n  return (\r\n    <Grid\r\n      className={classes.container}\r\n      container\r\n      justifyContent=\"space-between\"\r\n    >\r\n      <Grid item xs={9} className={classes.leftContainer}>\r\n        {isAuthorDataLoading ? (\r\n          <Skeleton variant=\"text\" height={40} width={\"50%\"} />\r\n        ) : isAuthorDataError ? (\r\n          <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n            <Typography variant=\"h6\" component=\"h4\" gutterBottom>\r\n              <Alert severity=\"error\">Error occurred while fetching data</Alert>\r\n            </Typography>\r\n          </Grid>\r\n        ) : (\r\n          <>\r\n            <Typography\r\n              className={classes.authorName}\r\n              variant=\"h4\"\r\n              component=\"h1\"\r\n              gutterBottom\r\n            >\r\n              {authorData.name}\r\n            </Typography>\r\n            <Divider />\r\n          </>\r\n        )}\r\n        {isAuthorPostDataLoading ? (\r\n          <ExpandedPostSummaryLoaderDeck count={5} />\r\n        ) : isAuthorPostDataError ? (\r\n          <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n            <Typography variant=\"h6\" component=\"h4\" gutterBottom>\r\n              <Alert severity=\"error\">Error occurred while fetching data</Alert>\r\n            </Typography>\r\n          </Grid>\r\n        ) : (\r\n          <Box className={classes.postsContainer}>\r\n            <HomeAllPostsDeck posts={authorPostData} />\r\n          </Box>\r\n        )}\r\n      </Grid>\r\n      <Grid className={classes.rightContainer} item xs={3}>\r\n        {isAuthorDataLoading ? (\r\n          <>\r\n            <Skeleton variant=\"circle\" height={90} width={90} />\r\n            <Skeleton\r\n              className={classes.authorNameLoader}\r\n              variant=\"text\"\r\n              height={20}\r\n              width={\"50%\"}\r\n            />\r\n            <Skeleton variant=\"text\" height={20} width={\"75%\"} />\r\n            <Grid\r\n              container\r\n              alignItems=\"center\"\r\n              justifyContent=\"flex-start\"\r\n              className={classes.socialLinkLoaderContainer}\r\n            >\r\n              <Skeleton\r\n                className={classes.socialLinkLoader}\r\n                variant=\"rect\"\r\n                height={15}\r\n                width={25}\r\n              />\r\n              <Skeleton\r\n                className={classes.socialLinkLoader}\r\n                variant=\"rect\"\r\n                height={15}\r\n                width={25}\r\n              />\r\n              <Skeleton\r\n                className={classes.socialLinkLoader}\r\n                variant=\"rect\"\r\n                height={15}\r\n                width={25}\r\n              />\r\n              <Skeleton\r\n                className={classes.socialLinkLoader}\r\n                variant=\"rect\"\r\n                height={15}\r\n                width={25}\r\n              />\r\n            </Grid>\r\n          </>\r\n        ) : isAuthorDataError ? (\r\n          <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n            <Typography variant=\"h6\" component=\"h4\" gutterBottom>\r\n              <Alert severity=\"error\">Error occurred while fetching data</Alert>\r\n            </Typography>\r\n          </Grid>\r\n        ) : (\r\n          <>\r\n            {authorData.imageURL ? (\r\n              <Avatar\r\n                alt=\"user profile image\"\r\n                className={classes.avatar}\r\n                src={authorData.imageURL}\r\n              />\r\n            ) : (\r\n              <Avatar alt=\"user profile image\" className={classes.avatar}>\r\n                {getAuthorNameInitials(authorData.name)}\r\n              </Avatar>\r\n            )}\r\n            <Typography gutterBottom variant=\"subtitle2\" component=\"h3\">\r\n              {authorData.name}\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"body2\" component=\"p\">\r\n              {authorData.bio}\r\n            </Typography>\r\n            <Grid\r\n              className={classes.socialLinks}\r\n              container\r\n              alignItems=\"center\"\r\n              justifyContent=\"flex-start\"\r\n            >\r\n              <IconButton\r\n                aria-label=\"email author\"\r\n                to=\"#\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  window.open(`mailto:${authorData.email}`);\r\n                }}\r\n                component={Link}\r\n                color=\"primary\"\r\n                edge=\"start\"\r\n              >\r\n                <MailIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                aria-label=\"email author\"\r\n                href={`https://www.facebook.com/${authorData.facebookId}`}\r\n                component=\"a\"\r\n                target=\"_blank\"\r\n                color=\"primary\"\r\n              >\r\n                <FacebookIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                aria-label=\"email author\"\r\n                href={`https://twitter.com/${authorData.twitterId}`}\r\n                component=\"a\"\r\n                target=\"_blank\"\r\n                color=\"primary\"\r\n              >\r\n                <TwitterIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                aria-label=\"email author\"\r\n                href={`https://www.linkedin.com/in/${authorData.linkedinId}`}\r\n                component=\"a\"\r\n                target=\"_blank\"\r\n                color=\"primary\"\r\n              >\r\n                <LinkedInIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AuthorProfileScreen;\r\n","export default __webpack_public_path__ + \"static/media/404.d521774a.svg\";","import { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport NotFoundImg from \"../../assets/404.svg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    padding: theme.spacing(4, 0),\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"70vh\",\r\n  },\r\n  heroText: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  returnLink: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst NotFound = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.container}>\r\n      <img className={classes.image} src={NotFoundImg} alt=\"404\" />\r\n      <Typography\r\n        className={classes.heroText}\r\n        variant=\"h4\"\r\n        component=\"h1\"\r\n        align=\"center\"\r\n      >\r\n        Oops!!! Page Not Found.\r\n      </Typography>\r\n      <Grid container justifyContent=\"center\">\r\n        <Button\r\n          className={classes.returnLink}\r\n          variant=\"text\"\r\n          color=\"primary\"\r\n          component={Link}\r\n          to=\"/\"\r\n        >\r\n          go back to Home Page\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"20vh\",\r\n  },\r\n  imageContainer: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"15vh\",\r\n    objectFit: \"cover\",\r\n    padding: theme.spacing(1),\r\n  },\r\n  authorName: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nconst UserSummaryCard = ({ userProfileImageURL, name, bio, authorId }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.container}>\r\n      <CardContent>\r\n        <Grid container justifyContent=\"space-between\" alignItems=\"flex-start\">\r\n          <Grid item xs={5} className={classes.imageContainer}>\r\n            <img\r\n              className={classes.image}\r\n              src={userProfileImageURL}\r\n              alt=\"user profile\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Typography\r\n              className={classes.authorName}\r\n              component={Link}\r\n              to={`/authors/${authorId}`}\r\n              variant=\"h6\"\r\n              gutterBottom\r\n            >\r\n              {name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">{bio}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserSummaryCard;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport { memo } from \"react\";\r\nimport { getBase64ImageURL } from \"../utils/imageConvertion\";\r\nimport UserSummaryCard from \"./UserSummaryCard\";\r\n\r\nconst UserSummaryCardDeck = memo(({ users }) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      spacing={2}\r\n    >\r\n      {users.map((user) => (\r\n        <Grid item xs={4}>\r\n          <UserSummaryCard\r\n            userProfileImageURL={user.imageURL}\r\n            name={user.name}\r\n            bio={user.bio}\r\n            authorId={user._id}\r\n          />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default UserSummaryCardDeck;\r\n","import {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Divider,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport BlogenLogo from \"../../assets/appIcon.svg\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getLatestUsers } from \"../../data/userQueryFunctions\";\r\nimport { DETAILED_USER_DATA } from \"../../definitions/reactQueryConstants/queryConstants\";\r\nimport UserSummaryCardDeck from \"../../components/UserSummaryCardDeck\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport UserModal from \"../../components/UserModal\";\r\nimport LoginScreen from \"./LoginScreen\";\r\nimport RegisterScreen from \"./RegisterScreen\";\r\nimport { useCallback, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bold: {\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  header: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(8),\r\n  },\r\n  headerText: {\r\n    padding: theme.spacing(4, 0),\r\n    textAlign: \"justify\",\r\n    lineHeight: theme.typography.pxToRem(30),\r\n  },\r\n  logo: {\r\n    width: \"50%\",\r\n  },\r\n  bgPrimary: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.getContrastText(theme.palette.primary.main),\r\n  },\r\n  bgDark: {\r\n    backgroundColor: grey[900],\r\n    color: theme.palette.getContrastText(grey[900]),\r\n  },\r\n  sectionText: {\r\n    padding: theme.spacing(2, 0),\r\n    textAlign: \"center\",\r\n    lineHeight: theme.typography.pxToRem(30),\r\n  },\r\n  section: {\r\n    margin: theme.spacing(6, 0),\r\n    padding: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst AboutUsScreen = () => {\r\n  const classes = useStyles();\r\n\r\n  // states\r\n  const [openLoginModal, setOpenLoginModal] = useState(false);\r\n  const [openRegistrationModal, setOpenRegistrationModal] = useState(false);\r\n\r\n  // data queries\r\n  const { data, isLoading, isError } = useQuery(\r\n    DETAILED_USER_DATA,\r\n    getLatestUsers,\r\n    {\r\n      refetchOnWindowFocus: false,\r\n      refetchInterval: 10 * 60 * 1000,\r\n    }\r\n  );\r\n\r\n  // handlers\r\n  const handleLoginModalOpen = useCallback(() => {\r\n    setOpenLoginModal(true);\r\n  }, []);\r\n  const handleLoginModalClose = useCallback(() => {\r\n    setOpenLoginModal(false);\r\n  }, []);\r\n  const handleRegistrationModalOpen = useCallback(() => {\r\n    setOpenRegistrationModal(true);\r\n  }, []);\r\n  const handleRegistrationModalClose = useCallback(() => {\r\n    setOpenRegistrationModal(false);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Typography\r\n        className={classes.header}\r\n        component=\"h1\"\r\n        variant=\"h2\"\r\n        gutterBottom\r\n      >\r\n        Everyone needs a <span className={classes.bold}>blog</span>\r\n      </Typography>\r\n      <Divider />\r\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Grid item xs={6}>\r\n          <Typography\r\n            className={classes.headerText}\r\n            variant=\"body2\"\r\n            gutterBottom\r\n          >\r\n            Our thoughts define ourselves. Blogen is where those our thoughts\r\n            get to meet reality, flow, and create insightful conversations.\r\n            We’re a sharing platform where readers can come to find insightful\r\n            and dynamic thinking of other inquisitive minds. Here, expert and\r\n            undiscovered voices alike dive into the heart of any topic and spark\r\n            new ideas come to the surface. Our purpose is to spread the thoughts\r\n            of people and deepen understanding of the world among our readers.\r\n            We’re pioneering a new way for digital publishing. One that supports\r\n            nuance, complexity, and vital storytelling. This is an environment\r\n            that is available to everyone, regardless of background. We’re a\r\n            community of people who share the same passion for the world. We're\r\n            promoter substance and authenticity. Blogen is the place where\r\n            deeper connections forged between readers and writers can lead to\r\n            discovery and growth. Together with all our collaborators, we’re\r\n            building a trusted and vibrant ecosystem fueled by important ideas\r\n            and the people who think about them.\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Grid container justifyContent=\"center\">\r\n            <img className={classes.logo} src={BlogenLogo} alt=\"logo\" />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {/* users */}\r\n      <Box className={[classes.bgPrimary, classes.section].join(\" \")}>\r\n        <Typography variant=\"h3\" component=\"h2\" gutterBottom align=\"center\">\r\n          A Hive of Curious Minds\r\n        </Typography>\r\n        <Grid container justifyContent=\"center\">\r\n          <Grid item xs={6}>\r\n            <Typography\r\n              className={classes.sectionText}\r\n              variant=\"body1\"\r\n              component=\"p\"\r\n              align=\"center\"\r\n            >\r\n              Anyone can write on Blogen. Thinkers, experts, people with a\r\n              unique perspective share their thoughts and ideas here. You'll\r\n              find people from all around the globe on Blogen.\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        {isLoading ? (\r\n          <>\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n              <CircularProgress color=\"secondary\" />\r\n            </Grid>\r\n          </>\r\n        ) : isError ? (\r\n          <>\r\n            <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n              <Typography variant=\"h6\" component=\"h4\" gutterBottom>\r\n                <Alert severity=\"error\">\r\n                  Error occurred while fetching data\r\n                </Alert>\r\n              </Typography>\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <UserSummaryCardDeck users={data} />\r\n        )}\r\n      </Box>\r\n      {/* CTA for account creation */}\r\n      <Box className={[classes.section, classes.bgDark].join(\" \")}>\r\n        <Typography variant=\"h3\" component=\"h2\" gutterBottom align=\"center\">\r\n          Make Blogen the place for your thoughts to take off\r\n        </Typography>\r\n        <Grid container justifyContent=\"center\">\r\n          <Grid item xs={6}>\r\n            <Typography className={classes.sectionText} variant=\"body1\">\r\n              An empty page is also the starting point of a great idea. Blogen\r\n              is the place where you can walk through it. Here it is very easy\r\n              and completely free to share your thoughts on any subject, connect\r\n              with people and express yourself with a range of publishing\r\n              options.\r\n            </Typography>\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n              <Button\r\n                onClick={handleRegistrationModalOpen}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n              >\r\n                Write on Blogen\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      {/* Modals */}\r\n      <UserModal open={openLoginModal} onClose={handleLoginModalClose}>\r\n        <LoginScreen\r\n          openRegistrationModal={handleRegistrationModalOpen}\r\n          handleModalClose={handleLoginModalClose}\r\n        />\r\n      </UserModal>\r\n      <UserModal\r\n        open={openRegistrationModal}\r\n        onClose={handleRegistrationModalClose}\r\n        expanded={true}\r\n      >\r\n        <RegisterScreen\r\n          openLoginModal={handleLoginModalOpen}\r\n          handleModalClose={handleRegistrationModalClose}\r\n        />\r\n      </UserModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AboutUsScreen;\r\n","import { Box, Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useQuery } from \"react-query\";\r\nimport CategoryLoaderDeck from \"../../components/CategoryLoaderDeck\";\r\nimport HomeCategoriesDeck from \"../../components/HomeCategoriesDeck\";\r\nimport { getAllCategories } from \"../../data/categoryQueryFunctions\";\r\nimport { CATEGORY_DATA } from \"../../definitions/reactQueryConstants/queryConstants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  categoriesContainer: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst CategoryListScreen = () => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    data: allCategoryData,\r\n    isLoading: allCategoryDataLoading,\r\n    isFetching: allCategoryDataFectching,\r\n    isError: allCategoryDataError,\r\n  } = useQuery(CATEGORY_DATA, getAllCategories, {\r\n    refetchOnWindowFocus: false,\r\n    refetchInterval: 10 * 60 * 1000,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        All categories\r\n      </Typography>\r\n      <Divider />\r\n      <Box className={classes.categoriesContainer}>\r\n        {allCategoryDataLoading || allCategoryDataFectching ? (\r\n          <CategoryLoaderDeck count={8} />\r\n        ) : allCategoryDataError ? (\r\n          <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n            <Typography variant=\"h6\" component=\"h4\" gutterBottom>\r\n              <Alert severity=\"error\">Error occurred while fetching data</Alert>\r\n            </Typography>\r\n          </Grid>\r\n        ) : (\r\n          <Grid container>\r\n            <HomeCategoriesDeck categories={allCategoryData} />\r\n          </Grid>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryListScreen;\r\n","import { Divider, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ExpandedPostSummaryCard from \"../../components/ExpandedPostSummaryCard\";\r\nimport { searchPostResults, searchPosts } from \"../../data/postQueryFunctions\";\r\nimport {\r\n  SEARCH_POST_DATA,\r\n  SEARCH_POST_DATA_RESULTS,\r\n} from \"../../definitions/reactQueryConstants/queryConstants\";\r\nimport { calculateReadingTime } from \"../../utils/dataFormat\";\r\nimport { getPostFormattedDate } from \"../../utils/dateUtils\";\r\nimport notFoundImage from \"../../assets/notFound.svg\";\r\nimport ExpandedPostSummaryLoaderDeck from \"../../components/ExpandedPostSummaryLoaderDeck\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  title: {\r\n    marginBottom: theme.spacing(4),\r\n    textTransform: \"capitalize\",\r\n  },\r\n  postsContainer: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  loader: {\r\n    minHeight: \"40vh\",\r\n  },\r\n  notFoundImage: {\r\n    width: \"100%\",\r\n    height: \"40vh\",\r\n  },\r\n}));\r\n\r\nconst SearchResultScreen = () => {\r\n  const { searchQuery } = useParams();\r\n  console.log(searchQuery);\r\n  const classes = useStyles();\r\n\r\n  const { isLoading, isFetching, isError, data } = useQuery(\r\n    [SEARCH_POST_DATA_RESULTS, searchQuery],\r\n    ({ queryKey }) => searchPostResults(queryKey[1]),\r\n    {\r\n      refetchOnWindowFocus: false,\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Search Result\r\n      </Typography>\r\n      <Divider />\r\n      <div className={classes.postsContainer}>\r\n        {isLoading || isFetching ? (\r\n          <ExpandedPostSummaryLoaderDeck count={5} />\r\n        ) : isError ? (\r\n          <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n            <Typography variant=\"h6\" component=\"h4\" gutterBottom>\r\n              <Alert className={classes.root} severity=\"error\">\r\n                Error occurred while fetching data\r\n              </Alert>\r\n            </Typography>\r\n          </Grid>\r\n        ) : data.length < 1 ? (\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item xs={6}>\r\n              <img\r\n                className={classes.notFoundImage}\r\n                src={notFoundImage}\r\n                alt=\"not found\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h5\" component=\"h4\" gutterBottom>\r\n                No posts found under the search query\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        ) : (\r\n          data.map((post) => (\r\n            <>\r\n              <ExpandedPostSummaryCard\r\n                key={post._id}\r\n                authorImageURL={post.author.imageURL}\r\n                authorName={post.author.name}\r\n                authorId={post.author._id}\r\n                postTitle={post.title}\r\n                postDescription={post.description}\r\n                postSummary={post.summary}\r\n                postCategory={post.category.title}\r\n                postTags={post.tags}\r\n                postId={post._id}\r\n                postCreationDate={getPostFormattedDate(post.createdAt)}\r\n                postReadingTime={calculateReadingTime(post.description)}\r\n                postImageURL={post.imageURL}\r\n              />\r\n              <Divider />\r\n            </>\r\n          ))\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchResultScreen;\r\n","import { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { store } from \"./redux/store\";\nimport AdminHomeScreen from \"./screens/admin/dashboard/AdminHomeScreen\";\nimport HomeScreen from \"./screens/general/HomeScreen\";\nimport theme from \"./theme/theme\";\nimport AdminLayout from \"./layout/AdminLayout\";\nimport AdminUsers from \"./screens/admin/users/AdminUsers\";\nimport AdminCategories from \"./screens/admin/categories/AdminCategories\";\nimport AdminPosts from \"./screens/admin/posts/AdminPosts\";\nimport CreatePostScreen from \"./screens/admin/posts/CreatePostScreen\";\nimport EditPostScreen from \"./screens/admin/posts/EditPostScreen\";\nimport AdminProfile from \"./screens/admin/profile/AdminProfile\";\nimport UserDashboard from \"./screens/user/Dashboard/UserDashboard\";\nimport UserLayout from \"./layout/UserLayout\";\nimport UserPosts from \"./screens/user/posts/UserPosts\";\nimport UserProfile from \"./screens/user/profile/UserProfile\";\nimport UserCreatePostScreen from \"./screens/user/posts/UserCreatePostScreen\";\nimport EditUserPostScreen from \"./screens/user/posts/EditUserPostScreen\";\nimport GeneralLayout from \"./layout/GeneralLayout\";\nimport IndividualPostScreen from \"./screens/general/IndividualPostScreen\";\nimport AuthorListScreen from \"./screens/general/AuthorListScreen\";\nimport PostsByCategoryScreen from \"./screens/general/PostsByCategoryScreen\";\nimport PostsByTagScreen from \"./screens/general/PostByTagScreen\";\nimport AuthorProfileScreen from \"./screens/general/AuthorProfileScreen\";\nimport NotFound from \"./screens/general/NotFound\";\nimport AboutUsScreen from \"./screens/general/AboutUsScreen\";\nimport CategoryListScreen from \"./screens/general/CategoryListScreen\";\nimport SearchResultScreen from \"./screens/general/SearchResultScreen\";\n\nconst App = () => {\n  const client = new QueryClient();\n  return (\n    <Provider store={store}>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <Router>\n            <Switch>\n              <Route path=\"/user\">\n                <UserLayout>\n                  <Route\n                    exact\n                    path=\"/user/dashboard\"\n                    component={UserDashboard}\n                  />\n                  <Route exact path=\"/user/posts\" component={UserPosts} />\n                  <Route\n                    exact\n                    path=\"/user/posts/create\"\n                    component={UserCreatePostScreen}\n                  />\n                  <Route path=\"/user/profile\" component={UserProfile} />\n                  <Route\n                    path=\"/user/posts/edit/:editPostId\"\n                    component={EditUserPostScreen}\n                  />\n                </UserLayout>\n              </Route>\n              <Route path=\"/admin\">\n                <AdminLayout>\n                  <Route exact path=\"/admin\" component={AdminHomeScreen} />\n                  <Route path=\"/admin/users\" component={AdminUsers} />\n                  <Route path=\"/admin/categories\" component={AdminCategories} />\n                  <Route\n                    path=\"/admin/posts/create\"\n                    component={CreatePostScreen}\n                    exact\n                  />\n                  <Route\n                    path=\"/admin/posts/edit/:editPostId\"\n                    component={EditPostScreen}\n                  />\n                  <Route path=\"/admin/posts\" component={AdminPosts} exact />\n                  <Route path=\"/admin/profile\" component={AdminProfile} />\n                </AdminLayout>\n              </Route>\n              <Route\n                exact\n                path={[\n                  \"/\",\n                  \"/posts/:postId\",\n                  \"/authors\",\n                  \"/authors/:authorId\",\n                  \"/posts/search/categories/:categoryName\",\n                  \"/posts/search/tags/:tagName\",\n                  \"/about\",\n                  \"/categories\",\n                  \"/search/:searchQuery\",\n                ]}\n              >\n                <GeneralLayout>\n                  <Route exact path=\"/\" component={HomeScreen} />\n                  <Route\n                    exact\n                    path=\"/posts/:postId\"\n                    component={IndividualPostScreen}\n                  />\n                  <Route exact path=\"/authors\" component={AuthorListScreen} />\n                  <Route\n                    exact\n                    path=\"/posts/search/categories/:categoryName\"\n                    component={PostsByCategoryScreen}\n                  />\n                  <Route\n                    exact\n                    path=\"/posts/search/tags/:tagName\"\n                    component={PostsByTagScreen}\n                  />\n                  <Route\n                    exact\n                    path=\"/authors/:authorId\"\n                    component={AuthorProfileScreen}\n                  />\n                  <Route exact path=\"/about\" component={AboutUsScreen} />\n                  <Route\n                    exact\n                    path=\"/categories\"\n                    component={CategoryListScreen}\n                  />\n                  <Route\n                    exact\n                    path=\"/search/:searchQuery\"\n                    component={SearchResultScreen}\n                  />\n                </GeneralLayout>\n              </Route>\n              <Route path=\"*\" component={NotFound} />\n            </Switch>\n          </Router>\n        </ThemeProvider>\n        <ReactQueryDevtools initialIsOpen={false} position=\"bottom-right\" />\n      </QueryClientProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}